function _precompile_()
    ccall(:jl_generating_output, Cint, ()) == 1 || return nothing
    precompile(Tuple{Type{Array{QuantumAlgebra.BaseOperator,1}},UndefInitializer,Int64})
    precompile(Tuple{Type{Array{Tuple{QuantumAlgebra.Operator,QuantumAlgebra.Operator},1}},UndefInitializer,Int64})
    precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1},Axes,F,Args} where Args<:Tuple where F where Axes},Type{ExpVal},Tuple{Array{a{Tuple{Int64}},1}}})
    precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple},Axes,F,Args} where Args<:Tuple where F where Axes},typeof(QuantumAlgebra.sortsentinel),Tuple{Tuple{Int64,Symbol}}})
    precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple},Axes,F,Args} where Args<:Tuple where F where Axes},typeof(QuantumAlgebra.sortsentinel),Tuple{Tuple{Symbol,Symbol}}})
    precompile(Tuple{Type{Corr},adag{Tuple{Int64}}})
    precompile(Tuple{Type{Corr},scal{Int64}})
    precompile(Tuple{Type{ExpVal},OpSumAnalytic})
    precompile(Tuple{Type{ExpVal},QuantumAlgebra.OpProd})
    precompile(Tuple{Type{ExpVal},QuantumAlgebra.OpSum})
    precompile(Tuple{Type{ExpVal},QuantumAlgebra.σminus{Tuple{Symbol}}})
    precompile(Tuple{Type{ExpVal},QuantumAlgebra.σplus{Tuple{Int64}}})
    precompile(Tuple{Type{ExpVal},QuantumAlgebra.σplus{Tuple{Symbol}}})
    precompile(Tuple{Type{ExpVal},QuantumAlgebra.σ{Tuple{Int64}}})
    precompile(Tuple{Type{ExpVal},QuantumAlgebra.σ{Tuple{Symbol}}})
    precompile(Tuple{Type{ExpVal},adag{Tuple{Int64,Symbol}}})
    precompile(Tuple{Type{ExpVal},adag{Tuple{Int64}}})
    precompile(Tuple{Type{ExpVal},adag{Tuple{Symbol}}})
    precompile(Tuple{Type{ExpVal},a{Tuple{Symbol}}})
    precompile(Tuple{Type{ExpVal},scal{Int64}})
    precompile(Tuple{Type{OpSumAnalytic},Symbol,Corr})
    precompile(Tuple{Type{OpSumAnalytic},Symbol,OpSumAnalytic})
    precompile(Tuple{Type{OpSumAnalytic},Symbol,QuantumAlgebra.σplus{Tuple{Symbol}}})
    precompile(Tuple{Type{OpSumAnalytic},Symbol,QuantumAlgebra.σ{Tuple{Symbol}}})
    precompile(Tuple{Type{OpSumAnalytic},Symbol,a{Tuple{Symbol}}})
    precompile(Tuple{Type{OpSumAnalytic},Symbol,scal{Int64}})
    precompile(Tuple{Type{OpSumAnalytic},Symbol,δ})
    precompile(Tuple{Type{QuantumAlgebra.OpProdIter{false}},QuantumAlgebra.OpProd})
    precompile(Tuple{Type{QuantumAlgebra.OpProdIter{true}},QuantumAlgebra.OpProd})
    precompile(Tuple{Type{QuantumAlgebra.σ},QuantumAlgebra.SpatialIndex,Symbol,Vararg{Symbol,N} where N})
    precompile(Tuple{Type{adag},Int64,Vararg{Union{Int64, Symbol},N} where N})
    precompile(Tuple{Type{adag},Int64})
    precompile(Tuple{Type{adag},Symbol,Vararg{Symbol,N} where N})
    precompile(Tuple{Type{adag},Symbol})
    precompile(Tuple{Type{a},Int64,Vararg{Union{Int64, Symbol},N} where N})
    precompile(Tuple{Type{a},Int64})
    precompile(Tuple{Type{a},Symbol,Vararg{Symbol,N} where N})
    precompile(Tuple{Type{a},Symbol})
    precompile(Tuple{Type{a}})
    precompile(Tuple{Type{fdag},Symbol,Vararg{Symbol,N} where N})
    precompile(Tuple{Type{fdag},Symbol})
    precompile(Tuple{Type{f},Symbol})
    precompile(Tuple{Type{f}})
    precompile(Tuple{Type{param},Symbol,Char,Int64,Vararg{Union{Int64, Symbol},N} where N})
    precompile(Tuple{Type{param},Symbol,Char,Symbol,Vararg{Union{Int64, Symbol},N} where N})
    precompile(Tuple{Type{param},Symbol,Char,Tuple{Int64,Symbol}})
    precompile(Tuple{Type{param},Symbol,Char,Tuple{Symbol,Int64,Symbol}})
    precompile(Tuple{Type{param},Symbol,Char,Tuple{Symbol,Symbol,Int64}})
    precompile(Tuple{Type{param},Symbol,Int64})
    precompile(Tuple{Type{param},Symbol,Symbol,Vararg{Union{Int64, Symbol},N} where N})
    precompile(Tuple{Type{param},Symbol,Symbol})
    precompile(Tuple{Type{param},Symbol,Tuple{}})
    precompile(Tuple{Type{param},Symbol})
    precompile(Tuple{Type{scal},Complex{Rational{Int64}}})
    precompile(Tuple{Type{δ},Int64,Symbol})
    precompile(Tuple{typeof(!=),OpSumAnalytic,OpSumAnalytic})
    precompile(Tuple{typeof(!=),QuantumAlgebra.OpProd,QuantumAlgebra.OpProd})
    precompile(Tuple{typeof(!=),QuantumAlgebra.OpSum,QuantumAlgebra.OpProd})
    precompile(Tuple{typeof(!=),QuantumAlgebra.OpSum,QuantumAlgebra.OpSum})
    precompile(Tuple{typeof(!=),QuantumAlgebra.σ{Tuple{Int64}},QuantumAlgebra.σ{Tuple{Int64}}})
    precompile(Tuple{typeof(!=),QuantumAlgebra.σ{Tuple{Symbol,Symbol}},QuantumAlgebra.σ{Tuple{Symbol,Symbol}}})
    precompile(Tuple{typeof(!=),QuantumAlgebra.σ{Tuple{Symbol}},QuantumAlgebra.σ{Tuple{Symbol}}})
    precompile(Tuple{typeof(!=),Tuple{a{Tuple{Int64}},a{Tuple{Int64}}},Tuple{a{Tuple{Int64}},a{Tuple{Int64}}}})
    precompile(Tuple{typeof(!=),adag{Tuple{Symbol}},adag{Tuple{Symbol}}})
    precompile(Tuple{typeof(!=),scal{Complex{Rational{Int64}}},scal{Complex{Rational{Int64}}}})
    precompile(Tuple{typeof(!=),scal{Float64},scal{Float64}})
    precompile(Tuple{typeof(!=),scal{Int64},QuantumAlgebra.σminus{Tuple{Int64}}})
    precompile(Tuple{typeof(!=),scal{Int64},QuantumAlgebra.σminus{Tuple{Symbol}}})
    precompile(Tuple{typeof(!=),scal{Int64},QuantumAlgebra.σ{Tuple{Int64}}})
    precompile(Tuple{typeof(!=),scal{Int64},a{Tuple{Int64}}})
    precompile(Tuple{typeof(!=),scal{Int64},a{Tuple{Symbol}}})
    precompile(Tuple{typeof(!=),scal{Rational{Int64}},scal{Rational{Int64}}})
    precompile(Tuple{typeof(!=),δ,δ})
    precompile(Tuple{typeof(*),Corr,Corr})
    precompile(Tuple{typeof(*),Corr,ExpVal,ExpVal})
    precompile(Tuple{typeof(*),Corr,QuantumAlgebra.OpProd})
    precompile(Tuple{typeof(*),ExpVal,Corr})
    precompile(Tuple{typeof(*),ExpVal,ExpVal,Corr})
    precompile(Tuple{typeof(*),ExpVal,ExpVal,ExpVal,ExpVal})
    precompile(Tuple{typeof(*),ExpVal,ExpVal,ExpVal})
    precompile(Tuple{typeof(*),ExpVal,ExpVal})
    precompile(Tuple{typeof(*),ExpVal,QuantumAlgebra.OpProd})
    precompile(Tuple{typeof(*),ExpVal,QuantumAlgebra.σplus{Tuple{Symbol}}})
    precompile(Tuple{typeof(*),ExpVal,QuantumAlgebra.σ{Tuple{Symbol}}})
    precompile(Tuple{typeof(*),ExpVal,adag{Tuple{Int64}}})
    precompile(Tuple{typeof(*),Float64,δ})
    precompile(Tuple{typeof(*),Int64,a{Tuple{}}})
    precompile(Tuple{typeof(*),OpSumAnalytic,OpSumAnalytic})
    precompile(Tuple{typeof(*),OpSumAnalytic,param{Tuple{Symbol}}})
    precompile(Tuple{typeof(*),OpSumAnalytic,scal{Int64}})
    precompile(Tuple{typeof(*),QuantumAlgebra.OpProd,OpSumAnalytic})
    precompile(Tuple{typeof(*),QuantumAlgebra.OpProd,QuantumAlgebra.OpProd})
    precompile(Tuple{typeof(*),QuantumAlgebra.OpProd,QuantumAlgebra.σminus{Tuple{Symbol,Symbol}}})
    precompile(Tuple{typeof(*),QuantumAlgebra.OpProd,QuantumAlgebra.σplus{Tuple{Int64}}})
    precompile(Tuple{typeof(*),QuantumAlgebra.OpProd,a{Tuple{Symbol}}})
    precompile(Tuple{typeof(*),QuantumAlgebra.OpProd,param{Tuple{Symbol}}})
    precompile(Tuple{typeof(*),QuantumAlgebra.OpProd,scal{Float64}})
    precompile(Tuple{typeof(*),QuantumAlgebra.OpSum,QuantumAlgebra.OpSum,QuantumAlgebra.OpSum})
    precompile(Tuple{typeof(*),QuantumAlgebra.OpSum,QuantumAlgebra.OpSum})
    precompile(Tuple{typeof(*),QuantumAlgebra.OpSum,QuantumAlgebra.σ{Tuple{Int64}}})
    precompile(Tuple{typeof(*),QuantumAlgebra.OpSum,adag{Tuple{Symbol}},a{Tuple{Symbol}}})
    precompile(Tuple{typeof(*),QuantumAlgebra.σminus{Tuple{Int64,Symbol}},QuantumAlgebra.σplus{Tuple{}}})
    precompile(Tuple{typeof(*),QuantumAlgebra.σminus{Tuple{Int64}},QuantumAlgebra.σminus{Tuple{Int64}}})
    precompile(Tuple{typeof(*),QuantumAlgebra.σminus{Tuple{Int64}},QuantumAlgebra.σplus{Tuple{Int64}}})
    precompile(Tuple{typeof(*),QuantumAlgebra.σminus{Tuple{Int64}},adag{Tuple{Int64}}})
    precompile(Tuple{typeof(*),QuantumAlgebra.σminus{Tuple{Int64}},a{Tuple{Int64}}})
    precompile(Tuple{typeof(*),QuantumAlgebra.σminus{Tuple{Int64}},scal{Complex{Int64}}})
    precompile(Tuple{typeof(*),QuantumAlgebra.σminus{Tuple{Int64}},scal{Int64}})
    precompile(Tuple{typeof(*),QuantumAlgebra.σminus{Tuple{Symbol,Symbol}},QuantumAlgebra.OpProd})
    precompile(Tuple{typeof(*),QuantumAlgebra.σminus{Tuple{Symbol,Symbol}},QuantumAlgebra.OpSum})
    precompile(Tuple{typeof(*),QuantumAlgebra.σminus{Tuple{Symbol,Symbol}},QuantumAlgebra.σminus{Tuple{Symbol,Symbol}}})
    precompile(Tuple{typeof(*),QuantumAlgebra.σminus{Tuple{Symbol,Symbol}},QuantumAlgebra.σplus{Tuple{Symbol,Symbol}}})
    precompile(Tuple{typeof(*),QuantumAlgebra.σminus{Tuple{Symbol,Symbol}},scal{Int64}})
    precompile(Tuple{typeof(*),QuantumAlgebra.σminus{Tuple{Symbol}},QuantumAlgebra.OpProd})
    precompile(Tuple{typeof(*),QuantumAlgebra.σminus{Tuple{Symbol}},QuantumAlgebra.OpSum})
    precompile(Tuple{typeof(*),QuantumAlgebra.σminus{Tuple{Symbol}},QuantumAlgebra.σminus{Tuple{Symbol}}})
    precompile(Tuple{typeof(*),QuantumAlgebra.σminus{Tuple{Symbol}},QuantumAlgebra.σplus{Tuple{Symbol}}})
    precompile(Tuple{typeof(*),QuantumAlgebra.σminus{Tuple{Symbol}},adag{Tuple{Int64}}})
    precompile(Tuple{typeof(*),QuantumAlgebra.σminus{Tuple{Symbol}},scal{Complex{Int64}}})
    precompile(Tuple{typeof(*),QuantumAlgebra.σminus{Tuple{Symbol}},scal{Int64}})
    precompile(Tuple{typeof(*),QuantumAlgebra.σminus{Tuple{}},QuantumAlgebra.OpProd})
    precompile(Tuple{typeof(*),QuantumAlgebra.σminus{Tuple{}},QuantumAlgebra.σminus{Tuple{}}})
    precompile(Tuple{typeof(*),QuantumAlgebra.σminus{Tuple{}},QuantumAlgebra.σplus{Tuple{}}})
    precompile(Tuple{typeof(*),QuantumAlgebra.σminus{Tuple{}},scal{Int64}})
    precompile(Tuple{typeof(*),QuantumAlgebra.σplus{Tuple{Int64}},Corr})
    precompile(Tuple{typeof(*),QuantumAlgebra.σplus{Tuple{Int64}},ExpVal})
    precompile(Tuple{typeof(*),QuantumAlgebra.σplus{Tuple{Int64}},QuantumAlgebra.OpProd})
    precompile(Tuple{typeof(*),QuantumAlgebra.σplus{Tuple{Int64}},QuantumAlgebra.OpSum})
    precompile(Tuple{typeof(*),QuantumAlgebra.σplus{Tuple{Int64}},QuantumAlgebra.σplus{Tuple{Int64}}})
    precompile(Tuple{typeof(*),QuantumAlgebra.σplus{Tuple{Int64}},adag{Tuple{Int64}}})
    precompile(Tuple{typeof(*),QuantumAlgebra.σplus{Tuple{Int64}},a{Tuple{Int64}}})
    precompile(Tuple{typeof(*),QuantumAlgebra.σplus{Tuple{Int64}},scal{Complex{Int64}}})
    precompile(Tuple{typeof(*),QuantumAlgebra.σplus{Tuple{Int64}},scal{Int64}})
    precompile(Tuple{typeof(*),QuantumAlgebra.σplus{Tuple{Symbol,Symbol}},QuantumAlgebra.OpProd})
    precompile(Tuple{typeof(*),QuantumAlgebra.σplus{Tuple{Symbol,Symbol}},QuantumAlgebra.OpSum})
    precompile(Tuple{typeof(*),QuantumAlgebra.σplus{Tuple{Symbol,Symbol}},QuantumAlgebra.σminus{Tuple{Symbol,Symbol}}})
    precompile(Tuple{typeof(*),QuantumAlgebra.σplus{Tuple{Symbol,Symbol}},QuantumAlgebra.σplus{Tuple{Symbol,Symbol}}})
    precompile(Tuple{typeof(*),QuantumAlgebra.σplus{Tuple{Symbol,Symbol}},scal{Int64}})
    precompile(Tuple{typeof(*),QuantumAlgebra.σplus{Tuple{Symbol}},QuantumAlgebra.OpProd})
    precompile(Tuple{typeof(*),QuantumAlgebra.σplus{Tuple{Symbol}},QuantumAlgebra.OpSum})
    precompile(Tuple{typeof(*),QuantumAlgebra.σplus{Tuple{Symbol}},QuantumAlgebra.σplus{Tuple{Symbol}}})
    precompile(Tuple{typeof(*),QuantumAlgebra.σplus{Tuple{Symbol}},adag{Tuple{Int64}}})
    precompile(Tuple{typeof(*),QuantumAlgebra.σplus{Tuple{Symbol}},a{Tuple{Int64}}})
    precompile(Tuple{typeof(*),QuantumAlgebra.σplus{Tuple{Symbol}},scal{Complex{Int64}}})
    precompile(Tuple{typeof(*),QuantumAlgebra.σplus{Tuple{Symbol}},scal{Int64}})
    precompile(Tuple{typeof(*),QuantumAlgebra.σplus{Tuple{}},QuantumAlgebra.OpProd})
    precompile(Tuple{typeof(*),QuantumAlgebra.σplus{Tuple{}},QuantumAlgebra.σminus{Tuple{Symbol,Symbol}}})
    precompile(Tuple{typeof(*),QuantumAlgebra.σplus{Tuple{}},QuantumAlgebra.σplus{Tuple{}}})
    precompile(Tuple{typeof(*),QuantumAlgebra.σplus{Tuple{}},scal{Int64}})
    precompile(Tuple{typeof(*),QuantumAlgebra.σ{Tuple{Int64,Symbol}},QuantumAlgebra.σ{Tuple{}}})
    precompile(Tuple{typeof(*),QuantumAlgebra.σ{Tuple{Int64}},Corr})
    precompile(Tuple{typeof(*),QuantumAlgebra.σ{Tuple{Int64}},ExpVal})
    precompile(Tuple{typeof(*),QuantumAlgebra.σ{Tuple{Int64}},QuantumAlgebra.OpProd})
    precompile(Tuple{typeof(*),QuantumAlgebra.σ{Tuple{Int64}},QuantumAlgebra.OpSum})
    precompile(Tuple{typeof(*),QuantumAlgebra.σ{Tuple{Int64}},QuantumAlgebra.σ{Tuple{Int64}},QuantumAlgebra.σ{Tuple{Int64}}})
    precompile(Tuple{typeof(*),QuantumAlgebra.σ{Tuple{Int64}},QuantumAlgebra.σ{Tuple{Int64}}})
    precompile(Tuple{typeof(*),QuantumAlgebra.σ{Tuple{Int64}},adag{Tuple{Int64}}})
    precompile(Tuple{typeof(*),QuantumAlgebra.σ{Tuple{Int64}},a{Tuple{Int64}}})
    precompile(Tuple{typeof(*),QuantumAlgebra.σ{Tuple{Int64}},scal{Complex{Rational{Int64}}}})
    precompile(Tuple{typeof(*),QuantumAlgebra.σ{Tuple{Int64}},scal{Rational{Int64}}})
    precompile(Tuple{typeof(*),QuantumAlgebra.σ{Tuple{Symbol,Symbol}},QuantumAlgebra.σ{Tuple{Symbol,Symbol}}})
    precompile(Tuple{typeof(*),QuantumAlgebra.σ{Tuple{Symbol}},OpSumAnalytic})
    precompile(Tuple{typeof(*),QuantumAlgebra.σ{Tuple{Symbol}},QuantumAlgebra.OpProd})
    precompile(Tuple{typeof(*),QuantumAlgebra.σ{Tuple{Symbol}},QuantumAlgebra.σ{Tuple{Symbol}},QuantumAlgebra.σ{Tuple{Symbol}}})
    precompile(Tuple{typeof(*),QuantumAlgebra.σ{Tuple{Symbol}},QuantumAlgebra.σ{Tuple{Symbol}}})
    precompile(Tuple{typeof(*),QuantumAlgebra.σ{Tuple{Symbol}},adag{Tuple{Int64}}})
    precompile(Tuple{typeof(*),QuantumAlgebra.σ{Tuple{Symbol}},adag{Tuple{Symbol}}})
    precompile(Tuple{typeof(*),QuantumAlgebra.σ{Tuple{Symbol}},a{Tuple{Int64}}})
    precompile(Tuple{typeof(*),QuantumAlgebra.σ{Tuple{Symbol}},a{Tuple{Symbol}}})
    precompile(Tuple{typeof(*),QuantumAlgebra.σ{Tuple{Symbol}},scal{Complex{Int64}}})
    precompile(Tuple{typeof(*),QuantumAlgebra.σ{Tuple{Symbol}},scal{Complex{Rational{Int64}}}})
    precompile(Tuple{typeof(*),QuantumAlgebra.σ{Tuple{Symbol}},scal{Int64}})
    precompile(Tuple{typeof(*),QuantumAlgebra.σ{Tuple{Symbol}},scal{Rational{Int64}}})
    precompile(Tuple{typeof(*),QuantumAlgebra.σ{Tuple{Symbol}},δ})
    precompile(Tuple{typeof(*),QuantumAlgebra.σ{Tuple{}},QuantumAlgebra.σ{Tuple{Symbol,Symbol}}})
    precompile(Tuple{typeof(*),QuantumAlgebra.σ{Tuple{}},QuantumAlgebra.σ{Tuple{}}})
    precompile(Tuple{typeof(*),adag{Tuple{Int64,Symbol}},a{Tuple{Int64}}})
    precompile(Tuple{typeof(*),adag{Tuple{Int64}},Corr})
    precompile(Tuple{typeof(*),adag{Tuple{Int64}},ExpVal})
    precompile(Tuple{typeof(*),adag{Tuple{Int64}},QuantumAlgebra.OpProd})
    precompile(Tuple{typeof(*),adag{Tuple{Int64}},QuantumAlgebra.OpSum,QuantumAlgebra.OpSum})
    precompile(Tuple{typeof(*),adag{Tuple{Int64}},QuantumAlgebra.OpSum})
    precompile(Tuple{typeof(*),adag{Tuple{Int64}},QuantumAlgebra.σminus{Tuple{Symbol}}})
    precompile(Tuple{typeof(*),adag{Tuple{Int64}},QuantumAlgebra.σplus{Tuple{Int64}},QuantumAlgebra.σminus{Tuple{Int64}}})
    precompile(Tuple{typeof(*),adag{Tuple{Int64}},adag{Tuple{Int64}}})
    precompile(Tuple{typeof(*),adag{Tuple{Int64}},a{Tuple{Int64}},QuantumAlgebra.OpSum})
    precompile(Tuple{typeof(*),adag{Tuple{Int64}},a{Tuple{Int64}},QuantumAlgebra.σ{Tuple{Int64}}})
    precompile(Tuple{typeof(*),adag{Tuple{Int64}},a{Tuple{Int64}},adag{Tuple{Int64}},QuantumAlgebra.σ{Tuple{Int64}}})
    precompile(Tuple{typeof(*),adag{Tuple{Int64}},a{Tuple{Int64}},a{Tuple{Int64}}})
    precompile(Tuple{typeof(*),adag{Tuple{Int64}},a{Tuple{Int64}}})
    precompile(Tuple{typeof(*),adag{Tuple{Int64}},scal{Complex{Int64}}})
    precompile(Tuple{typeof(*),adag{Tuple{Int64}},scal{Complex{Rational{Int64}}}})
    precompile(Tuple{typeof(*),adag{Tuple{Int64}},scal{Int64}})
    precompile(Tuple{typeof(*),adag{Tuple{Int64}},scal{Rational{Int64}}})
    precompile(Tuple{typeof(*),adag{Tuple{Int64}},δ})
    precompile(Tuple{typeof(*),adag{Tuple{Symbol,Symbol}},QuantumAlgebra.OpProd})
    precompile(Tuple{typeof(*),adag{Tuple{Symbol,Symbol}},a{Tuple{Symbol,Symbol}}})
    precompile(Tuple{typeof(*),adag{Tuple{Symbol}},Corr})
    precompile(Tuple{typeof(*),adag{Tuple{Symbol}},ExpVal})
    precompile(Tuple{typeof(*),adag{Tuple{Symbol}},QuantumAlgebra.OpProd})
    precompile(Tuple{typeof(*),adag{Tuple{Symbol}},QuantumAlgebra.OpSum})
    precompile(Tuple{typeof(*),adag{Tuple{Symbol}},QuantumAlgebra.σ{Tuple{Symbol}},a{Tuple{Symbol}},adag{Tuple{Symbol}}})
    precompile(Tuple{typeof(*),adag{Tuple{Symbol}},adag{Tuple{Int64,Int64,Symbol}}})
    precompile(Tuple{typeof(*),adag{Tuple{Symbol}},adag{Tuple{Int64}}})
    precompile(Tuple{typeof(*),adag{Tuple{Symbol}},adag{Tuple{Symbol}},QuantumAlgebra.σ{Tuple{Symbol}}})
    precompile(Tuple{typeof(*),adag{Tuple{Symbol}},adag{Tuple{Symbol}},a{Tuple{Symbol}},QuantumAlgebra.σ{Tuple{Symbol}}})
    precompile(Tuple{typeof(*),adag{Tuple{Symbol}},adag{Tuple{Symbol}},a{Tuple{Symbol}}})
    precompile(Tuple{typeof(*),adag{Tuple{Symbol}},adag{Tuple{Symbol}}})
    precompile(Tuple{typeof(*),adag{Tuple{Symbol}},a{Tuple{Int64}}})
    precompile(Tuple{typeof(*),adag{Tuple{Symbol}},a{Tuple{Symbol}},QuantumAlgebra.σ{Tuple{Symbol}}})
    precompile(Tuple{typeof(*),adag{Tuple{Symbol}},a{Tuple{Symbol}},a{Tuple{Symbol}}})
    precompile(Tuple{typeof(*),adag{Tuple{Symbol}},param{Tuple{Symbol,Symbol}}})
    precompile(Tuple{typeof(*),adag{Tuple{Symbol}},param{Tuple{Symbol}}})
    precompile(Tuple{typeof(*),adag{Tuple{Symbol}},scal{Complex{Int64}}})
    precompile(Tuple{typeof(*),adag{Tuple{Symbol}},scal{Complex{Rational{Int64}}}})
    precompile(Tuple{typeof(*),adag{Tuple{Symbol}},scal{Float64}})
    precompile(Tuple{typeof(*),adag{Tuple{Symbol}},scal{Int64}})
    precompile(Tuple{typeof(*),adag{Tuple{Symbol}},scal{Rational{Int64}}})
    precompile(Tuple{typeof(*),adag{Tuple{Symbol}},δ})
    precompile(Tuple{typeof(*),adag{Tuple{}},QuantumAlgebra.OpProd})
    precompile(Tuple{typeof(*),adag{Tuple{}},a{Tuple{Symbol,Symbol}},QuantumAlgebra.σplus{Tuple{}},QuantumAlgebra.σminus{Tuple{Symbol,Symbol}}})
    precompile(Tuple{typeof(*),adag{Tuple{}},a{Tuple{Symbol,Symbol}},QuantumAlgebra.σ{Tuple{}},QuantumAlgebra.σ{Tuple{Symbol,Symbol}}})
    precompile(Tuple{typeof(*),adag{Tuple{}},a{Tuple{Symbol,Symbol}}})
    precompile(Tuple{typeof(*),a{Tuple{Int64,Int64,Symbol}},a{Tuple{Symbol}}})
    precompile(Tuple{typeof(*),a{Tuple{Int64,Symbol}},QuantumAlgebra.OpProd})
    precompile(Tuple{typeof(*),a{Tuple{Int64,Symbol}},QuantumAlgebra.σminus{Tuple{Int64,Symbol}}})
    precompile(Tuple{typeof(*),a{Tuple{Int64,Symbol}},QuantumAlgebra.σplus{Tuple{}}})
    precompile(Tuple{typeof(*),a{Tuple{Int64,Symbol}},QuantumAlgebra.σ{Tuple{Int64,Symbol}}})
    precompile(Tuple{typeof(*),a{Tuple{Int64,Symbol}},QuantumAlgebra.σ{Tuple{}}})
    precompile(Tuple{typeof(*),a{Tuple{Int64,Symbol}},adag{Tuple{}},QuantumAlgebra.σminus{Tuple{Int64,Symbol}},QuantumAlgebra.σplus{Tuple{}}})
    precompile(Tuple{typeof(*),a{Tuple{Int64,Symbol}},adag{Tuple{}},QuantumAlgebra.σ{Tuple{Int64,Symbol}},QuantumAlgebra.σ{Tuple{}}})
    precompile(Tuple{typeof(*),a{Tuple{Int64}},Corr})
    precompile(Tuple{typeof(*),a{Tuple{Int64}},ExpVal})
    precompile(Tuple{typeof(*),a{Tuple{Int64}},QuantumAlgebra.OpProd})
    precompile(Tuple{typeof(*),a{Tuple{Int64}},QuantumAlgebra.OpSum,QuantumAlgebra.OpSum})
    precompile(Tuple{typeof(*),a{Tuple{Int64}},QuantumAlgebra.OpSum})
    precompile(Tuple{typeof(*),a{Tuple{Int64}},QuantumAlgebra.σplus{Tuple{Int64}},QuantumAlgebra.σminus{Tuple{Int64}}})
    precompile(Tuple{typeof(*),a{Tuple{Int64}},adag{Tuple{Int64}},QuantumAlgebra.σplus{Tuple{Int64}},QuantumAlgebra.OpSum})
    precompile(Tuple{typeof(*),a{Tuple{Int64}},adag{Tuple{Int64}},QuantumAlgebra.σ{Tuple{Int64}},QuantumAlgebra.OpSum})
    precompile(Tuple{typeof(*),a{Tuple{Int64}},adag{Tuple{Int64}},adag{Tuple{Int64}},QuantumAlgebra.σ{Tuple{Int64}},adag{Tuple{Int64}},adag{Tuple{Int64}},Vararg{Any,N} where N})
    precompile(Tuple{typeof(*),a{Tuple{Int64}},adag{Tuple{Int64}},a{Tuple{Int64}},adag{Tuple{Int64}}})
    precompile(Tuple{typeof(*),a{Tuple{Int64}},adag{Tuple{Int64}}})
    precompile(Tuple{typeof(*),a{Tuple{Int64}},adag{Tuple{Symbol}}})
    precompile(Tuple{typeof(*),a{Tuple{Int64}},a{Tuple{Int64}},a{Tuple{Int64}},a{Tuple{Int64}},a{Tuple{Int64}}})
    precompile(Tuple{typeof(*),a{Tuple{Int64}},a{Tuple{Int64}},a{Tuple{Int64}},a{Tuple{Int64}}})
    precompile(Tuple{typeof(*),a{Tuple{Int64}},a{Tuple{Int64}},a{Tuple{Int64}}})
    precompile(Tuple{typeof(*),a{Tuple{Int64}},a{Tuple{Int64}}})
    precompile(Tuple{typeof(*),a{Tuple{Int64}},scal{Complex{Int64}}})
    precompile(Tuple{typeof(*),a{Tuple{Int64}},scal{Complex{Rational{Int64}}}})
    precompile(Tuple{typeof(*),a{Tuple{Int64}},scal{Int64}})
    precompile(Tuple{typeof(*),a{Tuple{Int64}},scal{Rational{Int64}}})
    precompile(Tuple{typeof(*),a{Tuple{Int64}},δ})
    precompile(Tuple{typeof(*),a{Tuple{Symbol,Symbol}},OpSumAnalytic})
    precompile(Tuple{typeof(*),a{Tuple{Symbol,Symbol}},QuantumAlgebra.OpProd})
    precompile(Tuple{typeof(*),a{Tuple{Symbol,Symbol}},QuantumAlgebra.σplus{Tuple{}}})
    precompile(Tuple{typeof(*),a{Tuple{Symbol,Symbol}},QuantumAlgebra.σ{Tuple{}}})
    precompile(Tuple{typeof(*),a{Tuple{Symbol,Symbol}},adag{Tuple{Symbol,Symbol}}})
    precompile(Tuple{typeof(*),a{Tuple{Symbol,Symbol}},a{Tuple{Symbol,Symbol}}})
    precompile(Tuple{typeof(*),a{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}}})
    precompile(Tuple{typeof(*),a{Tuple{Symbol,Symbol}},δ})
    precompile(Tuple{typeof(*),a{Tuple{Symbol}},Corr})
    precompile(Tuple{typeof(*),a{Tuple{Symbol}},ExpVal})
    precompile(Tuple{typeof(*),a{Tuple{Symbol}},QuantumAlgebra.OpProd})
    precompile(Tuple{typeof(*),a{Tuple{Symbol}},QuantumAlgebra.OpSum})
    precompile(Tuple{typeof(*),a{Tuple{Symbol}},adag{Tuple{Int64}}})
    precompile(Tuple{typeof(*),a{Tuple{Symbol}},adag{Tuple{Symbol}},QuantumAlgebra.OpSum})
    precompile(Tuple{typeof(*),a{Tuple{Symbol}},adag{Tuple{Symbol}},adag{Tuple{Int64}},a{Tuple{Int64}},adag{Tuple{Int64}},a{Tuple{Symbol}},Vararg{Any,N} where N})
    precompile(Tuple{typeof(*),a{Tuple{Symbol}},adag{Tuple{Symbol}},a{Tuple{Symbol}},adag{Tuple{Symbol}}})
    precompile(Tuple{typeof(*),a{Tuple{Symbol}},a{Tuple{Int64}}})
    precompile(Tuple{typeof(*),a{Tuple{Symbol}},a{Tuple{Symbol}}})
    precompile(Tuple{typeof(*),a{Tuple{Symbol}},a{Tuple{}}})
    precompile(Tuple{typeof(*),a{Tuple{Symbol}},param{Tuple{Symbol,Symbol}}})
    precompile(Tuple{typeof(*),a{Tuple{Symbol}},param{Tuple{Symbol}}})
    precompile(Tuple{typeof(*),a{Tuple{Symbol}},scal{Complex{Int64}}})
    precompile(Tuple{typeof(*),a{Tuple{Symbol}},scal{Complex{Rational{Int64}}}})
    precompile(Tuple{typeof(*),a{Tuple{Symbol}},scal{Float64}})
    precompile(Tuple{typeof(*),a{Tuple{Symbol}},scal{Int64}})
    precompile(Tuple{typeof(*),a{Tuple{Symbol}},scal{Rational{Int64}}})
    precompile(Tuple{typeof(*),a{Tuple{Symbol}},δ})
    precompile(Tuple{typeof(*),a{Tuple{}},Int64})
    precompile(Tuple{typeof(*),a{Tuple{}},OpSumAnalytic})
    precompile(Tuple{typeof(*),a{Tuple{}},QuantumAlgebra.OpProd})
    precompile(Tuple{typeof(*),a{Tuple{}},adag{Tuple{Symbol}}})
    precompile(Tuple{typeof(*),a{Tuple{}},a{Tuple{Symbol}}})
    precompile(Tuple{typeof(*),a{Tuple{}},param{Tuple{Symbol}}})
    precompile(Tuple{typeof(*),fdag{Tuple{Symbol}},fdag{Tuple{Symbol}}})
    precompile(Tuple{typeof(*),fdag{Tuple{Symbol}},f{Tuple{Symbol}}})
    precompile(Tuple{typeof(*),fdag{Tuple{}},f{Tuple{}}})
    precompile(Tuple{typeof(*),f{Tuple{Symbol}},fdag{Tuple{Symbol}}})
    precompile(Tuple{typeof(*),f{Tuple{Symbol}},f{Tuple{Symbol}}})
    precompile(Tuple{typeof(*),param{Tuple{Int64,Symbol}},QuantumAlgebra.OpProd})
    precompile(Tuple{typeof(*),param{Tuple{Int64,Symbol}},param{Tuple{}}})
    precompile(Tuple{typeof(*),param{Tuple{Int64}},ExpVal})
    precompile(Tuple{typeof(*),param{Tuple{Int64}},QuantumAlgebra.OpProd})
    precompile(Tuple{typeof(*),param{Tuple{Int64}},QuantumAlgebra.σplus{Tuple{Int64}}})
    precompile(Tuple{typeof(*),param{Tuple{Int64}},QuantumAlgebra.σ{Tuple{Int64}}})
    precompile(Tuple{typeof(*),param{Tuple{Int64}},param{Tuple{Int64,Symbol}}})
    precompile(Tuple{typeof(*),param{Tuple{Int64}},param{Tuple{Int64}},param{Tuple{Int64}},param{Tuple{}},param{Tuple{}},param{Tuple{Int64}},Vararg{Any,N} where N})
    precompile(Tuple{typeof(*),param{Tuple{Int64}},param{Tuple{Int64}},param{Tuple{Int64}},param{Tuple{}},param{Tuple{}},param{Tuple{Int64}},Vararg{param{Tuple{Int64}},N} where N})
    precompile(Tuple{typeof(*),param{Tuple{Int64}},param{Tuple{}}})
    precompile(Tuple{typeof(*),param{Tuple{Symbol,Symbol}},ExpVal})
    precompile(Tuple{typeof(*),param{Tuple{Symbol,Symbol}},QuantumAlgebra.OpProd})
    precompile(Tuple{typeof(*),param{Tuple{Symbol,Symbol}},QuantumAlgebra.OpSum,QuantumAlgebra.σ{Tuple{Symbol}}})
    precompile(Tuple{typeof(*),param{Tuple{Symbol,Symbol}},QuantumAlgebra.σ{Tuple{Symbol}}})
    precompile(Tuple{typeof(*),param{Tuple{Symbol,Symbol}},adag{Tuple{Symbol,Symbol}},a{Tuple{Symbol,Symbol}},a{Tuple{Symbol,Symbol}}})
    precompile(Tuple{typeof(*),param{Tuple{Symbol,Symbol}},adag{Tuple{Symbol,Symbol}},a{Tuple{Symbol,Symbol}}})
    precompile(Tuple{typeof(*),param{Tuple{Symbol,Symbol}},adag{Tuple{Symbol}}})
    precompile(Tuple{typeof(*),param{Tuple{Symbol,Symbol}},a{Tuple{Symbol}}})
    precompile(Tuple{typeof(*),param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}}})
    precompile(Tuple{typeof(*),param{Tuple{Symbol,Symbol}},scal{Complex{Int64}}})
    precompile(Tuple{typeof(*),param{Tuple{Symbol,Symbol}},scal{Complex{Rational{Int64}}}})
    precompile(Tuple{typeof(*),param{Tuple{Symbol,Symbol}},scal{Int64}})
    precompile(Tuple{typeof(*),param{Tuple{Symbol,Symbol}},δ})
    precompile(Tuple{typeof(*),param{Tuple{Symbol}},ExpVal,Corr,adag{Tuple{Symbol}},adag{Tuple{Symbol}},a{Tuple{Symbol}},Vararg{a{Tuple{Symbol}},N} where N})
    precompile(Tuple{typeof(*),param{Tuple{Symbol}},ExpVal,Corr,adag{Tuple{Symbol}},a{Tuple{Symbol}}})
    precompile(Tuple{typeof(*),param{Tuple{Symbol}},ExpVal})
    precompile(Tuple{typeof(*),param{Tuple{Symbol}},OpSumAnalytic})
    precompile(Tuple{typeof(*),param{Tuple{Symbol}},QuantumAlgebra.OpProd})
    precompile(Tuple{typeof(*),param{Tuple{Symbol}},QuantumAlgebra.σ{Tuple{Symbol}}})
    precompile(Tuple{typeof(*),param{Tuple{Symbol}},adag{Tuple{Int64}}})
    precompile(Tuple{typeof(*),param{Tuple{Symbol}},adag{Tuple{Symbol}},a{Tuple{Symbol}},a{Tuple{Symbol}}})
    precompile(Tuple{typeof(*),param{Tuple{Symbol}},adag{Tuple{Symbol}},a{Tuple{Symbol}},a{Tuple{}}})
    precompile(Tuple{typeof(*),param{Tuple{Symbol}},a{Tuple{Int64}},adag{Tuple{Int64}},a{Tuple{Int64}},adag{Tuple{Int64}},ExpVal,Vararg{Any,N} where N})
    precompile(Tuple{typeof(*),param{Tuple{Symbol}},a{Tuple{Symbol}},OpSumAnalytic})
    precompile(Tuple{typeof(*),param{Tuple{Symbol}},a{Tuple{Symbol}},a{Tuple{Symbol}}})
    precompile(Tuple{typeof(*),param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}}})
    precompile(Tuple{typeof(*),param{Tuple{Symbol}},param{Tuple{Symbol}}})
    precompile(Tuple{typeof(*),param{Tuple{Symbol}},scal{Complex{Int64}}})
    precompile(Tuple{typeof(*),param{Tuple{Symbol}},scal{Complex{Rational{Int64}}}})
    precompile(Tuple{typeof(*),param{Tuple{Symbol}},scal{Int64}})
    precompile(Tuple{typeof(*),param{Tuple{Symbol}},δ})
    precompile(Tuple{typeof(*),param{Tuple{}},Corr})
    precompile(Tuple{typeof(*),param{Tuple{}},ExpVal})
    precompile(Tuple{typeof(*),param{Tuple{}},QuantumAlgebra.OpProd})
    precompile(Tuple{typeof(*),param{Tuple{}},QuantumAlgebra.OpSum})
    precompile(Tuple{typeof(*),param{Tuple{}},QuantumAlgebra.σ{Tuple{Int64}}})
    precompile(Tuple{typeof(*),param{Tuple{}},adag{Tuple{Int64}},a{Tuple{Int64}},a{Tuple{Int64}}})
    precompile(Tuple{typeof(*),param{Tuple{}},param{Tuple{}},param{Tuple{Int64}},param{Tuple{Int64}},param{Tuple{Int64}},param{Tuple{Int64}},Vararg{Any,N} where N})
    precompile(Tuple{typeof(*),param{Tuple{}},param{Tuple{}}})
    precompile(Tuple{typeof(*),param{Tuple{}},scal{Complex{Int64}}})
    precompile(Tuple{typeof(*),param{Tuple{}},scal{Int64}})
    precompile(Tuple{typeof(*),scal{Complex{Int64}},OpSumAnalytic})
    precompile(Tuple{typeof(*),scal{Complex{Int64}},QuantumAlgebra.OpProd})
    precompile(Tuple{typeof(*),scal{Complex{Int64}},QuantumAlgebra.OpSum})
    precompile(Tuple{typeof(*),scal{Complex{Int64}},QuantumAlgebra.σminus{Tuple{Int64}}})
    precompile(Tuple{typeof(*),scal{Complex{Int64}},QuantumAlgebra.σminus{Tuple{Symbol,Symbol}}})
    precompile(Tuple{typeof(*),scal{Complex{Int64}},QuantumAlgebra.σplus{Tuple{Int64}}})
    precompile(Tuple{typeof(*),scal{Complex{Int64}},QuantumAlgebra.σplus{Tuple{Symbol,Symbol}}})
    precompile(Tuple{typeof(*),scal{Complex{Int64}},QuantumAlgebra.σ{Tuple{Int64}}})
    precompile(Tuple{typeof(*),scal{Complex{Int64}},QuantumAlgebra.σ{Tuple{Symbol,Symbol}}})
    precompile(Tuple{typeof(*),scal{Complex{Int64}},QuantumAlgebra.σ{Tuple{Symbol}}})
    precompile(Tuple{typeof(*),scal{Complex{Int64}},QuantumAlgebra.σ{Tuple{}}})
    precompile(Tuple{typeof(*),scal{Complex{Int64}},a{Tuple{Int64}}})
    precompile(Tuple{typeof(*),scal{Complex{Int64}},scal{Complex{Int64}}})
    precompile(Tuple{typeof(*),scal{Complex{Int64}},scal{Int64}})
    precompile(Tuple{typeof(*),scal{Complex{Int64}},scal{Rational{Int64}}})
    precompile(Tuple{typeof(*),scal{Complex{Int64}},δ,QuantumAlgebra.OpSum})
    precompile(Tuple{typeof(*),scal{Complex{Int64}},δ,QuantumAlgebra.σ{Tuple{Symbol}}})
    precompile(Tuple{typeof(*),scal{Complex{Rational{Int64}}},OpSumAnalytic})
    precompile(Tuple{typeof(*),scal{Complex{Rational{Int64}}},QuantumAlgebra.OpProd})
    precompile(Tuple{typeof(*),scal{Complex{Rational{Int64}}},QuantumAlgebra.OpSum})
    precompile(Tuple{typeof(*),scal{Complex{Rational{Int64}}},QuantumAlgebra.σplus{Tuple{Symbol}}})
    precompile(Tuple{typeof(*),scal{Complex{Rational{Int64}}},QuantumAlgebra.σ{Tuple{Int64}}})
    precompile(Tuple{typeof(*),scal{Complex{Rational{Int64}}},QuantumAlgebra.σ{Tuple{Symbol}}})
    precompile(Tuple{typeof(*),scal{Complex{Rational{Int64}}},param{Tuple{Symbol}}})
    precompile(Tuple{typeof(*),scal{Complex{Rational{Int64}}},param{Tuple{}}})
    precompile(Tuple{typeof(*),scal{Complex{Rational{Int64}}},scal{Complex{Int64}}})
    precompile(Tuple{typeof(*),scal{Complex{Rational{Int64}}},scal{Complex{Rational{Int64}}}})
    precompile(Tuple{typeof(*),scal{Complex{Rational{Int64}}},scal{Int64}})
    precompile(Tuple{typeof(*),scal{Complex{Rational{Int64}}},scal{Rational{Int64}}})
    precompile(Tuple{typeof(*),scal{Float64},QuantumAlgebra.OpProd})
    precompile(Tuple{typeof(*),scal{Float64},scal{Float64}})
    precompile(Tuple{typeof(*),scal{Float64},scal{Int64}})
    precompile(Tuple{typeof(*),scal{Float64},δ})
    precompile(Tuple{typeof(*),scal{Int64},Corr})
    precompile(Tuple{typeof(*),scal{Int64},ExpVal,ExpVal})
    precompile(Tuple{typeof(*),scal{Int64},ExpVal})
    precompile(Tuple{typeof(*),scal{Int64},OpSumAnalytic})
    precompile(Tuple{typeof(*),scal{Int64},QuantumAlgebra.OpProd})
    precompile(Tuple{typeof(*),scal{Int64},QuantumAlgebra.OpSum,QuantumAlgebra.OpSum})
    precompile(Tuple{typeof(*),scal{Int64},QuantumAlgebra.OpSum})
    precompile(Tuple{typeof(*),scal{Int64},QuantumAlgebra.σminus{Tuple{Symbol,Symbol}}})
    precompile(Tuple{typeof(*),scal{Int64},QuantumAlgebra.σ{Tuple{Int64}}})
    precompile(Tuple{typeof(*),scal{Int64},QuantumAlgebra.σ{Tuple{Symbol}}})
    precompile(Tuple{typeof(*),scal{Int64},adag{Tuple{Symbol}},a{Tuple{Symbol}}})
    precompile(Tuple{typeof(*),scal{Int64},a{Tuple{Int64}},a{Tuple{Int64}},a{Tuple{Int64}}})
    precompile(Tuple{typeof(*),scal{Int64},a{Tuple{Symbol}}})
    precompile(Tuple{typeof(*),scal{Int64},param{Tuple{Int64}},QuantumAlgebra.σplus{Tuple{Int64}}})
    precompile(Tuple{typeof(*),scal{Int64},param{Tuple{Int64}},QuantumAlgebra.σ{Tuple{Int64}}})
    precompile(Tuple{typeof(*),scal{Int64},param{Tuple{Int64}}})
    precompile(Tuple{typeof(*),scal{Int64},param{Tuple{}},QuantumAlgebra.σ{Tuple{Int64}}})
    precompile(Tuple{typeof(*),scal{Int64},param{Tuple{}},param{Tuple{}},ExpVal,QuantumAlgebra.σplus{Tuple{Symbol}},adag{Tuple{Int64}},Vararg{Any,N} where N})
    precompile(Tuple{typeof(*),scal{Int64},param{Tuple{}},param{Tuple{}},ExpVal,QuantumAlgebra.σ{Tuple{Symbol}},adag{Tuple{Int64}},Vararg{Any,N} where N})
    precompile(Tuple{typeof(*),scal{Int64},scal{Complex{Int64}}})
    precompile(Tuple{typeof(*),scal{Int64},scal{Int64},param{Tuple{Int64}}})
    precompile(Tuple{typeof(*),scal{Int64},scal{Int64},param{Tuple{}}})
    precompile(Tuple{typeof(*),scal{Int64},δ})
    precompile(Tuple{typeof(*),scal{Int64}})
    precompile(Tuple{typeof(*),scal{Rational{Int64}},OpSumAnalytic})
    precompile(Tuple{typeof(*),scal{Rational{Int64}},QuantumAlgebra.OpProd})
    precompile(Tuple{typeof(*),scal{Rational{Int64}},QuantumAlgebra.OpSum})
    precompile(Tuple{typeof(*),scal{Rational{Int64}},a{Tuple{Symbol}}})
    precompile(Tuple{typeof(*),scal{Rational{Int64}},param{Tuple{Symbol}},QuantumAlgebra.σ{Tuple{Symbol}}})
    precompile(Tuple{typeof(*),scal{Rational{Int64}},param{Tuple{}},QuantumAlgebra.σ{Tuple{Int64}}})
    precompile(Tuple{typeof(*),scal{Rational{Int64}},scal{Int64}})
    precompile(Tuple{typeof(*),scal{Rational{Int64}},scal{Rational{Int64}}})
    precompile(Tuple{typeof(*),δ,QuantumAlgebra.OpProd})
    precompile(Tuple{typeof(*),δ,QuantumAlgebra.σminus{Tuple{Symbol}}})
    precompile(Tuple{typeof(*),δ,QuantumAlgebra.σplus{Tuple{Symbol}}})
    precompile(Tuple{typeof(*),δ,QuantumAlgebra.σ{Tuple{Symbol}}})
    precompile(Tuple{typeof(*),δ,adag{Tuple{Int64}}})
    precompile(Tuple{typeof(*),δ,a{Tuple{Symbol,Symbol}}})
    precompile(Tuple{typeof(*),δ,scal{Complex{Int64}}})
    precompile(Tuple{typeof(*),δ,scal{Complex{Rational{Int64}}}})
    precompile(Tuple{typeof(*),δ,scal{Float64}})
    precompile(Tuple{typeof(*),δ,scal{Int64}})
    precompile(Tuple{typeof(*),δ,δ,QuantumAlgebra.OpSum})
    precompile(Tuple{typeof(*),δ,δ,QuantumAlgebra.σ{Tuple{Symbol}}})
    precompile(Tuple{typeof(*),δ,δ})
    precompile(Tuple{typeof(+),Corr,QuantumAlgebra.OpProd,QuantumAlgebra.OpProd,QuantumAlgebra.OpProd,QuantumAlgebra.OpProd,QuantumAlgebra.OpProd,Vararg{QuantumAlgebra.OpProd,N} where N})
    precompile(Tuple{typeof(+),Corr,QuantumAlgebra.OpProd,QuantumAlgebra.OpProd,QuantumAlgebra.OpProd,QuantumAlgebra.OpProd})
    precompile(Tuple{typeof(+),Corr,QuantumAlgebra.OpProd})
    precompile(Tuple{typeof(+),Corr,QuantumAlgebra.OpSum})
    precompile(Tuple{typeof(+),Int64,a{Tuple{}}})
    precompile(Tuple{typeof(+),OpSumAnalytic,OpSumAnalytic})
    precompile(Tuple{typeof(+),OpSumAnalytic,QuantumAlgebra.OpProd,QuantumAlgebra.OpSum})
    precompile(Tuple{typeof(+),OpSumAnalytic,QuantumAlgebra.OpSum})
    precompile(Tuple{typeof(+),OpSumAnalytic,a{Tuple{Symbol}}})
    precompile(Tuple{typeof(+),OpSumAnalytic,scal{Int64}})
    precompile(Tuple{typeof(+),QuantumAlgebra.OpProd,OpSumAnalytic})
    precompile(Tuple{typeof(+),QuantumAlgebra.OpProd,QuantumAlgebra.OpProd})
    precompile(Tuple{typeof(+),QuantumAlgebra.OpProd,QuantumAlgebra.OpSum})
    precompile(Tuple{typeof(+),QuantumAlgebra.OpProd,QuantumAlgebra.σminus{Tuple{Symbol,Symbol}}})
    precompile(Tuple{typeof(+),QuantumAlgebra.OpProd,scal{Complex{Rational{Int64}}}})
    precompile(Tuple{typeof(+),QuantumAlgebra.OpProd,scal{Int64}})
    precompile(Tuple{typeof(+),QuantumAlgebra.OpProd,δ})
    precompile(Tuple{typeof(+),QuantumAlgebra.OpSum,QuantumAlgebra.OpSum})
    precompile(Tuple{typeof(+),QuantumAlgebra.OpSum,scal{Complex{Int64}}})
    precompile(Tuple{typeof(+),QuantumAlgebra.OpSum,scal{Complex{Rational{Int64}}}})
    precompile(Tuple{typeof(+),QuantumAlgebra.OpSum,scal{Rational{Int64}}})
    precompile(Tuple{typeof(+),QuantumAlgebra.σplus{Tuple{Int64}},QuantumAlgebra.OpProd})
    precompile(Tuple{typeof(+),QuantumAlgebra.σ{Tuple{Int64}},QuantumAlgebra.OpProd})
    precompile(Tuple{typeof(+),QuantumAlgebra.σ{Tuple{Symbol}},QuantumAlgebra.OpProd})
    precompile(Tuple{typeof(+),adag{Tuple{Int64}},QuantumAlgebra.OpProd})
    precompile(Tuple{typeof(+),adag{Tuple{Symbol}},OpSumAnalytic})
    precompile(Tuple{typeof(+),adag{Tuple{Symbol}},QuantumAlgebra.OpProd})
    precompile(Tuple{typeof(+),adag{Tuple{Symbol}},QuantumAlgebra.OpSum})
    precompile(Tuple{typeof(+),a{Tuple{Int64}},QuantumAlgebra.OpProd})
    precompile(Tuple{typeof(+),a{Tuple{Int64}},QuantumAlgebra.OpSum})
    precompile(Tuple{typeof(+),a{Tuple{Int64}},a{Tuple{Int64}}})
    precompile(Tuple{typeof(+),a{Tuple{Symbol}},OpSumAnalytic})
    precompile(Tuple{typeof(+),a{Tuple{Symbol}},QuantumAlgebra.OpProd})
    precompile(Tuple{typeof(+),a{Tuple{Symbol}},QuantumAlgebra.OpSum})
    precompile(Tuple{typeof(+),a{Tuple{}},Int64})
    precompile(Tuple{typeof(+),scal{Complex{Int64}},OpSumAnalytic})
    precompile(Tuple{typeof(+),scal{Complex{Int64}},QuantumAlgebra.OpProd})
    precompile(Tuple{typeof(+),scal{Complex{Int64}},QuantumAlgebra.OpSum})
    precompile(Tuple{typeof(+),scal{Complex{Int64}},scal{Complex{Int64}}})
    precompile(Tuple{typeof(+),scal{Complex{Rational{Int64}}},OpSumAnalytic})
    precompile(Tuple{typeof(+),scal{Complex{Rational{Int64}}},QuantumAlgebra.OpSum})
    precompile(Tuple{typeof(+),scal{Complex{Rational{Int64}}},QuantumAlgebra.σ{Tuple{Int64}}})
    precompile(Tuple{typeof(+),scal{Complex{Rational{Int64}}},QuantumAlgebra.σ{Tuple{Symbol}}})
    precompile(Tuple{typeof(+),scal{Complex{Rational{Int64}}},scal{Complex{Rational{Int64}}}})
    precompile(Tuple{typeof(+),scal{Float64},QuantumAlgebra.OpProd})
    precompile(Tuple{typeof(+),scal{Float64},QuantumAlgebra.OpSum})
    precompile(Tuple{typeof(+),scal{Float64},scal{Float64}})
    precompile(Tuple{typeof(+),scal{Int64},Corr})
    precompile(Tuple{typeof(+),scal{Int64},ExpVal})
    precompile(Tuple{typeof(+),scal{Int64},OpSumAnalytic})
    precompile(Tuple{typeof(+),scal{Int64},QuantumAlgebra.OpProd,QuantumAlgebra.OpProd})
    precompile(Tuple{typeof(+),scal{Int64},QuantumAlgebra.OpSum})
    precompile(Tuple{typeof(+),scal{Int64},scal{Complex{Int64}}})
    precompile(Tuple{typeof(+),scal{Int64},scal{Complex{Rational{Int64}}}})
    precompile(Tuple{typeof(+),scal{Int64},scal{Rational{Int64}}})
    precompile(Tuple{typeof(+),scal{Rational{Int64}},QuantumAlgebra.OpProd})
    precompile(Tuple{typeof(+),scal{Rational{Int64}},QuantumAlgebra.OpSum})
    precompile(Tuple{typeof(+),scal{Rational{Int64}},scal{Complex{Rational{Int64}}}})
    precompile(Tuple{typeof(-),Corr,Corr})
    precompile(Tuple{typeof(-),Int64,a{Tuple{}}})
    precompile(Tuple{typeof(-),OpSumAnalytic,OpSumAnalytic})
    precompile(Tuple{typeof(-),OpSumAnalytic,QuantumAlgebra.OpProd})
    precompile(Tuple{typeof(-),OpSumAnalytic,QuantumAlgebra.OpSum})
    precompile(Tuple{typeof(-),OpSumAnalytic})
    precompile(Tuple{typeof(-),QuantumAlgebra.OpProd,QuantumAlgebra.OpSum})
    precompile(Tuple{typeof(-),QuantumAlgebra.OpProd})
    precompile(Tuple{typeof(-),QuantumAlgebra.OpSum,QuantumAlgebra.OpProd})
    precompile(Tuple{typeof(-),QuantumAlgebra.OpSum,QuantumAlgebra.OpSum})
    precompile(Tuple{typeof(-),QuantumAlgebra.OpSum,scal{Int64}})
    precompile(Tuple{typeof(-),QuantumAlgebra.OpSum})
    precompile(Tuple{typeof(-),QuantumAlgebra.σminus{Tuple{Symbol,Symbol}},QuantumAlgebra.σplus{Tuple{Symbol,Symbol}}})
    precompile(Tuple{typeof(-),QuantumAlgebra.σplus{Tuple{Symbol}},QuantumAlgebra.σminus{Tuple{Symbol}}})
    precompile(Tuple{typeof(-),adag{Tuple{Int64}}})
    precompile(Tuple{typeof(-),a{Tuple{}},Int64})
    precompile(Tuple{typeof(-),param{Tuple{Int64}}})
    precompile(Tuple{typeof(-),param{Tuple{Symbol}},param{Tuple{Symbol}}})
    precompile(Tuple{typeof(-),param{Tuple{Symbol}}})
    precompile(Tuple{typeof(-),scal{Int64},QuantumAlgebra.OpProd})
    precompile(Tuple{typeof(-),scal{Int64},QuantumAlgebra.OpSum})
    precompile(Tuple{typeof(-),scal{Int64}})
    precompile(Tuple{typeof(-),δ,QuantumAlgebra.OpProd})
    precompile(Tuple{typeof(-),δ})
    precompile(Tuple{typeof(<),NTuple{4,param{Tuple{Symbol,Symbol}}},NTuple{4,param{Tuple{Symbol,Symbol}}}})
    precompile(Tuple{typeof(<),NTuple{5,param{Tuple{Symbol,Symbol}}},NTuple{5,param{Tuple{Symbol,Symbol}}}})
    precompile(Tuple{typeof(<),Tuple{param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}}},Tuple{param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}}}})
    precompile(Tuple{typeof(<),Tuple{param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}}},Tuple{param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},δ}})
    precompile(Tuple{typeof(<),Tuple{param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}}},Tuple{param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}}}})
    precompile(Tuple{typeof(<),Tuple{param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}}},Tuple{param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},δ}})
    precompile(Tuple{typeof(<),Tuple{param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}}},Tuple{param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}}}})
    precompile(Tuple{typeof(<),Tuple{param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}}},Tuple{param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},δ}})
    precompile(Tuple{typeof(<),Tuple{param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}}},Tuple{param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}}}})
    precompile(Tuple{typeof(<),Tuple{param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}},δ},Tuple{param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}}}})
    precompile(Tuple{typeof(<),Tuple{param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}}},Tuple{param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}},δ}})
    precompile(Tuple{typeof(<),Tuple{param{Tuple{Symbol}},param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}}},Tuple{param{Tuple{Symbol}},param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},δ}})
    precompile(Tuple{typeof(<),Tuple{param{Tuple{Symbol}},param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}}},Tuple{param{Tuple{Symbol}},param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}}}})
    precompile(Tuple{typeof(<),Tuple{param{Tuple{Symbol}},param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}}},Tuple{param{Tuple{Symbol}},param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},δ}})
    precompile(Tuple{typeof(<),Tuple{param{Tuple{Symbol}},param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}}},Tuple{param{Tuple{Symbol}},param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}}}})
    precompile(Tuple{typeof(<),Tuple{param{Tuple{Symbol}},param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}}},Tuple{param{Tuple{Symbol}},param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}},δ}})
    precompile(Tuple{typeof(<),Tuple{param{Tuple{Symbol}},param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}}},Tuple{param{Tuple{Symbol}},param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}}}})
    precompile(Tuple{typeof(<),Tuple{param{Tuple{Symbol}},param{Tuple{Symbol}},param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}}},Tuple{param{Tuple{Symbol}},param{Tuple{Symbol}},param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}}}})
    precompile(Tuple{typeof(<),Tuple{param{Tuple{Symbol}},param{Tuple{Symbol}},param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}}},Tuple{param{Tuple{Symbol}},param{Tuple{Symbol}},param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}}}})
    precompile(Tuple{typeof(<),Tuple{param{Tuple{Symbol}},param{Tuple{Symbol}},param{Tuple{Symbol}},param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}}},Tuple{param{Tuple{Symbol}},param{Tuple{Symbol}},param{Tuple{Symbol}},param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}}}})
    precompile(Tuple{typeof(<),Tuple{param{Tuple{Symbol}},param{Tuple{Symbol}}},Tuple{param{Tuple{Symbol}},param{Tuple{Symbol}},δ}})
    precompile(Tuple{typeof(<),Tuple{param{Tuple{Symbol}},δ},Tuple{param{Tuple{Symbol}}}})
    precompile(Tuple{typeof(<),Tuple{param{Tuple{Symbol}}},Tuple{param{Tuple{Symbol}},δ}})
    precompile(Tuple{typeof(<),Tuple{param{Tuple{Symbol}}},Tuple{param{Tuple{Symbol}}}})
    precompile(Tuple{typeof(<),Tuple{δ,δ},Tuple{δ}})
    precompile(Tuple{typeof(<),Tuple{δ},Tuple{}})
    precompile(Tuple{typeof(<),Tuple{δ},Tuple{δ,δ}})
    precompile(Tuple{typeof(<),adag{Tuple{Int64}},QuantumAlgebra.OpSum})
    precompile(Tuple{typeof(<),adag{Tuple{}},fdag{Tuple{}}})
    precompile(Tuple{typeof(<),a{Tuple{Int64}},QuantumAlgebra.OpSum})
    precompile(Tuple{typeof(<),fdag{Tuple{Symbol,Symbol}},fdag{Tuple{Symbol}}})
    precompile(Tuple{typeof(<),fdag{Tuple{}},f{Tuple{}}})
    precompile(Tuple{typeof(<),scal{Complex{Int64}},scal{Complex{Int64}}})
    precompile(Tuple{typeof(==),Corr,ExpVal})
    precompile(Tuple{typeof(==),Corr,QuantumAlgebra.OpProd})
    precompile(Tuple{typeof(==),Corr,adag{Tuple{Int64}}})
    precompile(Tuple{typeof(==),Corr,adag{Tuple{Symbol}}})
    precompile(Tuple{typeof(==),Corr,a{Tuple{Int64}}})
    precompile(Tuple{typeof(==),ExpVal,Corr})
    precompile(Tuple{typeof(==),ExpVal,ExpVal})
    precompile(Tuple{typeof(==),ExpVal,QuantumAlgebra.OpProd})
    precompile(Tuple{typeof(==),ExpVal,QuantumAlgebra.σplus{Tuple{Int64}}})
    precompile(Tuple{typeof(==),ExpVal,QuantumAlgebra.σ{Tuple{Int64}}})
    precompile(Tuple{typeof(==),ExpVal,adag{Tuple{Int64}}})
    precompile(Tuple{typeof(==),ExpVal,adag{Tuple{Symbol}}})
    precompile(Tuple{typeof(==),ExpVal,a{Tuple{Int64}}})
    precompile(Tuple{typeof(==),ExpVal,a{Tuple{Symbol}}})
    precompile(Tuple{typeof(==),NTuple{4,param{Tuple{Symbol,Symbol}}},NTuple{4,param{Tuple{Symbol,Symbol}}}})
    precompile(Tuple{typeof(==),NTuple{5,param{Tuple{Symbol,Symbol}}},NTuple{5,param{Tuple{Symbol,Symbol}}}})
    precompile(Tuple{typeof(==),QuantumAlgebra.OpProd,Corr})
    precompile(Tuple{typeof(==),QuantumAlgebra.OpProd,OpSumAnalytic})
    precompile(Tuple{typeof(==),QuantumAlgebra.OpProd,QuantumAlgebra.OpSum})
    precompile(Tuple{typeof(==),QuantumAlgebra.OpProd,scal{Int64}})
    precompile(Tuple{typeof(==),QuantumAlgebra.σminus{Tuple{Int64}},QuantumAlgebra.OpProd})
    precompile(Tuple{typeof(==),QuantumAlgebra.σminus{Tuple{Int64}},QuantumAlgebra.OpSum})
    precompile(Tuple{typeof(==),QuantumAlgebra.σminus{Tuple{Int64}},QuantumAlgebra.σminus{Tuple{Int64}}})
    precompile(Tuple{typeof(==),QuantumAlgebra.σminus{Tuple{Int64}},QuantumAlgebra.σplus{Tuple{Int64}}})
    precompile(Tuple{typeof(==),QuantumAlgebra.σminus{Tuple{Symbol,Symbol}},QuantumAlgebra.σminus{Tuple{Symbol,Symbol}}})
    precompile(Tuple{typeof(==),QuantumAlgebra.σminus{Tuple{Symbol}},QuantumAlgebra.σminus{Tuple{Symbol}}})
    precompile(Tuple{typeof(==),QuantumAlgebra.σminus{Tuple{Symbol}},QuantumAlgebra.σplus{Tuple{Symbol}}})
    precompile(Tuple{typeof(==),QuantumAlgebra.σminus{Tuple{}},QuantumAlgebra.σminus{Tuple{}}})
    precompile(Tuple{typeof(==),QuantumAlgebra.σplus{Tuple{Int64}},QuantumAlgebra.OpProd})
    precompile(Tuple{typeof(==),QuantumAlgebra.σplus{Tuple{Int64}},QuantumAlgebra.OpSum})
    precompile(Tuple{typeof(==),QuantumAlgebra.σplus{Tuple{Int64}},QuantumAlgebra.σplus{Tuple{Int64}}})
    precompile(Tuple{typeof(==),QuantumAlgebra.σplus{Tuple{Symbol,Symbol}},QuantumAlgebra.σplus{Tuple{Symbol,Symbol}}})
    precompile(Tuple{typeof(==),QuantumAlgebra.σ{Tuple{Int64}},QuantumAlgebra.OpProd})
    precompile(Tuple{typeof(==),QuantumAlgebra.σ{Tuple{Int64}},QuantumAlgebra.σ{Tuple{Int64}}})
    precompile(Tuple{typeof(==),QuantumAlgebra.σ{Tuple{Int64}},adag{Tuple{Int64}}})
    precompile(Tuple{typeof(==),QuantumAlgebra.σ{Tuple{Int64}},a{Tuple{Int64}}})
    precompile(Tuple{typeof(==),QuantumAlgebra.σ{Tuple{Symbol,Symbol}},QuantumAlgebra.σ{Tuple{Symbol,Symbol}}})
    precompile(Tuple{typeof(==),QuantumAlgebra.σ{Tuple{Symbol}},OpSumAnalytic})
    precompile(Tuple{typeof(==),QuantumAlgebra.σ{Tuple{Symbol}},QuantumAlgebra.OpSum})
    precompile(Tuple{typeof(==),QuantumAlgebra.σ{Tuple{Symbol}},QuantumAlgebra.σ{Tuple{Symbol}}})
    precompile(Tuple{typeof(==),QuantumAlgebra.σ{Tuple{Symbol}},adag{Tuple{Symbol}}})
    precompile(Tuple{typeof(==),QuantumAlgebra.σ{Tuple{Symbol}},a{Tuple{Symbol}}})
    precompile(Tuple{typeof(==),Tuple{Tuple{scal{Int64},param{Tuple{}},param{Tuple{}}},Tuple{ExpVal},Tuple{adag{Tuple{Int64}},a{Tuple{Int64}},QuantumAlgebra.σplus{Tuple{Symbol}}}},Tuple{Tuple{scal{Int64},param{Tuple{}},param{Tuple{}}},Tuple{ExpVal},Tuple{adag{Tuple{Int64}},a{Tuple{Int64}},QuantumAlgebra.σplus{Tuple{Symbol}}}}})
    precompile(Tuple{typeof(==),Tuple{Tuple{scal{Int64},param{Tuple{}},param{Tuple{}}},Tuple{ExpVal},Tuple{adag{Tuple{Int64}},a{Tuple{Int64}},QuantumAlgebra.σ{Tuple{Symbol}}}},Tuple{Tuple{scal{Int64},param{Tuple{}},param{Tuple{}}},Tuple{ExpVal},Tuple{adag{Tuple{Int64}},a{Tuple{Int64}},QuantumAlgebra.σ{Tuple{Symbol}}}}})
    precompile(Tuple{typeof(==),Tuple{a{Tuple{Int64}},a{Tuple{Int64}}},Tuple{a{Tuple{Int64}},a{Tuple{Int64}}}})
    precompile(Tuple{typeof(==),Tuple{a{Tuple{Int64}}},Tuple{a{Tuple{Int64}}}})
    precompile(Tuple{typeof(==),Tuple{param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},δ},Tuple{param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},δ}})
    precompile(Tuple{typeof(==),Tuple{param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},δ,δ},Tuple{param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},δ,δ}})
    precompile(Tuple{typeof(==),Tuple{param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},δ},Tuple{param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},δ}})
    precompile(Tuple{typeof(==),Tuple{param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},δ,δ},Tuple{param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},δ,δ}})
    precompile(Tuple{typeof(==),Tuple{param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},δ},Tuple{param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},δ}})
    precompile(Tuple{typeof(==),Tuple{param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}}},Tuple{param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}}}})
    precompile(Tuple{typeof(==),Tuple{param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},δ,δ},Tuple{param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},δ,δ}})
    precompile(Tuple{typeof(==),Tuple{param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},δ},Tuple{param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},δ}})
    precompile(Tuple{typeof(==),Tuple{param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}}},Tuple{param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}}}})
    precompile(Tuple{typeof(==),Tuple{param{Tuple{Symbol,Symbol}},δ,δ},Tuple{param{Tuple{Symbol,Symbol}},δ,δ}})
    precompile(Tuple{typeof(==),Tuple{param{Tuple{Symbol,Symbol}},δ},Tuple{param{Tuple{Symbol,Symbol}},δ}})
    precompile(Tuple{typeof(==),Tuple{param{Tuple{Symbol,Symbol}}},Tuple{param{Tuple{Symbol,Symbol}}}})
    precompile(Tuple{typeof(==),Tuple{param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},δ},Tuple{param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},δ}})
    precompile(Tuple{typeof(==),Tuple{param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}}},Tuple{param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},δ}})
    precompile(Tuple{typeof(==),Tuple{param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}}},Tuple{param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}}}})
    precompile(Tuple{typeof(==),Tuple{param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},δ,δ},Tuple{param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},δ,δ}})
    precompile(Tuple{typeof(==),Tuple{param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},δ},Tuple{param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},δ}})
    precompile(Tuple{typeof(==),Tuple{param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}}},Tuple{param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},δ}})
    precompile(Tuple{typeof(==),Tuple{param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}}},Tuple{param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}}}})
    precompile(Tuple{typeof(==),Tuple{param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},δ,δ},Tuple{param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},δ,δ}})
    precompile(Tuple{typeof(==),Tuple{param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},δ},Tuple{param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},δ}})
    precompile(Tuple{typeof(==),Tuple{param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}}},Tuple{param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},δ}})
    precompile(Tuple{typeof(==),Tuple{param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}}},Tuple{param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}}}})
    precompile(Tuple{typeof(==),Tuple{param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}},δ,δ},Tuple{param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}},δ,δ}})
    precompile(Tuple{typeof(==),Tuple{param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}},δ},Tuple{param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}},δ}})
    precompile(Tuple{typeof(==),Tuple{param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}},δ},Tuple{param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}}}})
    precompile(Tuple{typeof(==),Tuple{param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}}},Tuple{param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}},δ}})
    precompile(Tuple{typeof(==),Tuple{param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}}},Tuple{param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}}}})
    precompile(Tuple{typeof(==),Tuple{param{Tuple{Symbol}},param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},δ,δ},Tuple{param{Tuple{Symbol}},param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},δ,δ}})
    precompile(Tuple{typeof(==),Tuple{param{Tuple{Symbol}},param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},δ},Tuple{param{Tuple{Symbol}},param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},δ}})
    precompile(Tuple{typeof(==),Tuple{param{Tuple{Symbol}},param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}}},Tuple{param{Tuple{Symbol}},param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},δ}})
    precompile(Tuple{typeof(==),Tuple{param{Tuple{Symbol}},param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}}},Tuple{param{Tuple{Symbol}},param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}}}})
    precompile(Tuple{typeof(==),Tuple{param{Tuple{Symbol}},param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},δ,δ},Tuple{param{Tuple{Symbol}},param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},δ,δ}})
    precompile(Tuple{typeof(==),Tuple{param{Tuple{Symbol}},param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},δ},Tuple{param{Tuple{Symbol}},param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},δ}})
    precompile(Tuple{typeof(==),Tuple{param{Tuple{Symbol}},param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}}},Tuple{param{Tuple{Symbol}},param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},δ}})
    precompile(Tuple{typeof(==),Tuple{param{Tuple{Symbol}},param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}}},Tuple{param{Tuple{Symbol}},param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}}}})
    precompile(Tuple{typeof(==),Tuple{param{Tuple{Symbol}},param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}},δ,δ},Tuple{param{Tuple{Symbol}},param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}},δ,δ}})
    precompile(Tuple{typeof(==),Tuple{param{Tuple{Symbol}},param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}},δ},Tuple{param{Tuple{Symbol}},param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}},δ}})
    precompile(Tuple{typeof(==),Tuple{param{Tuple{Symbol}},param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}}},Tuple{param{Tuple{Symbol}},param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}},δ}})
    precompile(Tuple{typeof(==),Tuple{param{Tuple{Symbol}},param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}}},Tuple{param{Tuple{Symbol}},param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}}}})
    precompile(Tuple{typeof(==),Tuple{param{Tuple{Symbol}},param{Tuple{Symbol}},param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},δ},Tuple{param{Tuple{Symbol}},param{Tuple{Symbol}},param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},δ}})
    precompile(Tuple{typeof(==),Tuple{param{Tuple{Symbol}},param{Tuple{Symbol}},param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}}},Tuple{param{Tuple{Symbol}},param{Tuple{Symbol}},param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}}}})
    precompile(Tuple{typeof(==),Tuple{param{Tuple{Symbol}},param{Tuple{Symbol}},param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}},δ,δ},Tuple{param{Tuple{Symbol}},param{Tuple{Symbol}},param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}},δ,δ}})
    precompile(Tuple{typeof(==),Tuple{param{Tuple{Symbol}},param{Tuple{Symbol}},param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}},δ},Tuple{param{Tuple{Symbol}},param{Tuple{Symbol}},param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}},δ}})
    precompile(Tuple{typeof(==),Tuple{param{Tuple{Symbol}},param{Tuple{Symbol}},param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}}},Tuple{param{Tuple{Symbol}},param{Tuple{Symbol}},param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}}}})
    precompile(Tuple{typeof(==),Tuple{param{Tuple{Symbol}},param{Tuple{Symbol}},param{Tuple{Symbol}},param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}}},Tuple{param{Tuple{Symbol}},param{Tuple{Symbol}},param{Tuple{Symbol}},param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}}}})
    precompile(Tuple{typeof(==),Tuple{param{Tuple{Symbol}},param{Tuple{Symbol}}},Tuple{param{Tuple{Symbol}},param{Tuple{Symbol}},δ}})
    precompile(Tuple{typeof(==),Tuple{param{Tuple{Symbol}},δ},Tuple{param{Tuple{Symbol}}}})
    precompile(Tuple{typeof(==),Tuple{param{Tuple{Symbol}}},Tuple{param{Tuple{Symbol}},δ}})
    precompile(Tuple{typeof(==),Tuple{param{Tuple{Symbol}}},Tuple{param{Tuple{Symbol}}}})
    precompile(Tuple{typeof(==),Tuple{},Tuple{δ}})
    precompile(Tuple{typeof(==),Tuple{δ,δ},Tuple{δ,δ}})
    precompile(Tuple{typeof(==),Tuple{δ,δ},Tuple{δ}})
    precompile(Tuple{typeof(==),Tuple{δ},Tuple{}})
    precompile(Tuple{typeof(==),Tuple{δ},Tuple{δ,δ}})
    precompile(Tuple{typeof(==),Tuple{δ},Tuple{δ}})
    precompile(Tuple{typeof(==),adag{Tuple{Int64,Int64,Symbol}},adag{Tuple{Int64,Int64,Symbol}}})
    precompile(Tuple{typeof(==),adag{Tuple{Int64,Symbol}},adag{Tuple{Int64,Symbol}}})
    precompile(Tuple{typeof(==),adag{Tuple{Int64}},QuantumAlgebra.OpProd})
    precompile(Tuple{typeof(==),adag{Tuple{Int64}},QuantumAlgebra.OpSum})
    precompile(Tuple{typeof(==),adag{Tuple{Int64}},QuantumAlgebra.σ{Tuple{Int64}}})
    precompile(Tuple{typeof(==),adag{Tuple{Int64}},adag{Tuple{Int64}}})
    precompile(Tuple{typeof(==),adag{Tuple{Int64}},adag{Tuple{Symbol}}})
    precompile(Tuple{typeof(==),adag{Tuple{Int64}},a{Tuple{Int64}}})
    precompile(Tuple{typeof(==),adag{Tuple{Int64}},δ})
    precompile(Tuple{typeof(==),adag{Tuple{Symbol,Symbol}},adag{Tuple{Symbol,Symbol}}})
    precompile(Tuple{typeof(==),adag{Tuple{Symbol}},QuantumAlgebra.OpProd})
    precompile(Tuple{typeof(==),adag{Tuple{Symbol}},QuantumAlgebra.σ{Tuple{Symbol}}})
    precompile(Tuple{typeof(==),adag{Tuple{Symbol}},adag{Tuple{Int64}}})
    precompile(Tuple{typeof(==),adag{Tuple{Symbol}},adag{Tuple{Symbol}}})
    precompile(Tuple{typeof(==),adag{Tuple{Symbol}},a{Tuple{Symbol}}})
    precompile(Tuple{typeof(==),adag{Tuple{Symbol}},a{Tuple{}}})
    precompile(Tuple{typeof(==),adag{Tuple{Symbol}},δ})
    precompile(Tuple{typeof(==),adag{Tuple{}},adag{Tuple{}}})
    precompile(Tuple{typeof(==),a{Tuple{Int64,Symbol}},a{Tuple{Int64,Symbol}}})
    precompile(Tuple{typeof(==),a{Tuple{Int64}},QuantumAlgebra.OpProd})
    precompile(Tuple{typeof(==),a{Tuple{Int64}},QuantumAlgebra.σ{Tuple{Int64}}})
    precompile(Tuple{typeof(==),a{Tuple{Int64}},adag{Tuple{Int64}}})
    precompile(Tuple{typeof(==),a{Tuple{Int64}},a{Tuple{Int64}}})
    precompile(Tuple{typeof(==),a{Tuple{Int64}},a{Tuple{Symbol}}})
    precompile(Tuple{typeof(==),a{Tuple{Int64}},δ})
    precompile(Tuple{typeof(==),a{Tuple{Symbol,Symbol}},a{Tuple{Symbol,Symbol}}})
    precompile(Tuple{typeof(==),a{Tuple{Symbol}},QuantumAlgebra.OpProd})
    precompile(Tuple{typeof(==),a{Tuple{Symbol}},QuantumAlgebra.σ{Tuple{Symbol}}})
    precompile(Tuple{typeof(==),a{Tuple{Symbol}},adag{Tuple{Symbol}}})
    precompile(Tuple{typeof(==),a{Tuple{Symbol}},a{Tuple{Int64}}})
    precompile(Tuple{typeof(==),a{Tuple{Symbol}},a{Tuple{Symbol}}})
    precompile(Tuple{typeof(==),a{Tuple{Symbol}},δ})
    precompile(Tuple{typeof(==),a{Tuple{}},a{Tuple{}}})
    precompile(Tuple{typeof(==),fdag{Tuple{Symbol}},fdag{Tuple{Symbol}}})
    precompile(Tuple{typeof(==),fdag{Tuple{}},fdag{Tuple{}}})
    precompile(Tuple{typeof(==),f{Tuple{Symbol}},f{Tuple{Symbol}}})
    precompile(Tuple{typeof(==),f{Tuple{}},f{Tuple{}}})
    precompile(Tuple{typeof(==),param{Tuple{Int64,Symbol}},param{Tuple{Int64,Symbol}}})
    precompile(Tuple{typeof(==),param{Tuple{Int64,Symbol}},param{Tuple{Int64}}})
    precompile(Tuple{typeof(==),param{Tuple{Int64}},QuantumAlgebra.OpProd})
    precompile(Tuple{typeof(==),param{Tuple{Int64}},QuantumAlgebra.OpSum})
    precompile(Tuple{typeof(==),param{Tuple{Int64}},param{Tuple{Int64,Symbol}}})
    precompile(Tuple{typeof(==),param{Tuple{Int64}},param{Tuple{Int64}}})
    precompile(Tuple{typeof(==),param{Tuple{Symbol,Int64,Symbol}},param{Tuple{Symbol,Int64,Symbol}}})
    precompile(Tuple{typeof(==),param{Tuple{Symbol,Symbol,Int64}},param{Tuple{Symbol,Symbol,Int64}}})
    precompile(Tuple{typeof(==),param{Tuple{Symbol,Symbol}},adag{Tuple{Symbol}}})
    precompile(Tuple{typeof(==),param{Tuple{Symbol,Symbol}},a{Tuple{Symbol,Symbol}}})
    precompile(Tuple{typeof(==),param{Tuple{Symbol,Symbol}},a{Tuple{Symbol}}})
    precompile(Tuple{typeof(==),param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}}})
    precompile(Tuple{typeof(==),param{Tuple{Symbol,Symbol}},param{Tuple{Symbol}}})
    precompile(Tuple{typeof(==),param{Tuple{Symbol}},QuantumAlgebra.OpProd})
    precompile(Tuple{typeof(==),param{Tuple{Symbol}},adag{Tuple{Symbol}}})
    precompile(Tuple{typeof(==),param{Tuple{Symbol}},a{Tuple{Symbol}}})
    precompile(Tuple{typeof(==),param{Tuple{Symbol}},a{Tuple{}}})
    precompile(Tuple{typeof(==),param{Tuple{Symbol}},param{Tuple{Symbol}}})
    precompile(Tuple{typeof(==),param{Tuple{Symbol}},δ})
    precompile(Tuple{typeof(==),param{Tuple{}},QuantumAlgebra.OpProd})
    precompile(Tuple{typeof(==),param{Tuple{}},QuantumAlgebra.OpSum})
    precompile(Tuple{typeof(==),param{Tuple{}},param{Tuple{Int64,Symbol}}})
    precompile(Tuple{typeof(==),param{Tuple{}},param{Tuple{Int64}}})
    precompile(Tuple{typeof(==),param{Tuple{}},param{Tuple{}}})
    precompile(Tuple{typeof(==),scal{Complex{Int64}},QuantumAlgebra.OpProd})
    precompile(Tuple{typeof(==),scal{Complex{Int64}},QuantumAlgebra.σminus{Tuple{Symbol}}})
    precompile(Tuple{typeof(==),scal{Complex{Int64}},QuantumAlgebra.σplus{Tuple{Symbol}}})
    precompile(Tuple{typeof(==),scal{Complex{Int64}},QuantumAlgebra.σ{Tuple{Symbol}}})
    precompile(Tuple{typeof(==),scal{Complex{Int64}},adag{Tuple{Int64}}})
    precompile(Tuple{typeof(==),scal{Complex{Int64}},adag{Tuple{Symbol}}})
    precompile(Tuple{typeof(==),scal{Complex{Int64}},a{Tuple{Int64}}})
    precompile(Tuple{typeof(==),scal{Complex{Int64}},a{Tuple{Symbol}}})
    precompile(Tuple{typeof(==),scal{Complex{Int64}},param{Tuple{Symbol,Symbol}}})
    precompile(Tuple{typeof(==),scal{Complex{Int64}},param{Tuple{Symbol}}})
    precompile(Tuple{typeof(==),scal{Complex{Int64}},param{Tuple{}}})
    precompile(Tuple{typeof(==),scal{Complex{Int64}},scal{Complex{Int64}}})
    precompile(Tuple{typeof(==),scal{Complex{Int64}},scal{Int64}})
    precompile(Tuple{typeof(==),scal{Complex{Int64}},δ})
    precompile(Tuple{typeof(==),scal{Complex{Rational{Int64}}},QuantumAlgebra.OpProd})
    precompile(Tuple{typeof(==),scal{Complex{Rational{Int64}}},QuantumAlgebra.σ{Tuple{Int64}}})
    precompile(Tuple{typeof(==),scal{Complex{Rational{Int64}}},QuantumAlgebra.σ{Tuple{Symbol}}})
    precompile(Tuple{typeof(==),scal{Complex{Rational{Int64}}},adag{Tuple{Int64}}})
    precompile(Tuple{typeof(==),scal{Complex{Rational{Int64}}},adag{Tuple{Symbol}}})
    precompile(Tuple{typeof(==),scal{Complex{Rational{Int64}}},a{Tuple{Int64}}})
    precompile(Tuple{typeof(==),scal{Complex{Rational{Int64}}},a{Tuple{Symbol}}})
    precompile(Tuple{typeof(==),scal{Complex{Rational{Int64}}},param{Tuple{Symbol,Symbol}}})
    precompile(Tuple{typeof(==),scal{Complex{Rational{Int64}}},param{Tuple{Symbol}}})
    precompile(Tuple{typeof(==),scal{Complex{Rational{Int64}}},scal{Complex{Int64}}})
    precompile(Tuple{typeof(==),scal{Complex{Rational{Int64}}},scal{Complex{Rational{Int64}}}})
    precompile(Tuple{typeof(==),scal{Complex{Rational{Int64}}},scal{Int64}})
    precompile(Tuple{typeof(==),scal{Complex{Rational{Int64}}},scal{Rational{Int64}}})
    precompile(Tuple{typeof(==),scal{Complex{Rational{Int64}}},δ})
    precompile(Tuple{typeof(==),scal{Float64},QuantumAlgebra.OpProd})
    precompile(Tuple{typeof(==),scal{Float64},adag{Tuple{Symbol}}})
    precompile(Tuple{typeof(==),scal{Float64},a{Tuple{Symbol}}})
    precompile(Tuple{typeof(==),scal{Float64},scal{Float64}})
    precompile(Tuple{typeof(==),scal{Float64},scal{Rational{Int64}}})
    precompile(Tuple{typeof(==),scal{Float64},δ})
    precompile(Tuple{typeof(==),scal{Int64},QuantumAlgebra.OpProd})
    precompile(Tuple{typeof(==),scal{Int64},scal{Complex{Int64}}})
    precompile(Tuple{typeof(==),scal{Int64},scal{Float64}})
    precompile(Tuple{typeof(==),scal{Int64},scal{Int64}})
    precompile(Tuple{typeof(==),scal{Rational{Int64}},QuantumAlgebra.OpProd})
    precompile(Tuple{typeof(==),scal{Rational{Int64}},QuantumAlgebra.σ{Tuple{Int64}}})
    precompile(Tuple{typeof(==),scal{Rational{Int64}},QuantumAlgebra.σ{Tuple{Symbol}}})
    precompile(Tuple{typeof(==),scal{Rational{Int64}},adag{Tuple{Int64}}})
    precompile(Tuple{typeof(==),scal{Rational{Int64}},a{Tuple{Int64}}})
    precompile(Tuple{typeof(==),scal{Rational{Int64}},scal{Rational{Int64}}})
    precompile(Tuple{typeof(==),δ,QuantumAlgebra.OpSum})
    precompile(Tuple{typeof(==),δ,QuantumAlgebra.σ{Tuple{Symbol}}})
    precompile(Tuple{typeof(==),δ,adag{Tuple{Int64}}})
    precompile(Tuple{typeof(==),δ,adag{Tuple{Symbol,Symbol}}})
    precompile(Tuple{typeof(==),δ,adag{Tuple{Symbol}}})
    precompile(Tuple{typeof(==),δ,a{Tuple{Int64}}})
    precompile(Tuple{typeof(==),δ,a{Tuple{Symbol}}})
    precompile(Tuple{typeof(==),δ,param{Tuple{Symbol,Symbol}}})
    precompile(Tuple{typeof(==),δ,param{Tuple{Symbol}}})
    precompile(Tuple{typeof(==),δ,δ})
    precompile(Tuple{typeof(>),Corr,QuantumAlgebra.OpProd})
    precompile(Tuple{typeof(>),OpSumAnalytic,QuantumAlgebra.OpProd})
    precompile(Tuple{typeof(>),OpSumAnalytic,scal{Complex{Rational{Int64}}}})
    precompile(Tuple{typeof(>),OpSumAnalytic,scal{Int64}})
    precompile(Tuple{typeof(>),QuantumAlgebra.OpProd,Corr})
    precompile(Tuple{typeof(>),QuantumAlgebra.OpProd,OpSumAnalytic})
    precompile(Tuple{typeof(>),QuantumAlgebra.OpProd,QuantumAlgebra.OpProd})
    precompile(Tuple{typeof(>),QuantumAlgebra.OpProd,QuantumAlgebra.σminus{Tuple{Int64}}})
    precompile(Tuple{typeof(>),QuantumAlgebra.OpProd,QuantumAlgebra.σplus{Tuple{Int64}}})
    precompile(Tuple{typeof(>),QuantumAlgebra.OpProd,QuantumAlgebra.σ{Tuple{Int64}}})
    precompile(Tuple{typeof(>),QuantumAlgebra.OpProd,QuantumAlgebra.σ{Tuple{Symbol}}})
    precompile(Tuple{typeof(>),QuantumAlgebra.OpProd,adag{Tuple{Int64}}})
    precompile(Tuple{typeof(>),QuantumAlgebra.OpProd,adag{Tuple{Symbol}}})
    precompile(Tuple{typeof(>),QuantumAlgebra.OpProd,a{Tuple{Int64}}})
    precompile(Tuple{typeof(>),QuantumAlgebra.OpProd,a{Tuple{Symbol}}})
    precompile(Tuple{typeof(>),QuantumAlgebra.OpProd,param{Tuple{Int64}}})
    precompile(Tuple{typeof(>),QuantumAlgebra.OpProd,param{Tuple{}}})
    precompile(Tuple{typeof(>),QuantumAlgebra.OpProd,scal{Complex{Int64}}})
    precompile(Tuple{typeof(>),QuantumAlgebra.OpProd,scal{Complex{Rational{Int64}}}})
    precompile(Tuple{typeof(>),QuantumAlgebra.OpProd,scal{Float64}})
    precompile(Tuple{typeof(>),QuantumAlgebra.OpProd,scal{Int64}})
    precompile(Tuple{typeof(>),QuantumAlgebra.OpProd,scal{Rational{Int64}}})
    precompile(Tuple{typeof(>),QuantumAlgebra.OpProd,δ})
    precompile(Tuple{typeof(>),QuantumAlgebra.σminus{Tuple{Int64}},QuantumAlgebra.OpProd})
    precompile(Tuple{typeof(>),QuantumAlgebra.σminus{Tuple{}},QuantumAlgebra.σminus{Tuple{}}})
    precompile(Tuple{typeof(>),QuantumAlgebra.σplus{Tuple{Int64}},QuantumAlgebra.OpProd})
    precompile(Tuple{typeof(>),QuantumAlgebra.σplus{Tuple{}},scal{Complex{Int64}}})
    precompile(Tuple{typeof(>),QuantumAlgebra.σ{Tuple{Int64}},QuantumAlgebra.OpProd})
    precompile(Tuple{typeof(>),QuantumAlgebra.σ{Tuple{Symbol,Symbol}},QuantumAlgebra.σ{Tuple{Symbol,Symbol}}})
    precompile(Tuple{typeof(>),QuantumAlgebra.σ{Tuple{Symbol,Symbol}},scal{Complex{Rational{Int64}}}})
    precompile(Tuple{typeof(>),QuantumAlgebra.σ{Tuple{Symbol}},OpSumAnalytic})
    precompile(Tuple{typeof(>),QuantumAlgebra.σ{Tuple{Symbol}},scal{Complex{Rational{Int64}}}})
    precompile(Tuple{typeof(>),QuantumAlgebra.σ{Tuple{}},scal{Complex{Rational{Int64}}}})
    precompile(Tuple{typeof(>),a{Tuple{Symbol}},QuantumAlgebra.OpProd})
    precompile(Tuple{typeof(>),scal{Complex{Int64}},scal{Complex{Int64}}})
    precompile(Tuple{typeof(>),scal{Int64},QuantumAlgebra.OpProd})
    precompile(Tuple{typeof(>),δ,QuantumAlgebra.OpProd})
    precompile(Tuple{typeof(Avac),OpSumAnalytic})
    precompile(Tuple{typeof(Avac),QuantumAlgebra.OpProd})
    precompile(Tuple{typeof(Avac),QuantumAlgebra.OpSum})
    precompile(Tuple{typeof(Avac),QuantumAlgebra.σminus{Tuple{Int64}}})
    precompile(Tuple{typeof(Avac),QuantumAlgebra.σminus{Tuple{Symbol}}})
    precompile(Tuple{typeof(Avac),QuantumAlgebra.σplus{Tuple{Int64}}})
    precompile(Tuple{typeof(Avac),QuantumAlgebra.σplus{Tuple{Symbol}}})
    precompile(Tuple{typeof(Avac),QuantumAlgebra.σ{Tuple{Int64}}})
    precompile(Tuple{typeof(Avac),QuantumAlgebra.σ{Tuple{Symbol}}})
    precompile(Tuple{typeof(Avac),adag{Tuple{Symbol}}})
    precompile(Tuple{typeof(Avac),a{Tuple{Int64}}})
    precompile(Tuple{typeof(Avac),a{Tuple{Symbol}}})
    precompile(Tuple{typeof(Avac),fdag{Tuple{Symbol}}})
    precompile(Tuple{typeof(Avac),f{Tuple{Symbol}}})
    precompile(Tuple{typeof(Avac),scal{Complex{Rational{Int64}}}})
    precompile(Tuple{typeof(Avac),scal{Float64}})
    precompile(Tuple{typeof(Avac),scal{Int64}})
    precompile(Tuple{typeof(Avac),scal{Rational{Int64}}})
    precompile(Tuple{typeof(Avac),δ})
    precompile(Tuple{typeof(Base.Broadcast.broadcasted),Type,Array{a{Tuple{Int64}},1}})
    precompile(Tuple{typeof(Base.Broadcast.instantiate),Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple},Nothing,typeof(QuantumAlgebra.sortsentinel),Tuple{Tuple{Int64,Symbol}}}})
    precompile(Tuple{typeof(Base.Broadcast.instantiate),Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple},Nothing,typeof(QuantumAlgebra.sortsentinel),Tuple{Tuple{Symbol,Symbol}}}})
    precompile(Tuple{typeof(Base.Broadcast.materialize),Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1},Nothing,Type{ExpVal},Tuple{Array{a{Tuple{Int64}},1}}}})
    precompile(Tuple{typeof(Base.Iterators.filter),Function,QuantumAlgebra.OpProdIter{true}})
    precompile(Tuple{typeof(Base.afoldl),Function,scal{Int64}})
    precompile(Tuple{typeof(Base.afoldl),typeof(*),QuantumAlgebra.OpProd,ExpVal,QuantumAlgebra.σplus{Tuple{Symbol}},adag{Tuple{Int64}},a{Tuple{Int64}}})
    precompile(Tuple{typeof(Base.afoldl),typeof(*),QuantumAlgebra.OpProd,ExpVal,QuantumAlgebra.σ{Tuple{Symbol}},adag{Tuple{Int64}},a{Tuple{Int64}}})
    precompile(Tuple{typeof(Base.afoldl),typeof(*),QuantumAlgebra.OpProd,ExpVal})
    precompile(Tuple{typeof(Base.afoldl),typeof(*),QuantumAlgebra.OpProd,QuantumAlgebra.σminus{Tuple{Symbol,Symbol}}})
    precompile(Tuple{typeof(Base.afoldl),typeof(*),QuantumAlgebra.OpProd,QuantumAlgebra.σplus{Tuple{Symbol}},adag{Tuple{Int64}},a{Tuple{Int64}}})
    precompile(Tuple{typeof(Base.afoldl),typeof(*),QuantumAlgebra.OpProd,QuantumAlgebra.σplus{Tuple{}}})
    precompile(Tuple{typeof(Base.afoldl),typeof(*),QuantumAlgebra.OpProd,QuantumAlgebra.σ{Tuple{Symbol,Symbol}}})
    precompile(Tuple{typeof(Base.afoldl),typeof(*),QuantumAlgebra.OpProd,QuantumAlgebra.σ{Tuple{Symbol}},adag{Tuple{Int64}},a{Tuple{Int64}}})
    precompile(Tuple{typeof(Base.afoldl),typeof(*),QuantumAlgebra.OpProd,QuantumAlgebra.σ{Tuple{Symbol}}})
    precompile(Tuple{typeof(Base.afoldl),typeof(*),QuantumAlgebra.OpProd,QuantumAlgebra.σ{Tuple{}}})
    precompile(Tuple{typeof(Base.afoldl),typeof(*),QuantumAlgebra.OpProd,adag{Tuple{Int64}},a{Tuple{Int64}}})
    precompile(Tuple{typeof(Base.afoldl),typeof(*),QuantumAlgebra.OpProd,adag{Tuple{Int64}}})
    precompile(Tuple{typeof(Base.afoldl),typeof(*),QuantumAlgebra.OpProd,adag{Tuple{Symbol}},adag{Tuple{Symbol}},a{Tuple{Symbol}},a{Tuple{Symbol}}})
    precompile(Tuple{typeof(Base.afoldl),typeof(*),QuantumAlgebra.OpProd,adag{Tuple{Symbol}},a{Tuple{Symbol}},a{Tuple{Symbol}}})
    precompile(Tuple{typeof(Base.afoldl),typeof(*),QuantumAlgebra.OpProd,adag{Tuple{Symbol}},a{Tuple{Symbol}}})
    precompile(Tuple{typeof(Base.afoldl),typeof(*),QuantumAlgebra.OpProd,adag{Tuple{Symbol}}})
    precompile(Tuple{typeof(Base.afoldl),typeof(*),QuantumAlgebra.OpProd,a{Tuple{Int64}},a{Tuple{Int64}}})
    precompile(Tuple{typeof(Base.afoldl),typeof(*),QuantumAlgebra.OpProd,a{Tuple{Int64}}})
    precompile(Tuple{typeof(Base.afoldl),typeof(*),QuantumAlgebra.OpProd,a{Tuple{Symbol,Symbol}}})
    precompile(Tuple{typeof(Base.afoldl),typeof(*),QuantumAlgebra.OpProd,a{Tuple{Symbol}},a{Tuple{Symbol}}})
    precompile(Tuple{typeof(Base.afoldl),typeof(*),QuantumAlgebra.OpProd,a{Tuple{}}})
    precompile(Tuple{typeof(Base.afoldl),typeof(*),QuantumAlgebra.OpProd,param{Tuple{Int64,Symbol}}})
    precompile(Tuple{typeof(Base.afoldl),typeof(*),QuantumAlgebra.OpProd,param{Tuple{Int64}},param{Tuple{Int64,Symbol}}})
    precompile(Tuple{typeof(Base.afoldl),typeof(*),QuantumAlgebra.OpProd,param{Tuple{Int64}},param{Tuple{Int64}},param{Tuple{Int64,Symbol}}})
    precompile(Tuple{typeof(Base.afoldl),typeof(*),QuantumAlgebra.OpProd,param{Tuple{Int64}},param{Tuple{Int64}},param{Tuple{Int64}},param{Tuple{Int64,Symbol}}})
    precompile(Tuple{typeof(Base.afoldl),typeof(*),QuantumAlgebra.OpProd,param{Tuple{Int64}},param{Tuple{Int64}}})
    precompile(Tuple{typeof(Base.afoldl),typeof(*),QuantumAlgebra.OpProd,param{Tuple{Int64}}})
    precompile(Tuple{typeof(Base.afoldl),typeof(*),QuantumAlgebra.OpProd,param{Tuple{}},param{Tuple{Int64}},param{Tuple{Int64,Symbol}}})
    precompile(Tuple{typeof(Base.afoldl),typeof(*),QuantumAlgebra.OpProd,param{Tuple{}},param{Tuple{Int64}},param{Tuple{Int64}}})
    precompile(Tuple{typeof(Base.afoldl),typeof(*),QuantumAlgebra.OpProd,param{Tuple{}},param{Tuple{}},param{Tuple{Int64}},param{Tuple{Int64,Symbol}}})
    precompile(Tuple{typeof(Base.afoldl),typeof(*),QuantumAlgebra.OpProd,param{Tuple{}},param{Tuple{}},param{Tuple{Int64}},param{Tuple{Int64}}})
    precompile(Tuple{typeof(Base.afoldl),typeof(*),QuantumAlgebra.OpSum,Corr})
    precompile(Tuple{typeof(Base.afoldl),typeof(*),QuantumAlgebra.OpSum,ExpVal,Corr})
    precompile(Tuple{typeof(Base.afoldl),typeof(*),QuantumAlgebra.OpSum,QuantumAlgebra.OpSum})
    precompile(Tuple{typeof(Base.afoldl),typeof(*),QuantumAlgebra.OpSum,QuantumAlgebra.σ{Tuple{Int64}},adag{Tuple{Int64}},adag{Tuple{Int64}},QuantumAlgebra.σ{Tuple{Int64}},a{Tuple{Int64}},adag{Tuple{Int64}}})
    precompile(Tuple{typeof(Base.afoldl),typeof(*),QuantumAlgebra.OpSum,QuantumAlgebra.σ{Tuple{Int64}},a{Tuple{Int64}},adag{Tuple{Int64}}})
    precompile(Tuple{typeof(Base.afoldl),typeof(*),QuantumAlgebra.OpSum,QuantumAlgebra.σ{Tuple{Int64}}})
    precompile(Tuple{typeof(Base.afoldl),typeof(*),QuantumAlgebra.OpSum,adag{Tuple{Int64}},ExpVal,Corr})
    precompile(Tuple{typeof(Base.afoldl),typeof(*),QuantumAlgebra.OpSum,adag{Tuple{Int64}},QuantumAlgebra.σ{Tuple{Int64}},a{Tuple{Int64}},adag{Tuple{Int64}}})
    precompile(Tuple{typeof(Base.afoldl),typeof(*),QuantumAlgebra.OpSum,adag{Tuple{Int64}},adag{Tuple{Int64}},QuantumAlgebra.σ{Tuple{Int64}},a{Tuple{Int64}},adag{Tuple{Int64}}})
    precompile(Tuple{typeof(Base.afoldl),typeof(*),QuantumAlgebra.OpSum,adag{Tuple{Int64}},a{Tuple{Symbol}},adag{Tuple{Symbol}}})
    precompile(Tuple{typeof(Base.afoldl),typeof(*),QuantumAlgebra.OpSum,adag{Tuple{Int64}}})
    precompile(Tuple{typeof(Base.afoldl),typeof(*),QuantumAlgebra.OpSum,adag{Tuple{Symbol}}})
    precompile(Tuple{typeof(Base.afoldl),typeof(*),QuantumAlgebra.OpSum,a{Tuple{Int64}},adag{Tuple{Int64}},ExpVal,Corr})
    precompile(Tuple{typeof(Base.afoldl),typeof(*),QuantumAlgebra.OpSum,a{Tuple{Int64}},adag{Tuple{Int64}},a{Tuple{Symbol}},adag{Tuple{Symbol}}})
    precompile(Tuple{typeof(Base.afoldl),typeof(*),QuantumAlgebra.OpSum,a{Tuple{Int64}},adag{Tuple{Int64}}})
    precompile(Tuple{typeof(Base.afoldl),typeof(*),QuantumAlgebra.OpSum,a{Tuple{Symbol}},adag{Tuple{Symbol}}})
    precompile(Tuple{typeof(Base.afoldl),typeof(+),QuantumAlgebra.OpSum,QuantumAlgebra.OpProd,QuantumAlgebra.OpProd,QuantumAlgebra.OpProd,QuantumAlgebra.OpProd,QuantumAlgebra.OpProd,QuantumAlgebra.OpProd,QuantumAlgebra.OpProd,QuantumAlgebra.OpProd,QuantumAlgebra.OpProd,QuantumAlgebra.OpProd,QuantumAlgebra.OpProd,QuantumAlgebra.OpProd})
    precompile(Tuple{typeof(Base.afoldl),typeof(+),QuantumAlgebra.OpSum,QuantumAlgebra.OpProd,QuantumAlgebra.OpProd,QuantumAlgebra.OpProd,QuantumAlgebra.OpProd,QuantumAlgebra.OpProd,QuantumAlgebra.OpProd,QuantumAlgebra.OpProd,QuantumAlgebra.OpProd,QuantumAlgebra.OpProd,QuantumAlgebra.OpProd,QuantumAlgebra.OpProd})
    precompile(Tuple{typeof(Base.afoldl),typeof(+),QuantumAlgebra.OpSum,QuantumAlgebra.OpProd,QuantumAlgebra.OpProd,QuantumAlgebra.OpProd,QuantumAlgebra.OpProd,QuantumAlgebra.OpProd,QuantumAlgebra.OpProd,QuantumAlgebra.OpProd,QuantumAlgebra.OpProd,QuantumAlgebra.OpProd,QuantumAlgebra.OpProd})
    precompile(Tuple{typeof(Base.afoldl),typeof(+),QuantumAlgebra.OpSum,QuantumAlgebra.OpProd,QuantumAlgebra.OpProd,QuantumAlgebra.OpProd,QuantumAlgebra.OpProd,QuantumAlgebra.OpProd,QuantumAlgebra.OpProd,QuantumAlgebra.OpProd,QuantumAlgebra.OpProd,QuantumAlgebra.OpProd})
    precompile(Tuple{typeof(Base.afoldl),typeof(+),QuantumAlgebra.OpSum,QuantumAlgebra.OpProd,QuantumAlgebra.OpProd,QuantumAlgebra.OpProd,QuantumAlgebra.OpProd,QuantumAlgebra.OpProd,QuantumAlgebra.OpProd,QuantumAlgebra.OpProd,QuantumAlgebra.OpProd})
    precompile(Tuple{typeof(Base.afoldl),typeof(+),QuantumAlgebra.OpSum,QuantumAlgebra.OpProd,QuantumAlgebra.OpProd,QuantumAlgebra.OpProd,QuantumAlgebra.OpProd,QuantumAlgebra.OpProd,QuantumAlgebra.OpProd,QuantumAlgebra.OpProd})
    precompile(Tuple{typeof(Base.afoldl),typeof(+),QuantumAlgebra.OpSum,QuantumAlgebra.OpProd,QuantumAlgebra.OpProd,QuantumAlgebra.OpProd,QuantumAlgebra.OpProd,QuantumAlgebra.OpProd,QuantumAlgebra.OpProd})
    precompile(Tuple{typeof(Base.afoldl),typeof(+),QuantumAlgebra.OpSum,QuantumAlgebra.OpProd,QuantumAlgebra.OpProd,QuantumAlgebra.OpProd,QuantumAlgebra.OpProd,QuantumAlgebra.OpProd})
    precompile(Tuple{typeof(Base.afoldl),typeof(+),QuantumAlgebra.OpSum,QuantumAlgebra.OpProd,QuantumAlgebra.OpProd,QuantumAlgebra.OpProd,QuantumAlgebra.OpProd})
    precompile(Tuple{typeof(Base.afoldl),typeof(+),QuantumAlgebra.OpSum,QuantumAlgebra.OpProd,QuantumAlgebra.OpProd,QuantumAlgebra.OpProd})
    precompile(Tuple{typeof(Base.afoldl),typeof(+),QuantumAlgebra.OpSum,QuantumAlgebra.OpProd,QuantumAlgebra.OpProd})
    precompile(Tuple{typeof(Base.afoldl),typeof(+),QuantumAlgebra.OpSum,QuantumAlgebra.OpProd})
    precompile(Tuple{typeof(Base.indexed_iterate),Tuple{Corr,Corr},Int64})
    precompile(Tuple{typeof(Base.indexed_iterate),Tuple{Corr,Nothing},Int64})
    precompile(Tuple{typeof(Base.indexed_iterate),Tuple{Corr,QuantumAlgebra.OpProd},Int64})
    precompile(Tuple{typeof(Base.indexed_iterate),Tuple{Corr,QuantumAlgebra.σplus{Tuple{Int64}}},Int64})
    precompile(Tuple{typeof(Base.indexed_iterate),Tuple{Corr,QuantumAlgebra.σ{Tuple{Int64}}},Int64})
    precompile(Tuple{typeof(Base.indexed_iterate),Tuple{ExpVal,Corr},Int64})
    precompile(Tuple{typeof(Base.indexed_iterate),Tuple{ExpVal,ExpVal},Int64})
    precompile(Tuple{typeof(Base.indexed_iterate),Tuple{ExpVal,Nothing},Int64})
    precompile(Tuple{typeof(Base.indexed_iterate),Tuple{ExpVal,QuantumAlgebra.OpProd},Int64})
    precompile(Tuple{typeof(Base.indexed_iterate),Tuple{QuantumAlgebra.OpProd,QuantumAlgebra.OpSum},Int64})
    precompile(Tuple{typeof(Base.indexed_iterate),Tuple{QuantumAlgebra.OpProd,scal{Int64}},Int64})
    precompile(Tuple{typeof(Base.indexed_iterate),Tuple{QuantumAlgebra.σminus{Tuple{Int64}},Nothing},Int64})
    precompile(Tuple{typeof(Base.indexed_iterate),Tuple{QuantumAlgebra.σminus{Tuple{Symbol,Symbol}},Nothing},Int64})
    precompile(Tuple{typeof(Base.indexed_iterate),Tuple{QuantumAlgebra.σminus{Tuple{Symbol}},Nothing},Int64})
    precompile(Tuple{typeof(Base.indexed_iterate),Tuple{QuantumAlgebra.σminus{Tuple{}},Nothing},Int64})
    precompile(Tuple{typeof(Base.indexed_iterate),Tuple{QuantumAlgebra.σplus{Tuple{Int64}},Nothing},Int64})
    precompile(Tuple{typeof(Base.indexed_iterate),Tuple{QuantumAlgebra.σplus{Tuple{Int64}},QuantumAlgebra.σminus{Tuple{Int64}}},Int64})
    precompile(Tuple{typeof(Base.indexed_iterate),Tuple{QuantumAlgebra.σplus{Tuple{Symbol,Symbol}},QuantumAlgebra.σminus{Tuple{Symbol,Symbol}}},Int64})
    precompile(Tuple{typeof(Base.indexed_iterate),Tuple{QuantumAlgebra.σplus{Tuple{Symbol}},QuantumAlgebra.σminus{Tuple{Symbol}}},Int64})
    precompile(Tuple{typeof(Base.indexed_iterate),Tuple{QuantumAlgebra.σplus{Tuple{}},QuantumAlgebra.σminus{Tuple{}}},Int64})
    precompile(Tuple{typeof(Base.indexed_iterate),Tuple{QuantumAlgebra.σ{Tuple{Int64}},Nothing},Int64})
    precompile(Tuple{typeof(Base.indexed_iterate),Tuple{QuantumAlgebra.σ{Tuple{Symbol}},Nothing},Int64})
    precompile(Tuple{typeof(Base.indexed_iterate),Tuple{QuantumAlgebra.σ{Tuple{Symbol}},QuantumAlgebra.OpProd},Int64})
    precompile(Tuple{typeof(Base.indexed_iterate),Tuple{QuantumAlgebra.σ{Tuple{Symbol}},QuantumAlgebra.σ{Tuple{Symbol}}},Int64})
    precompile(Tuple{typeof(Base.indexed_iterate),Tuple{adag{Tuple{Int64}},Nothing},Int64})
    precompile(Tuple{typeof(Base.indexed_iterate),Tuple{adag{Tuple{Int64}},QuantumAlgebra.OpProd},Int64})
    precompile(Tuple{typeof(Base.indexed_iterate),Tuple{adag{Tuple{Int64}},QuantumAlgebra.σminus{Tuple{Int64}}},Int64})
    precompile(Tuple{typeof(Base.indexed_iterate),Tuple{adag{Tuple{Int64}},QuantumAlgebra.σminus{Tuple{Symbol}}},Int64})
    precompile(Tuple{typeof(Base.indexed_iterate),Tuple{adag{Tuple{Int64}},QuantumAlgebra.σplus{Tuple{Int64}}},Int64})
    precompile(Tuple{typeof(Base.indexed_iterate),Tuple{adag{Tuple{Int64}},QuantumAlgebra.σ{Tuple{Int64}}},Int64})
    precompile(Tuple{typeof(Base.indexed_iterate),Tuple{adag{Tuple{Int64}},a{Tuple{Int64}}},Int64})
    precompile(Tuple{typeof(Base.indexed_iterate),Tuple{adag{Tuple{Symbol}},Nothing},Int64})
    precompile(Tuple{typeof(Base.indexed_iterate),Tuple{adag{Tuple{Symbol}},QuantumAlgebra.OpProd},Int64})
    precompile(Tuple{typeof(Base.indexed_iterate),Tuple{adag{Tuple{Symbol}},QuantumAlgebra.σ{Tuple{Symbol}}},Int64})
    precompile(Tuple{typeof(Base.indexed_iterate),Tuple{adag{Tuple{Symbol}},adag{Tuple{Symbol}}},Int64})
    precompile(Tuple{typeof(Base.indexed_iterate),Tuple{adag{Tuple{Symbol}},a{Tuple{Int64}}},Int64})
    precompile(Tuple{typeof(Base.indexed_iterate),Tuple{adag{Tuple{Symbol}},a{Tuple{Symbol}}},Int64})
    precompile(Tuple{typeof(Base.indexed_iterate),Tuple{a{Tuple{Int64}},Nothing},Int64})
    precompile(Tuple{typeof(Base.indexed_iterate),Tuple{a{Tuple{Int64}},QuantumAlgebra.σminus{Tuple{Int64}}},Int64})
    precompile(Tuple{typeof(Base.indexed_iterate),Tuple{a{Tuple{Int64}},QuantumAlgebra.σplus{Tuple{Int64}}},Int64})
    precompile(Tuple{typeof(Base.indexed_iterate),Tuple{a{Tuple{Int64}},QuantumAlgebra.σ{Tuple{Int64}}},Int64})
    precompile(Tuple{typeof(Base.indexed_iterate),Tuple{a{Tuple{Int64}},a{Tuple{Int64}}},Int64})
    precompile(Tuple{typeof(Base.indexed_iterate),Tuple{a{Tuple{Int64}},a{Tuple{Symbol}}},Int64})
    precompile(Tuple{typeof(Base.indexed_iterate),Tuple{a{Tuple{Symbol}},Nothing},Int64})
    precompile(Tuple{typeof(Base.indexed_iterate),Tuple{a{Tuple{Symbol}},QuantumAlgebra.OpProd},Int64})
    precompile(Tuple{typeof(Base.indexed_iterate),Tuple{a{Tuple{Symbol}},QuantumAlgebra.σ{Tuple{Symbol}}},Int64})
    precompile(Tuple{typeof(Base.indexed_iterate),Tuple{a{Tuple{Symbol}},a{Tuple{Symbol}}},Int64})
    precompile(Tuple{typeof(Base.indexed_iterate),Tuple{fdag{Tuple{Symbol}},Nothing},Int64})
    precompile(Tuple{typeof(Base.indexed_iterate),Tuple{fdag{Tuple{Symbol}},fdag{Tuple{Symbol}}},Int64})
    precompile(Tuple{typeof(Base.indexed_iterate),Tuple{fdag{Tuple{Symbol}},f{Tuple{Symbol}}},Int64})
    precompile(Tuple{typeof(Base.indexed_iterate),Tuple{f{Tuple{Symbol}},Nothing},Int64})
    precompile(Tuple{typeof(Base.indexed_iterate),Tuple{f{Tuple{Symbol}},f{Tuple{Symbol}}},Int64})
    precompile(Tuple{typeof(Base.indexed_iterate),Tuple{param{Tuple{Symbol,Symbol}},QuantumAlgebra.OpProd},Int64})
    precompile(Tuple{typeof(Base.indexed_iterate),Tuple{param{Tuple{Symbol,Symbol}},QuantumAlgebra.σ{Tuple{Symbol}}},Int64})
    precompile(Tuple{typeof(Base.indexed_iterate),Tuple{param{Tuple{Symbol}},QuantumAlgebra.OpProd},Int64})
    precompile(Tuple{typeof(Base.indexed_iterate),Tuple{param{Tuple{Symbol}},QuantumAlgebra.σ{Tuple{Symbol}}},Int64})
    precompile(Tuple{typeof(Base.indexed_iterate),Tuple{param{Tuple{Symbol}},adag{Tuple{Symbol}}},Int64})
    precompile(Tuple{typeof(Base.indexed_iterate),Tuple{param{Tuple{Symbol}},a{Tuple{Symbol}}},Int64})
    precompile(Tuple{typeof(Base.indexed_iterate),Tuple{scal{Int64},scal{Int64}},Int64})
    precompile(Tuple{typeof(Base.indexed_iterate),Tuple{δ,QuantumAlgebra.OpProd},Int64})
    precompile(Tuple{typeof(Base.indexed_iterate),Tuple{δ,adag{Tuple{Symbol}}},Int64})
    precompile(Tuple{typeof(Base.indexed_iterate),Tuple{δ,a{Tuple{Symbol}}},Int64})
    precompile(Tuple{typeof(Base.mul_prod),scal{Int64},scal{Int64}})
    precompile(Tuple{typeof(Base.mul_prod),δ,δ})
    precompile(Tuple{typeof(Base.print_to_string),Corr,Vararg{Any,N} where N})
    precompile(Tuple{typeof(Base.print_to_string),ExpVal,Vararg{Any,N} where N})
    precompile(Tuple{typeof(Base.print_to_string),QuantumAlgebra.OpProd,Vararg{Any,N} where N})
    precompile(Tuple{typeof(Base.print_to_string),adag{Tuple{Int64,Symbol}},Vararg{Any,N} where N})
    precompile(Tuple{typeof(Base.print_to_string),adag{Tuple{Int64}},Vararg{Any,N} where N})
    precompile(Tuple{typeof(Base.print_to_string),adag{Tuple{Symbol}},Vararg{Any,N} where N})
    precompile(Tuple{typeof(Base.print_to_string),a{Tuple{Int64}},Vararg{Any,N} where N})
    precompile(Tuple{typeof(Base.print_to_string),scal{Int64},Vararg{Any,N} where N})
    precompile(Tuple{typeof(Base.promote_typeof),QuantumAlgebra.OpProd,QuantumAlgebra.OpProd})
    precompile(Tuple{typeof(Base.promote_typeof),QuantumAlgebra.σ{Tuple{Symbol}},QuantumAlgebra.σ{Tuple{Symbol}},Vararg{QuantumAlgebra.σ{Tuple{Symbol}},N} where N})
    precompile(Tuple{typeof(Base.promote_typeof),Tuple{QuantumAlgebra.OpProd,QuantumAlgebra.OpSum},Tuple{QuantumAlgebra.OpProd,scal{Int64}}})
    precompile(Tuple{typeof(Base.promote_typeof),Tuple{scal{Int64},scal{Int64}},Tuple{QuantumAlgebra.OpProd,QuantumAlgebra.OpSum},Vararg{Any,N} where N})
    precompile(Tuple{typeof(Base.promote_typeof),adag{Tuple{Symbol}},QuantumAlgebra.σ{Tuple{Symbol}},Vararg{QuantumAlgebra.σ{Tuple{Symbol}},N} where N})
    precompile(Tuple{typeof(Base.promote_typeof),a{Tuple{Symbol}},adag{Tuple{Symbol}},Vararg{Any,N} where N})
    precompile(Tuple{typeof(Base.promote_typeof),scal{Int64},QuantumAlgebra.OpProd,Vararg{QuantumAlgebra.OpProd,N} where N})
    precompile(Tuple{typeof(Base.revargs),param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},Vararg{Any,N} where N})
    precompile(Tuple{typeof(Base.revargs),param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}}})
    precompile(Tuple{typeof(Base.revargs),param{Tuple{Symbol,Symbol}},param{Tuple{Symbol}},Vararg{param{Tuple{Symbol}},N} where N})
    precompile(Tuple{typeof(Base.revargs),param{Tuple{Symbol,Symbol}},param{Tuple{Symbol}}})
    precompile(Tuple{typeof(Base.revargs),param{Tuple{Symbol,Symbol}}})
    precompile(Tuple{typeof(Base.revargs),param{Tuple{Symbol}},param{Tuple{Symbol}},Vararg{param{Tuple{Symbol}},N} where N})
    precompile(Tuple{typeof(Base.revargs),param{Tuple{Symbol}},param{Tuple{Symbol}}})
    precompile(Tuple{typeof(Base.revargs),param{Tuple{Symbol}}})
    precompile(Tuple{typeof(Base.revargs),δ,param{Tuple{Symbol,Symbol}},Vararg{Any,N} where N})
    precompile(Tuple{typeof(Base.revargs),δ,param{Tuple{Symbol,Symbol}},Vararg{param{Tuple{Symbol,Symbol}},N} where N})
    precompile(Tuple{typeof(Base.revargs),δ,param{Tuple{Symbol,Symbol}}})
    precompile(Tuple{typeof(Base.revargs),δ,param{Tuple{Symbol}},Vararg{param{Tuple{Symbol}},N} where N})
    precompile(Tuple{typeof(Base.revargs),δ,param{Tuple{Symbol}}})
    precompile(Tuple{typeof(Base.revargs),δ,δ,Vararg{Any,N} where N})
    precompile(Tuple{typeof(Base.revargs),δ,δ})
    precompile(Tuple{typeof(Base.revargs),δ})
    precompile(Tuple{typeof(Base.vect),QuantumAlgebra.OpProd,Vararg{QuantumAlgebra.OpProd,N} where N})
    precompile(Tuple{typeof(Base.vect),Tuple{scal{Int64},scal{Int64}},Vararg{Any,N} where N})
    precompile(Tuple{typeof(Base.vect),a{Tuple{Symbol}},Vararg{Any,N} where N})
    precompile(Tuple{typeof(Base.vect),scal{Int64},Vararg{Any,N} where N})
    precompile(Tuple{typeof(CorrOrExp),QuantumAlgebra.OpProd})
    precompile(Tuple{typeof(CorrOrExp),a{Tuple{Int64}}})
    precompile(Tuple{typeof(QuantumAlgebra._vacExpVal),OpSumAnalytic})
    precompile(Tuple{typeof(QuantumAlgebra._vacExpVal),QuantumAlgebra.OpProd})
    precompile(Tuple{typeof(QuantumAlgebra._vacExpVal),QuantumAlgebra.OpSum})
    precompile(Tuple{typeof(QuantumAlgebra._vacExpVal),QuantumAlgebra.σ{Tuple{Int64}}})
    precompile(Tuple{typeof(QuantumAlgebra._vacExpVal),QuantumAlgebra.σ{Tuple{Symbol}}})
    precompile(Tuple{typeof(QuantumAlgebra._vacExpVal),scal{Complex{Rational{Int64}}}})
    precompile(Tuple{typeof(QuantumAlgebra._vacExpVal),scal{Float64}})
    precompile(Tuple{typeof(QuantumAlgebra._vacExpVal),scal{Int64}})
    precompile(Tuple{typeof(QuantumAlgebra._vacExpVal),scal{Rational{Int64}}})
    precompile(Tuple{typeof(QuantumAlgebra._vacExpVal),δ})
    precompile(Tuple{typeof(QuantumAlgebra.combinable),Corr,Corr})
    precompile(Tuple{typeof(QuantumAlgebra.combinable),adag{Tuple{Symbol}},adag{Tuple{Symbol}}})
    precompile(Tuple{typeof(QuantumAlgebra.combinable),a{Tuple{Int64}},QuantumAlgebra.OpProd})
    precompile(Tuple{typeof(QuantumAlgebra.combinable),a{Tuple{Symbol}},a{Tuple{Symbol}}})
    precompile(Tuple{typeof(QuantumAlgebra.exchange_inds),QuantumAlgebra.OpProd,Symbol,Symbol})
    precompile(Tuple{typeof(QuantumAlgebra.exptuple),ExpVal})
    precompile(Tuple{typeof(QuantumAlgebra.exptuple),QuantumAlgebra.σminus{Tuple{Symbol}}})
    precompile(Tuple{typeof(QuantumAlgebra.exptuple),QuantumAlgebra.σplus{Tuple{Int64}}})
    precompile(Tuple{typeof(QuantumAlgebra.exptuple),QuantumAlgebra.σplus{Tuple{Symbol}}})
    precompile(Tuple{typeof(QuantumAlgebra.exptuple),QuantumAlgebra.σ{Tuple{Int64}}})
    precompile(Tuple{typeof(QuantumAlgebra.exptuple),QuantumAlgebra.σ{Tuple{Symbol}}})
    precompile(Tuple{typeof(QuantumAlgebra.exptuple),adag{Tuple{Int64,Symbol}}})
    precompile(Tuple{typeof(QuantumAlgebra.exptuple),adag{Tuple{Int64}}})
    precompile(Tuple{typeof(QuantumAlgebra.exptuple),adag{Tuple{Symbol}}})
    precompile(Tuple{typeof(QuantumAlgebra.exptuple),a{Tuple{Int64}}})
    precompile(Tuple{typeof(QuantumAlgebra.exptuple),a{Tuple{Symbol}}})
    precompile(Tuple{typeof(QuantumAlgebra.exptuple),param{Tuple{Int64}}})
    precompile(Tuple{typeof(QuantumAlgebra.exptuple),param{Tuple{}}})
    precompile(Tuple{typeof(QuantumAlgebra.exptuple),scal{Int64}})
    precompile(Tuple{typeof(QuantumAlgebra.extindices),OpSumAnalytic})
    precompile(Tuple{typeof(QuantumAlgebra.iterlesseq),QuantumAlgebra.OpProdIter{false},QuantumAlgebra.OpProdIter{false}})
    precompile(Tuple{typeof(QuantumAlgebra.optuple),ExpVal})
    precompile(Tuple{typeof(QuantumAlgebra.optuple),QuantumAlgebra.σminus{Tuple{Symbol}}})
    precompile(Tuple{typeof(QuantumAlgebra.optuple),QuantumAlgebra.σplus{Tuple{Int64}}})
    precompile(Tuple{typeof(QuantumAlgebra.optuple),QuantumAlgebra.σplus{Tuple{Symbol}}})
    precompile(Tuple{typeof(QuantumAlgebra.optuple),QuantumAlgebra.σ{Tuple{Int64}}})
    precompile(Tuple{typeof(QuantumAlgebra.optuple),QuantumAlgebra.σ{Tuple{Symbol}}})
    precompile(Tuple{typeof(QuantumAlgebra.optuple),adag{Tuple{Int64,Symbol}}})
    precompile(Tuple{typeof(QuantumAlgebra.optuple),adag{Tuple{Int64}}})
    precompile(Tuple{typeof(QuantumAlgebra.optuple),adag{Tuple{Symbol}}})
    precompile(Tuple{typeof(QuantumAlgebra.optuple),a{Tuple{Int64}}})
    precompile(Tuple{typeof(QuantumAlgebra.optuple),a{Tuple{Symbol}}})
    precompile(Tuple{typeof(QuantumAlgebra.optuple),param{Tuple{Int64}}})
    precompile(Tuple{typeof(QuantumAlgebra.optuple),param{Tuple{}}})
    precompile(Tuple{typeof(QuantumAlgebra.optuple),scal{Int64}})
    precompile(Tuple{typeof(QuantumAlgebra.parse_paramstr),String})
    precompile(Tuple{typeof(QuantumAlgebra.preftuple),Corr})
    precompile(Tuple{typeof(QuantumAlgebra.preftuple),ExpVal})
    precompile(Tuple{typeof(QuantumAlgebra.preftuple),QuantumAlgebra.σminus{Tuple{Int64}}})
    precompile(Tuple{typeof(QuantumAlgebra.preftuple),QuantumAlgebra.σminus{Tuple{Symbol,Symbol}}})
    precompile(Tuple{typeof(QuantumAlgebra.preftuple),QuantumAlgebra.σminus{Tuple{Symbol}}})
    precompile(Tuple{typeof(QuantumAlgebra.preftuple),QuantumAlgebra.σminus{Tuple{}}})
    precompile(Tuple{typeof(QuantumAlgebra.preftuple),QuantumAlgebra.σplus{Tuple{Int64}}})
    precompile(Tuple{typeof(QuantumAlgebra.preftuple),QuantumAlgebra.σplus{Tuple{Symbol,Symbol}}})
    precompile(Tuple{typeof(QuantumAlgebra.preftuple),QuantumAlgebra.σplus{Tuple{Symbol}}})
    precompile(Tuple{typeof(QuantumAlgebra.preftuple),QuantumAlgebra.σplus{Tuple{}}})
    precompile(Tuple{typeof(QuantumAlgebra.preftuple),QuantumAlgebra.σ{Tuple{Int64}}})
    precompile(Tuple{typeof(QuantumAlgebra.preftuple),QuantumAlgebra.σ{Tuple{Symbol}}})
    precompile(Tuple{typeof(QuantumAlgebra.preftuple),adag{Tuple{Int64,Symbol}}})
    precompile(Tuple{typeof(QuantumAlgebra.preftuple),adag{Tuple{Int64}}})
    precompile(Tuple{typeof(QuantumAlgebra.preftuple),adag{Tuple{Symbol,Symbol}}})
    precompile(Tuple{typeof(QuantumAlgebra.preftuple),adag{Tuple{Symbol}}})
    precompile(Tuple{typeof(QuantumAlgebra.preftuple),a{Tuple{Int64}}})
    precompile(Tuple{typeof(QuantumAlgebra.preftuple),a{Tuple{Symbol,Symbol}}})
    precompile(Tuple{typeof(QuantumAlgebra.preftuple),a{Tuple{Symbol}}})
    precompile(Tuple{typeof(QuantumAlgebra.preftuple),a{Tuple{}}})
    precompile(Tuple{typeof(QuantumAlgebra.preftuple),fdag{Tuple{Symbol}}})
    precompile(Tuple{typeof(QuantumAlgebra.preftuple),f{Tuple{Symbol}}})
    precompile(Tuple{typeof(QuantumAlgebra.preftuple),param{Tuple{Int64}}})
    precompile(Tuple{typeof(QuantumAlgebra.preftuple),param{Tuple{Symbol,Symbol}}})
    precompile(Tuple{typeof(QuantumAlgebra.preftuple),param{Tuple{Symbol}}})
    precompile(Tuple{typeof(QuantumAlgebra.preftuple),param{Tuple{}}})
    precompile(Tuple{typeof(QuantumAlgebra.preftuple),scal{Int64}})
    precompile(Tuple{typeof(QuantumAlgebra.preftuple),δ})
    precompile(Tuple{typeof(QuantumAlgebra.replace_index),Corr,Symbol,Symbol})
    precompile(Tuple{typeof(QuantumAlgebra.replace_index),ExpVal,Symbol,Symbol})
    precompile(Tuple{typeof(QuantumAlgebra.replace_index),OpSumAnalytic,Symbol,Symbol})
    precompile(Tuple{typeof(QuantumAlgebra.replace_index),QuantumAlgebra.OpProd,Symbol,Int64})
    precompile(Tuple{typeof(QuantumAlgebra.replace_index),QuantumAlgebra.OpProd,Symbol,Symbol})
    precompile(Tuple{typeof(QuantumAlgebra.replace_index),QuantumAlgebra.OpSum,Symbol,Symbol})
    precompile(Tuple{typeof(QuantumAlgebra.replace_index),scal{Complex{Int64}},Symbol,Symbol})
    precompile(Tuple{typeof(QuantumAlgebra.replace_index),scal{Complex{Rational{Int64}}},Symbol,Symbol})
    precompile(Tuple{typeof(QuantumAlgebra.sumindextuple),Corr})
    precompile(Tuple{typeof(QuantumAlgebra.sumindextuple),ExpVal})
    precompile(Tuple{typeof(QuantumAlgebra.sumindextuple),QuantumAlgebra.OpProd})
    precompile(Tuple{typeof(QuantumAlgebra.sumindextuple),QuantumAlgebra.σminus{Tuple{Symbol}}})
    precompile(Tuple{typeof(QuantumAlgebra.sumindextuple),QuantumAlgebra.σplus{Tuple{Symbol}}})
    precompile(Tuple{typeof(QuantumAlgebra.sumindextuple),QuantumAlgebra.σ{Tuple{Symbol}}})
    precompile(Tuple{typeof(QuantumAlgebra.sumindextuple),adag{Tuple{Symbol}}})
    precompile(Tuple{typeof(QuantumAlgebra.sumindextuple),a{Tuple{Symbol}}})
    precompile(Tuple{typeof(QuantumAlgebra.symmetric_index_nums),QuantumAlgebra.OpProd})
    precompile(Tuple{typeof(QuantumAlgebra.use_σpm),Bool})
    precompile(Tuple{typeof(adjoint),Corr})
    precompile(Tuple{typeof(adjoint),ExpVal})
    precompile(Tuple{typeof(adjoint),OpSumAnalytic})
    precompile(Tuple{typeof(adjoint),QuantumAlgebra.OpProd})
    precompile(Tuple{typeof(adjoint),QuantumAlgebra.σminus{Tuple{Int64}}})
    precompile(Tuple{typeof(adjoint),QuantumAlgebra.σminus{Tuple{Symbol}}})
    precompile(Tuple{typeof(adjoint),QuantumAlgebra.σplus{Tuple{Int64}}})
    precompile(Tuple{typeof(adjoint),QuantumAlgebra.σplus{Tuple{Symbol}}})
    precompile(Tuple{typeof(adjoint),QuantumAlgebra.σ{Tuple{Int64}}})
    precompile(Tuple{typeof(adjoint),QuantumAlgebra.σ{Tuple{Symbol}}})
    precompile(Tuple{typeof(adjoint),adag{Tuple{Int64}}})
    precompile(Tuple{typeof(adjoint),adag{Tuple{Symbol}}})
    precompile(Tuple{typeof(adjoint),a{Tuple{Int64,Int64,Symbol}}})
    precompile(Tuple{typeof(adjoint),a{Tuple{Int64}}})
    precompile(Tuple{typeof(adjoint),a{Tuple{Symbol}}})
    precompile(Tuple{typeof(adjoint),a{Tuple{}}})
    precompile(Tuple{typeof(adjoint),fdag{Tuple{}}})
    precompile(Tuple{typeof(adjoint),f{Tuple{}}})
    precompile(Tuple{typeof(adjoint),param{Tuple{Int64,Symbol}}})
    precompile(Tuple{typeof(adjoint),param{Tuple{Int64}}})
    precompile(Tuple{typeof(adjoint),param{Tuple{Symbol,Int64,Symbol}}})
    precompile(Tuple{typeof(adjoint),param{Tuple{Symbol,Symbol}}})
    precompile(Tuple{typeof(adjoint),param{Tuple{Symbol}}})
    precompile(Tuple{typeof(adjoint),param{Tuple{}}})
    precompile(Tuple{typeof(adjoint),scal{Complex{Int64}}})
    precompile(Tuple{typeof(adjoint),scal{Float64}})
    precompile(Tuple{typeof(ascorr),Corr})
    precompile(Tuple{typeof(ascorr),OpSumAnalytic})
    precompile(Tuple{typeof(ascorr),QuantumAlgebra.OpProd})
    precompile(Tuple{typeof(ascorr),QuantumAlgebra.OpSum})
    precompile(Tuple{typeof(ascorr),adag{Tuple{Int64}}})
    precompile(Tuple{typeof(ascorr),a{Tuple{Int64}}})
    precompile(Tuple{typeof(ascorr),scal{Int64}})
    precompile(Tuple{typeof(collect),Type{QuantumAlgebra.Operator},Tuple{scal{Int64},scal{Int64}}})
    precompile(Tuple{typeof(collect),Type{QuantumAlgebra.Operator},Tuple{scal{Int64}}})
    precompile(Tuple{typeof(collect),Type{QuantumAlgebra.Operator},Tuple{δ,δ}})
    precompile(Tuple{typeof(collect),Type{QuantumAlgebra.Operator},Tuple{δ}})
    precompile(Tuple{typeof(comm),OpSumAnalytic,OpSumAnalytic})
    precompile(Tuple{typeof(comm),OpSumAnalytic,QuantumAlgebra.OpProd})
    precompile(Tuple{typeof(comm),OpSumAnalytic,QuantumAlgebra.OpSum})
    precompile(Tuple{typeof(comm),OpSumAnalytic,QuantumAlgebra.σ{Tuple{Symbol}}})
    precompile(Tuple{typeof(comm),OpSumAnalytic,adag{Tuple{Symbol}}})
    precompile(Tuple{typeof(comm),OpSumAnalytic,a{Tuple{Symbol}}})
    precompile(Tuple{typeof(comm),OpSumAnalytic,param{Tuple{Symbol,Symbol}}})
    precompile(Tuple{typeof(comm),OpSumAnalytic,param{Tuple{Symbol}}})
    precompile(Tuple{typeof(comm),OpSumAnalytic,scal{Rational{Int64}}})
    precompile(Tuple{typeof(comm),QuantumAlgebra.OpProd,OpSumAnalytic})
    precompile(Tuple{typeof(comm),QuantumAlgebra.OpProd,QuantumAlgebra.OpProd})
    precompile(Tuple{typeof(comm),QuantumAlgebra.OpProd,QuantumAlgebra.OpSum})
    precompile(Tuple{typeof(comm),QuantumAlgebra.OpProd,param{Tuple{}}})
    precompile(Tuple{typeof(comm),QuantumAlgebra.OpSum,QuantumAlgebra.OpProd})
    precompile(Tuple{typeof(comm),QuantumAlgebra.OpSum,QuantumAlgebra.OpSum})
    precompile(Tuple{typeof(comm),QuantumAlgebra.OpSum,adag{Tuple{Int64}}})
    precompile(Tuple{typeof(comm),QuantumAlgebra.OpSum,param{Tuple{}}})
    precompile(Tuple{typeof(comm),QuantumAlgebra.σminus{Tuple{Int64,Symbol}},QuantumAlgebra.σplus{Tuple{}}})
    precompile(Tuple{typeof(comm),QuantumAlgebra.σminus{Tuple{Int64}},QuantumAlgebra.OpProd})
    precompile(Tuple{typeof(comm),QuantumAlgebra.σminus{Tuple{Int64}},QuantumAlgebra.OpSum})
    precompile(Tuple{typeof(comm),QuantumAlgebra.σminus{Tuple{Int64}},QuantumAlgebra.σminus{Tuple{Int64}}})
    precompile(Tuple{typeof(comm),QuantumAlgebra.σminus{Tuple{Int64}},QuantumAlgebra.σplus{Tuple{Int64}}})
    precompile(Tuple{typeof(comm),QuantumAlgebra.σminus{Tuple{Int64}},scal{Int64}})
    precompile(Tuple{typeof(comm),QuantumAlgebra.σminus{Tuple{Symbol,Symbol}},QuantumAlgebra.σplus{Tuple{Symbol,Symbol}}})
    precompile(Tuple{typeof(comm),QuantumAlgebra.σminus{Tuple{Symbol}},QuantumAlgebra.OpProd})
    precompile(Tuple{typeof(comm),QuantumAlgebra.σminus{Tuple{Symbol}},QuantumAlgebra.OpSum})
    precompile(Tuple{typeof(comm),QuantumAlgebra.σplus{Tuple{Int64}},QuantumAlgebra.OpProd})
    precompile(Tuple{typeof(comm),QuantumAlgebra.σplus{Tuple{Int64}},QuantumAlgebra.OpSum})
    precompile(Tuple{typeof(comm),QuantumAlgebra.σplus{Tuple{Int64}},QuantumAlgebra.σminus{Tuple{Int64}}})
    precompile(Tuple{typeof(comm),QuantumAlgebra.σplus{Tuple{Int64}},QuantumAlgebra.σplus{Tuple{Int64}}})
    precompile(Tuple{typeof(comm),QuantumAlgebra.σplus{Tuple{Int64}},scal{Int64}})
    precompile(Tuple{typeof(comm),QuantumAlgebra.σplus{Tuple{Symbol}},QuantumAlgebra.OpProd})
    precompile(Tuple{typeof(comm),QuantumAlgebra.σplus{Tuple{Symbol}},QuantumAlgebra.OpSum})
    precompile(Tuple{typeof(comm),QuantumAlgebra.σ{Tuple{Int64,Symbol}},QuantumAlgebra.σ{Tuple{}}})
    precompile(Tuple{typeof(comm),QuantumAlgebra.σ{Tuple{Int64}},QuantumAlgebra.OpProd})
    precompile(Tuple{typeof(comm),QuantumAlgebra.σ{Tuple{Int64}},QuantumAlgebra.σ{Tuple{Int64}}})
    precompile(Tuple{typeof(comm),QuantumAlgebra.σ{Tuple{Int64}},param{Tuple{}}})
    precompile(Tuple{typeof(comm),QuantumAlgebra.σ{Tuple{Int64}},scal{Complex{Int64}}})
    precompile(Tuple{typeof(comm),QuantumAlgebra.σ{Tuple{Int64}},scal{Int64}})
    precompile(Tuple{typeof(comm),QuantumAlgebra.σ{Tuple{Symbol}},OpSumAnalytic})
    precompile(Tuple{typeof(comm),QuantumAlgebra.σ{Tuple{Symbol}},QuantumAlgebra.OpProd})
    precompile(Tuple{typeof(comm),QuantumAlgebra.σ{Tuple{Symbol}},QuantumAlgebra.OpSum})
    precompile(Tuple{typeof(comm),QuantumAlgebra.σ{Tuple{Symbol}},QuantumAlgebra.σ{Tuple{Symbol}}})
    precompile(Tuple{typeof(comm),QuantumAlgebra.σ{Tuple{Symbol}},param{Tuple{Symbol,Symbol}}})
    precompile(Tuple{typeof(comm),QuantumAlgebra.σ{Tuple{Symbol}},param{Tuple{Symbol}}})
    precompile(Tuple{typeof(comm),QuantumAlgebra.σ{Tuple{Symbol}},scal{Complex{Rational{Int64}}}})
    precompile(Tuple{typeof(comm),QuantumAlgebra.σ{Tuple{Symbol}},scal{Rational{Int64}}})
    precompile(Tuple{typeof(comm),QuantumAlgebra.σ{Tuple{}},QuantumAlgebra.σ{Tuple{}}})
    precompile(Tuple{typeof(comm),adag{Tuple{Int64}},QuantumAlgebra.OpProd})
    precompile(Tuple{typeof(comm),adag{Tuple{Int64}},a{Tuple{Int64}}})
    precompile(Tuple{typeof(comm),adag{Tuple{Symbol}},OpSumAnalytic})
    precompile(Tuple{typeof(comm),adag{Tuple{Symbol}},QuantumAlgebra.OpProd})
    precompile(Tuple{typeof(comm),adag{Tuple{Symbol}},QuantumAlgebra.OpSum})
    precompile(Tuple{typeof(comm),adag{Tuple{Symbol}},QuantumAlgebra.σ{Tuple{Symbol}}})
    precompile(Tuple{typeof(comm),adag{Tuple{Symbol}},a{Tuple{Symbol}}})
    precompile(Tuple{typeof(comm),adag{Tuple{Symbol}},param{Tuple{Symbol,Symbol}}})
    precompile(Tuple{typeof(comm),adag{Tuple{Symbol}},scal{Rational{Int64}}})
    precompile(Tuple{typeof(comm),a{Tuple{Int64}},QuantumAlgebra.OpProd})
    precompile(Tuple{typeof(comm),a{Tuple{Int64}},QuantumAlgebra.OpSum})
    precompile(Tuple{typeof(comm),a{Tuple{Symbol}},OpSumAnalytic})
    precompile(Tuple{typeof(comm),a{Tuple{Symbol}},QuantumAlgebra.OpProd})
    precompile(Tuple{typeof(comm),a{Tuple{Symbol}},QuantumAlgebra.OpSum})
    precompile(Tuple{typeof(comm),a{Tuple{Symbol}},QuantumAlgebra.σ{Tuple{Symbol}}})
    precompile(Tuple{typeof(comm),a{Tuple{Symbol}},param{Tuple{Symbol,Symbol}}})
    precompile(Tuple{typeof(comm),a{Tuple{Symbol}},scal{Rational{Int64}}})
    precompile(Tuple{typeof(comm),fdag{Tuple{Symbol}},fdag{Tuple{Symbol}}})
    precompile(Tuple{typeof(comm),fdag{Tuple{}},f{Tuple{}}})
    precompile(Tuple{typeof(comm),f{Tuple{Symbol}},fdag{Tuple{Symbol}}})
    precompile(Tuple{typeof(comm),f{Tuple{Symbol}},f{Tuple{Symbol}}})
    precompile(Tuple{typeof(comm),param{Tuple{Symbol,Symbol}},OpSumAnalytic})
    precompile(Tuple{typeof(comm),param{Tuple{Symbol,Symbol}},QuantumAlgebra.OpProd})
    precompile(Tuple{typeof(comm),param{Tuple{Symbol}},OpSumAnalytic})
    precompile(Tuple{typeof(comm),param{Tuple{Symbol}},QuantumAlgebra.OpProd})
    precompile(Tuple{typeof(comm),param{Tuple{}},QuantumAlgebra.OpProd})
    precompile(Tuple{typeof(comm),param{Tuple{}},QuantumAlgebra.OpSum})
    precompile(Tuple{typeof(comm),scal{Complex{Int64}},OpSumAnalytic})
    precompile(Tuple{typeof(comm),scal{Complex{Int64}},QuantumAlgebra.OpProd})
    precompile(Tuple{typeof(comm),scal{Complex{Rational{Int64}}},OpSumAnalytic})
    precompile(Tuple{typeof(comm),scal{Complex{Rational{Int64}}},QuantumAlgebra.OpProd})
    precompile(Tuple{typeof(comm),scal{Complex{Rational{Int64}}},QuantumAlgebra.σ{Tuple{Int64}}})
    precompile(Tuple{typeof(comm),scal{Float64},QuantumAlgebra.OpProd})
    precompile(Tuple{typeof(comm),scal{Float64},δ})
    precompile(Tuple{typeof(comm),scal{Int64},OpSumAnalytic})
    precompile(Tuple{typeof(comm),scal{Int64},QuantumAlgebra.OpProd})
    precompile(Tuple{typeof(comm),scal{Rational{Int64}},OpSumAnalytic})
    precompile(Tuple{typeof(comm),scal{Rational{Int64}},QuantumAlgebra.OpProd})
    precompile(Tuple{typeof(comm),scal{Rational{Int64}},QuantumAlgebra.σ{Tuple{Int64}}})
    precompile(Tuple{typeof(comm),δ,QuantumAlgebra.OpProd})
    precompile(Tuple{typeof(convert),Type{QuantumAlgebra.OpProdIter{false}},QuantumAlgebra.OpProdIter{false}})
    precompile(Tuple{typeof(convert),Type{QuantumAlgebra.OpProdIter{true}},QuantumAlgebra.OpProdIter{true}})
    precompile(Tuple{typeof(copy),Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple},Nothing,typeof(QuantumAlgebra.sortsentinel),Tuple{Tuple{Int64,Symbol}}}})
    precompile(Tuple{typeof(copy),Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple},Nothing,typeof(QuantumAlgebra.sortsentinel),Tuple{Tuple{Symbol,Symbol}}}})
    precompile(Tuple{typeof(copyto!),Array{QuantumAlgebra.BaseOperator,1},Tuple{a{Tuple{Symbol}},adag{Tuple{Symbol}},QuantumAlgebra.σ{Tuple{Symbol}},QuantumAlgebra.σ{Tuple{Symbol}},QuantumAlgebra.σ{Tuple{Symbol}}}})
    precompile(Tuple{typeof(copyto!),Array{QuantumAlgebra.Operator,1},Tuple{scal{Int64},QuantumAlgebra.OpProd,QuantumAlgebra.OpProd}})
    precompile(Tuple{typeof(copyto!),Array{Tuple{QuantumAlgebra.Operator,QuantumAlgebra.Operator},1},Tuple{Tuple{scal{Int64},scal{Int64}},Tuple{QuantumAlgebra.OpProd,QuantumAlgebra.OpSum},Tuple{QuantumAlgebra.OpProd,scal{Int64}}}})
    precompile(Tuple{typeof(distribute_indices!),Array{Symbol,1},Corr})
    precompile(Tuple{typeof(distribute_indices!),Array{Symbol,1},ExpVal})
    precompile(Tuple{typeof(distribute_indices!),Array{Symbol,1},QuantumAlgebra.OpProd})
    precompile(Tuple{typeof(distribute_indices!),Array{Symbol,1},QuantumAlgebra.OpSum})
    precompile(Tuple{typeof(distribute_indices!),Array{Symbol,1},QuantumAlgebra.σminus{Tuple{Int64,Symbol}}})
    precompile(Tuple{typeof(distribute_indices!),Array{Symbol,1},QuantumAlgebra.σplus{Tuple{}}})
    precompile(Tuple{typeof(distribute_indices!),Array{Symbol,1},QuantumAlgebra.σ{Tuple{Int64,Symbol}}})
    precompile(Tuple{typeof(distribute_indices!),Array{Symbol,1},QuantumAlgebra.σ{Tuple{}}})
    precompile(Tuple{typeof(distribute_indices!),Array{Symbol,1},adag{Tuple{Int64}}})
    precompile(Tuple{typeof(distribute_indices!),Array{Symbol,1},adag{Tuple{}}})
    precompile(Tuple{typeof(distribute_indices!),Array{Symbol,1},a{Tuple{Int64,Symbol}}})
    precompile(Tuple{typeof(distribute_indices!),Array{Symbol,1},a{Tuple{Int64}}})
    precompile(Tuple{typeof(distribute_indices!),Array{Symbol,1},param{Tuple{Symbol}}})
    precompile(Tuple{typeof(getindex),Array{ExpVal,1},Int64})
    precompile(Tuple{typeof(isapprox),QuantumAlgebra.OpProd,QuantumAlgebra.OpProd})
    precompile(Tuple{typeof(isapprox),QuantumAlgebra.OpSum,QuantumAlgebra.OpSum})
    precompile(Tuple{typeof(isapprox),scal{Float64},scal{Float64}})
    precompile(Tuple{typeof(isapprox),scal{Float64},scal{Int64}})
    precompile(Tuple{typeof(isapprox),δ,δ})
    precompile(Tuple{typeof(isless),ExpVal,Corr})
    precompile(Tuple{typeof(iterate),Array{QuantumAlgebra.BaseOperator,1}})
    precompile(Tuple{typeof(iterate),Array{QuantumAlgebra.OpProd,1}})
    precompile(Tuple{typeof(iterate),Array{QuantumAlgebra.Operator,1}})
    precompile(Tuple{typeof(iterate),Array{Tuple{QuantumAlgebra.Operator,QuantumAlgebra.Operator},1}})
    precompile(Tuple{typeof(iterate),QuantumAlgebra.OpProdIter{false},Corr})
    precompile(Tuple{typeof(iterate),QuantumAlgebra.OpProdIter{false},ExpVal})
    precompile(Tuple{typeof(iterate),QuantumAlgebra.OpProdIter{false},QuantumAlgebra.σminus{Tuple{Int64}}})
    precompile(Tuple{typeof(iterate),QuantumAlgebra.OpProdIter{false},QuantumAlgebra.σminus{Tuple{Symbol,Symbol}}})
    precompile(Tuple{typeof(iterate),QuantumAlgebra.OpProdIter{false},QuantumAlgebra.σminus{Tuple{Symbol}}})
    precompile(Tuple{typeof(iterate),QuantumAlgebra.OpProdIter{false},QuantumAlgebra.σminus{Tuple{}}})
    precompile(Tuple{typeof(iterate),QuantumAlgebra.OpProdIter{false},QuantumAlgebra.σ{Tuple{Int64}}})
    precompile(Tuple{typeof(iterate),QuantumAlgebra.OpProdIter{false},QuantumAlgebra.σ{Tuple{Symbol}}})
    precompile(Tuple{typeof(iterate),QuantumAlgebra.OpProdIter{false},adag{Tuple{Symbol}}})
    precompile(Tuple{typeof(iterate),QuantumAlgebra.OpProdIter{false},a{Tuple{Int64}}})
    precompile(Tuple{typeof(iterate),QuantumAlgebra.OpProdIter{false},a{Tuple{Symbol}}})
    precompile(Tuple{typeof(iterate),QuantumAlgebra.OpProdIter{false},fdag{Tuple{Symbol}}})
    precompile(Tuple{typeof(iterate),QuantumAlgebra.OpProdIter{false},f{Tuple{Symbol}}})
    precompile(Tuple{typeof(iterate),QuantumAlgebra.OpProdIter{true},Corr})
    precompile(Tuple{typeof(iterate),QuantumAlgebra.OpProdIter{true},ExpVal})
    precompile(Tuple{typeof(iterate),QuantumAlgebra.OpProdIter{true},adag{Tuple{Int64}}})
    precompile(Tuple{typeof(iterate),QuantumAlgebra.OpProdIter{true},adag{Tuple{Symbol}}})
    precompile(Tuple{typeof(latex),Corr})
    precompile(Tuple{typeof(latex),ExpVal})
    precompile(Tuple{typeof(latex),OpSumAnalytic})
    precompile(Tuple{typeof(latex),QuantumAlgebra.OpProd})
    precompile(Tuple{typeof(latex),QuantumAlgebra.OpSum})
    precompile(Tuple{typeof(latex),QuantumAlgebra.σplus{Tuple{}}})
    precompile(Tuple{typeof(latex),QuantumAlgebra.σ{Tuple{Symbol}}})
    precompile(Tuple{typeof(latex),QuantumAlgebra.σ{Tuple{}}})
    precompile(Tuple{typeof(latex),adag{Tuple{Symbol}}})
    precompile(Tuple{typeof(latex),a{Tuple{Symbol}}})
    precompile(Tuple{typeof(latex),param{Tuple{Symbol,Symbol}}})
    precompile(Tuple{typeof(latex),param{Tuple{Symbol}}})
    precompile(Tuple{typeof(latex),scal{Complex{Int64}}})
    precompile(Tuple{typeof(latex),scal{Complex{Rational{Int64}}}})
    precompile(Tuple{typeof(latex),scal{Float64}})
    precompile(Tuple{typeof(latex),scal{Int64}})
    precompile(Tuple{typeof(latex),δ})
    precompile(Tuple{typeof(length),Corr})
    precompile(Tuple{typeof(length),ExpVal})
    precompile(Tuple{typeof(length),QuantumAlgebra.σminus{Tuple{Int64}}})
    precompile(Tuple{typeof(length),QuantumAlgebra.σminus{Tuple{Symbol,Symbol}}})
    precompile(Tuple{typeof(length),QuantumAlgebra.σminus{Tuple{Symbol}}})
    precompile(Tuple{typeof(length),QuantumAlgebra.σminus{Tuple{}}})
    precompile(Tuple{typeof(length),QuantumAlgebra.σplus{Tuple{Int64}}})
    precompile(Tuple{typeof(length),QuantumAlgebra.σplus{Tuple{Symbol,Symbol}}})
    precompile(Tuple{typeof(length),QuantumAlgebra.σplus{Tuple{Symbol}}})
    precompile(Tuple{typeof(length),QuantumAlgebra.σplus{Tuple{}}})
    precompile(Tuple{typeof(length),QuantumAlgebra.σ{Tuple{Int64}}})
    precompile(Tuple{typeof(length),QuantumAlgebra.σ{Tuple{Symbol}}})
    precompile(Tuple{typeof(length),adag{Tuple{Int64,Symbol}}})
    precompile(Tuple{typeof(length),adag{Tuple{Int64}}})
    precompile(Tuple{typeof(length),adag{Tuple{Symbol,Symbol}}})
    precompile(Tuple{typeof(length),adag{Tuple{Symbol}}})
    precompile(Tuple{typeof(length),a{Tuple{Int64}}})
    precompile(Tuple{typeof(length),a{Tuple{Symbol,Symbol}}})
    precompile(Tuple{typeof(length),a{Tuple{Symbol}}})
    precompile(Tuple{typeof(length),fdag{Tuple{Symbol}}})
    precompile(Tuple{typeof(length),f{Tuple{Symbol}}})
    precompile(Tuple{typeof(length),param{Tuple{Symbol,Symbol}}})
    precompile(Tuple{typeof(length),param{Tuple{Symbol}}})
    precompile(Tuple{typeof(length),param{Tuple{}}})
    precompile(Tuple{typeof(length),δ})
    precompile(Tuple{typeof(print),Base.GenericIOBuffer{Array{UInt8,1}},Corr})
    precompile(Tuple{typeof(print),Base.GenericIOBuffer{Array{UInt8,1}},ExpVal})
    precompile(Tuple{typeof(print),Base.GenericIOBuffer{Array{UInt8,1}},OpSumAnalytic})
    precompile(Tuple{typeof(print),Base.GenericIOBuffer{Array{UInt8,1}},QuantumAlgebra.OpProd})
    precompile(Tuple{typeof(print),Base.GenericIOBuffer{Array{UInt8,1}},QuantumAlgebra.OpSum})
    precompile(Tuple{typeof(print),Base.GenericIOBuffer{Array{UInt8,1}},QuantumAlgebra.σplus{Tuple{Int64}}})
    precompile(Tuple{typeof(print),Base.GenericIOBuffer{Array{UInt8,1}},QuantumAlgebra.σ{Tuple{Int64}}})
    precompile(Tuple{typeof(print),Base.GenericIOBuffer{Array{UInt8,1}},adag{Tuple{Int64,Symbol}}})
    precompile(Tuple{typeof(print),Base.GenericIOBuffer{Array{UInt8,1}},adag{Tuple{Int64}}})
    precompile(Tuple{typeof(print),Base.GenericIOBuffer{Array{UInt8,1}},adag{Tuple{Symbol}}})
    precompile(Tuple{typeof(print),Base.GenericIOBuffer{Array{UInt8,1}},a{Tuple{Int64}}})
    precompile(Tuple{typeof(print),Base.GenericIOBuffer{Array{UInt8,1}},a{Tuple{Symbol}}})
    precompile(Tuple{typeof(print),Base.GenericIOBuffer{Array{UInt8,1}},scal{Int64}})
    precompile(Tuple{typeof(prodtuple),QuantumAlgebra.OpProd})
    precompile(Tuple{typeof(prodtuple),a{Tuple{Int64}}})
    precompile(Tuple{typeof(prodtuples),QuantumAlgebra.OpSum})
    precompile(Tuple{typeof(promote_type),Type{Tuple{scal{Int64},scal{Int64}}},Type{Tuple{QuantumAlgebra.OpProd,QuantumAlgebra.Operator}}})
    precompile(Tuple{typeof(promote_type),Type{a{Tuple{Symbol}}},Type{QuantumAlgebra.BaseOperator}})
    precompile(Tuple{typeof(show),Base.GenericIOBuffer{Array{UInt8,1}},String,QuantumAlgebra.OpSum})
    precompile(Tuple{typeof(string),Corr,String,Vararg{Any,N} where N})
    precompile(Tuple{typeof(string),ExpVal,String,Vararg{Any,N} where N})
    precompile(Tuple{typeof(string),QuantumAlgebra.OpProd,String,Vararg{Any,N} where N})
    precompile(Tuple{typeof(string),QuantumAlgebra.OpSum})
    precompile(Tuple{typeof(string),adag{Tuple{Int64,Symbol}},String,Vararg{Any,N} where N})
    precompile(Tuple{typeof(string),adag{Tuple{Int64}},String,Vararg{Any,N} where N})
    precompile(Tuple{typeof(string),adag{Tuple{Symbol}},String,Vararg{Any,N} where N})
    precompile(Tuple{typeof(string),a{Tuple{Int64}},String,Vararg{Any,N} where N})
    precompile(Tuple{typeof(string),scal{Int64},String,Vararg{Any,N} where N})
    precompile(Tuple{typeof(sumtuple),QuantumAlgebra.OpSum})
    precompile(Tuple{typeof(sumtuple),a{Tuple{Int64}}})
    precompile(Tuple{typeof(vacA),OpSumAnalytic})
    precompile(Tuple{typeof(vacA),QuantumAlgebra.OpProd})
    precompile(Tuple{typeof(vacA),QuantumAlgebra.OpSum})
    precompile(Tuple{typeof(vacA),QuantumAlgebra.σminus{Tuple{Int64}}})
    precompile(Tuple{typeof(vacA),QuantumAlgebra.σplus{Tuple{Int64}}})
    precompile(Tuple{typeof(vacA),QuantumAlgebra.σplus{Tuple{Symbol}}})
    precompile(Tuple{typeof(vacA),QuantumAlgebra.σ{Tuple{Int64}}})
    precompile(Tuple{typeof(vacA),QuantumAlgebra.σ{Tuple{Symbol}}})
    precompile(Tuple{typeof(vacA),adag{Tuple{Int64}}})
    precompile(Tuple{typeof(vacA),adag{Tuple{Symbol}}})
    precompile(Tuple{typeof(vacA),a{Tuple{Symbol}}})
    precompile(Tuple{typeof(vacA),fdag{Tuple{Symbol}}})
    precompile(Tuple{typeof(vacA),f{Tuple{Symbol}}})
    precompile(Tuple{typeof(vacA),scal{Complex{Rational{Int64}}}})
    precompile(Tuple{typeof(vacA),scal{Float64}})
    precompile(Tuple{typeof(vacA),scal{Int64}})
    precompile(Tuple{typeof(vacA),δ})
    precompile(Tuple{typeof(vacExpVal),OpSumAnalytic})
    precompile(Tuple{typeof(vacExpVal),QuantumAlgebra.OpProd,QuantumAlgebra.OpSum})
    precompile(Tuple{typeof(vacExpVal),QuantumAlgebra.OpProd})
    precompile(Tuple{typeof(vacExpVal),QuantumAlgebra.OpSum})
    precompile(Tuple{typeof(vacExpVal),QuantumAlgebra.σplus{Tuple{Int64}}})
    precompile(Tuple{typeof(vacExpVal),QuantumAlgebra.σ{Tuple{Int64}}})
    precompile(Tuple{typeof(vacExpVal),scal{Int64},QuantumAlgebra.OpSum})
    precompile(Tuple{typeof(σm),Int64,Vararg{Any,N} where N})
    precompile(Tuple{typeof(σm),Int64})
    precompile(Tuple{typeof(σm),Symbol,Vararg{Symbol,N} where N})
    precompile(Tuple{typeof(σm),Symbol})
    precompile(Tuple{typeof(σm),Tuple{Symbol,Symbol}})
    precompile(Tuple{typeof(σm)})
    precompile(Tuple{typeof(σp),Int64})
    precompile(Tuple{typeof(σp),Symbol})
    precompile(Tuple{typeof(σp),Tuple{Symbol,Symbol}})
    precompile(Tuple{typeof(σp)})
    precompile(Tuple{typeof(σx),Int64})
    precompile(Tuple{typeof(σx),Symbol,Vararg{Any,N} where N})
    precompile(Tuple{typeof(σx),Symbol})
    precompile(Tuple{typeof(σx),Tuple{Symbol,Symbol}})
    precompile(Tuple{typeof(σx)})
    precompile(Tuple{typeof(σy),Int64})
    precompile(Tuple{typeof(σy),Symbol,Vararg{Symbol,N} where N})
    precompile(Tuple{typeof(σy),Symbol})
    precompile(Tuple{typeof(σy)})
    precompile(Tuple{typeof(σz),Int64,Vararg{Any,N} where N})
    precompile(Tuple{typeof(σz),Int64})
    precompile(Tuple{typeof(σz),Symbol,Vararg{Symbol,N} where N})
    precompile(Tuple{typeof(σz),Symbol})
    precompile(Tuple{typeof(σz)})
end
