function _precompile_()
    ccall(:jl_generating_output, Cint, ()) == 1 || return nothing
    Base.precompile(Tuple{Core.kwftype(typeof(Base.Sort.sort!)),NamedTuple{(:lt,),Tuple{typeof(QuantumAlgebra.CorrExpTup_isless)}},typeof(sort!),Array{Tuple{Int64,Int64},1}})
    Base.precompile(Tuple{Core.kwftype(typeof(Base.Sort.sort!)),NamedTuple{(:lt,),Tuple{typeof(QuantumAlgebra.CorrExpTup_isless)}},typeof(sort!),Array{Tuple{Int64,Vararg{Int64,N} where N},1}})
    Base.precompile(Tuple{QuantumAlgebra.var"##35#ann",Int64,Vararg{Any,N} where N})
    Base.precompile(Tuple{QuantumAlgebra.var"##35#ann",Int64})
    Base.precompile(Tuple{QuantumAlgebra.var"##35#ann",String})
    Base.precompile(Tuple{QuantumAlgebra.var"##35#ann",Symbol,Vararg{Symbol,N} where N})
    Base.precompile(Tuple{QuantumAlgebra.var"##35#ann",Symbol})
    Base.precompile(Tuple{QuantumAlgebra.var"##35#ann"})
    Base.precompile(Tuple{QuantumAlgebra.var"##36#cre",Int64,Vararg{Any,N} where N})
    Base.precompile(Tuple{QuantumAlgebra.var"##36#cre",Int64})
    Base.precompile(Tuple{QuantumAlgebra.var"##36#cre",Symbol,Vararg{Symbol,N} where N})
    Base.precompile(Tuple{QuantumAlgebra.var"##36#cre",Symbol})
    Base.precompile(Tuple{QuantumAlgebra.var"##36#cre"})
    Base.precompile(Tuple{QuantumAlgebra.var"##39#ann",Symbol})
    Base.precompile(Tuple{QuantumAlgebra.var"##39#ann"})
    Base.precompile(Tuple{QuantumAlgebra.var"##40#cre",Symbol,Vararg{Symbol,N} where N})
    Base.precompile(Tuple{QuantumAlgebra.var"##40#cre",Symbol})
    Base.precompile(Tuple{QuantumAlgebra.var"##40#cre"})
    Base.precompile(Tuple{Type{Array{Tuple{QuantumAlgebra.Operator,QuantumAlgebra.Operator},1}},UndefInitializer,Int64})
    Base.precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1},Axes,F,Args} where Args<:Tuple where F where Axes},Type{ExpVal},Tuple{Array{QuantumAlgebra.BosonDestroy{Tuple{Int64}},1}}})
    Base.precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1},Axes,F,Args} where Args<:Tuple where F where Axes},typeof(QuantumAlgebra._sumterm),Tuple{Tuple{Tuple{param{Tuple{}}}},Tuple{Array{QuantumAlgebra.BaseOperator,1}},Array{Any,1}}})
    Base.precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1},Axes,F,Args} where Args<:Tuple where F where Axes},typeof(QuantumAlgebra._sumterm),Tuple{Tuple{Tuple{scal{Int64},param{Tuple{Int64}}}},Tuple{Array{QuantumAlgebra.σplus{Tuple{Int64}},1}},Array{Any,1}}})
    Base.precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1},Axes,F,Args} where Args<:Tuple where F where Axes},typeof(QuantumAlgebra._sumterm),Tuple{Tuple{Tuple{scal{Int64},param{Tuple{Int64}}}},Tuple{Array{QuantumAlgebra.σ{Tuple{Int64}},1}},Array{Any,1}}})
    Base.precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1},Axes,F,Args} where Args<:Tuple where F where Axes},typeof(QuantumAlgebra._sumterm),Tuple{Tuple{Tuple{scal{Int64},param{Tuple{}}}},Tuple{Array{QuantumAlgebra.BosonDestroy{Tuple{Int64}},1}},Array{Any,1}}})
    Base.precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1},Axes,F,Args} where Args<:Tuple where F where Axes},typeof(QuantumAlgebra._sumterm),Tuple{Tuple{Tuple{scal{Int64}}},Tuple{Array{QuantumAlgebra.BosonDestroy{Tuple{Int64}},1}},Array{Any,1}}})
    Base.precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1},Axes,F,Args} where Args<:Tuple where F where Axes},typeof(QuantumAlgebra._sumterm),Tuple{Tuple{Tuple{}},Tuple{Array{QuantumAlgebra.BaseOperator,1}},Array{Any,1}}})
    Base.precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1},Axes,F,Args} where Args<:Tuple where F where Axes},typeof(QuantumAlgebra._sumterm),Tuple{Tuple{Tuple{}},Tuple{Array{QuantumAlgebra.BosonDestroy,1}},Array{Any,1}}})
    Base.precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1},Axes,F,Args} where Args<:Tuple where F where Axes},typeof(QuantumAlgebra._sumterm),Tuple{Tuple{Tuple{}},Tuple{Array{QuantumAlgebra.BosonDestroy{Tuple{Int64}},1}},Array{Any,1}}})
    Base.precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1},Axes,F,Args} where Args<:Tuple where F where Axes},typeof(QuantumAlgebra._sumterm),Tuple{Tuple{Tuple{}},Tuple{Array{QuantumAlgebra.σ{Tuple{Symbol}},1}},Array{Any,1}}})
    Base.precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple},Axes,F,Args} where Args<:Tuple where F where Axes},typeof(QuantumAlgebra.sortsentinel),Tuple{Tuple{Int64,Symbol}}})
    Base.precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple},Axes,F,Args} where Args<:Tuple where F where Axes},typeof(QuantumAlgebra.sortsentinel),Tuple{Tuple{Symbol,Symbol}}})
    Base.precompile(Tuple{Type{Corr},scal{Int64}})
    Base.precompile(Tuple{Type{ExpVal},scal{Int64}})
    Base.precompile(Tuple{Type{QuantumAlgebra.σminus},Int64,Vararg{Union{Int64, Symbol},N} where N})
    Base.precompile(Tuple{Type{QuantumAlgebra.σminus},Symbol,Vararg{Symbol,N} where N})
    Base.precompile(Tuple{Type{QuantumAlgebra.σplus},Symbol,Vararg{Symbol,N} where N})
    Base.precompile(Tuple{Type{param},Symbol,Char,Tuple{Int64,Symbol}})
    Base.precompile(Tuple{Type{param},Symbol,Char,Tuple{Symbol,Int64,Symbol}})
    Base.precompile(Tuple{Type{param},Symbol,Char,Tuple{Symbol,Symbol,Int64}})
    Base.precompile(Tuple{Type{param},Symbol,Char,Tuple{}})
    Base.precompile(Tuple{Type{param},Symbol,Int64})
    Base.precompile(Tuple{Type{param},Symbol,Symbol,Vararg{Union{Int64, Symbol},N} where N})
    Base.precompile(Tuple{Type{param},Symbol,Symbol})
    Base.precompile(Tuple{Type{param},Symbol,Tuple{}})
    Base.precompile(Tuple{Type{param},Symbol})
    Base.precompile(Tuple{Type{scal},Complex{Int64}})
    Base.precompile(Tuple{Type{scal},Complex{Rational{Int64}}})
    Base.precompile(Tuple{Type{scal},Rational{Int64}})
    Base.precompile(Tuple{typeof(!=),OpSumAnalytic,OpSumAnalytic})
    Base.precompile(Tuple{typeof(!=),QuantumAlgebra.BosonCreate{Tuple{Symbol}},QuantumAlgebra.BosonCreate{Tuple{Symbol}}})
    Base.precompile(Tuple{typeof(!=),QuantumAlgebra.OpProd,QuantumAlgebra.OpProd})
    Base.precompile(Tuple{typeof(!=),QuantumAlgebra.OpSum,QuantumAlgebra.OpProd})
    Base.precompile(Tuple{typeof(!=),QuantumAlgebra.OpSum,QuantumAlgebra.OpSum})
    Base.precompile(Tuple{typeof(!=),QuantumAlgebra.σ{Tuple{Int64}},QuantumAlgebra.σ{Tuple{Int64}}})
    Base.precompile(Tuple{typeof(!=),QuantumAlgebra.σ{Tuple{Symbol,Symbol}},QuantumAlgebra.σ{Tuple{Symbol,Symbol}}})
    Base.precompile(Tuple{typeof(!=),QuantumAlgebra.σ{Tuple{Symbol}},QuantumAlgebra.σ{Tuple{Symbol}}})
    Base.precompile(Tuple{typeof(!=),Tuple{QuantumAlgebra.BosonDestroy{Tuple{Int64}},QuantumAlgebra.BosonDestroy{Tuple{Int64}}},Tuple{QuantumAlgebra.BosonDestroy{Tuple{Int64}},QuantumAlgebra.BosonDestroy{Tuple{Int64}}}})
    Base.precompile(Tuple{typeof(!=),scal{Complex{Rational{Int64}}},scal{Complex{Rational{Int64}}}})
    Base.precompile(Tuple{typeof(!=),scal{Float64},scal{Float64}})
    Base.precompile(Tuple{typeof(!=),scal{Int64},QuantumAlgebra.BosonDestroy{Tuple{Int64}}})
    Base.precompile(Tuple{typeof(!=),scal{Int64},QuantumAlgebra.BosonDestroy{Tuple{Symbol}}})
    Base.precompile(Tuple{typeof(!=),scal{Int64},QuantumAlgebra.OpProd})
    Base.precompile(Tuple{typeof(!=),scal{Int64},QuantumAlgebra.σminus{Tuple{Int64}}})
    Base.precompile(Tuple{typeof(!=),scal{Int64},QuantumAlgebra.σminus{Tuple{Symbol}}})
    Base.precompile(Tuple{typeof(!=),scal{Int64},QuantumAlgebra.σ{Tuple{Int64}}})
    Base.precompile(Tuple{typeof(!=),scal{Rational{Int64}},scal{Rational{Int64}}})
    Base.precompile(Tuple{typeof(!=),δ,QuantumAlgebra.OpProd})
    Base.precompile(Tuple{typeof(!=),δ,δ})
    Base.precompile(Tuple{typeof(*),Corr,scal{Int64}})
    Base.precompile(Tuple{typeof(*),ExpVal,ExpVal,ExpVal})
    Base.precompile(Tuple{typeof(*),ExpVal,scal{Int64}})
    Base.precompile(Tuple{typeof(*),Float64,δ})
    Base.precompile(Tuple{typeof(*),Int64,QuantumAlgebra.BosonDestroy{Tuple{}}})
    Base.precompile(Tuple{typeof(*),Int64,QuantumAlgebra.FermionCreate{Tuple{Symbol}},QuantumAlgebra.FermionCreate{Tuple{Symbol}}})
    Base.precompile(Tuple{typeof(*),Int64,QuantumAlgebra.FermionDestroy{Tuple{Symbol}},QuantumAlgebra.FermionDestroy{Tuple{Symbol}}})
    Base.precompile(Tuple{typeof(*),Int64,param{Tuple{}},QuantumAlgebra.BosonDestroy{Tuple{Int64}},QuantumAlgebra.BosonDestroy{Tuple{Int64}},QuantumAlgebra.BosonDestroy{Tuple{Int64}}})
    Base.precompile(Tuple{typeof(*),Int64,param{Tuple{}},QuantumAlgebra.OpSum})
    Base.precompile(Tuple{typeof(*),OpSumAnalytic,OpSumAnalytic})
    Base.precompile(Tuple{typeof(*),OpSumAnalytic,QuantumAlgebra.BosonCreate{Tuple{Symbol}}})
    Base.precompile(Tuple{typeof(*),OpSumAnalytic,QuantumAlgebra.BosonDestroy{Tuple{Symbol}}})
    Base.precompile(Tuple{typeof(*),OpSumAnalytic,QuantumAlgebra.σ{Tuple{Symbol}}})
    Base.precompile(Tuple{typeof(*),OpSumAnalytic,param{Tuple{Symbol}}})
    Base.precompile(Tuple{typeof(*),QuantumAlgebra.BosonCreate{Tuple{Int64}},QuantumAlgebra.BosonDestroy{Tuple{Int64}},QuantumAlgebra.BosonCreate{Tuple{Int64}},QuantumAlgebra.σ{Tuple{Int64}}})
    Base.precompile(Tuple{typeof(*),QuantumAlgebra.BosonCreate{Tuple{Int64}},QuantumAlgebra.BosonDestroy{Tuple{Int64}},QuantumAlgebra.BosonDestroy{Tuple{Int64}}})
    Base.precompile(Tuple{typeof(*),QuantumAlgebra.BosonCreate{Tuple{Int64}},QuantumAlgebra.BosonDestroy{Tuple{Int64}},QuantumAlgebra.OpSum})
    Base.precompile(Tuple{typeof(*),QuantumAlgebra.BosonCreate{Tuple{Int64}},QuantumAlgebra.BosonDestroy{Tuple{Int64}},QuantumAlgebra.σ{Tuple{Int64}}})
    Base.precompile(Tuple{typeof(*),QuantumAlgebra.BosonCreate{Tuple{Int64}},QuantumAlgebra.OpSum,QuantumAlgebra.OpSum})
    Base.precompile(Tuple{typeof(*),QuantumAlgebra.BosonCreate{Tuple{Int64}},QuantumAlgebra.σplus{Tuple{Int64}},QuantumAlgebra.σminus{Tuple{Int64}}})
    Base.precompile(Tuple{typeof(*),QuantumAlgebra.BosonCreate{Tuple{Symbol}},OpSumAnalytic})
    Base.precompile(Tuple{typeof(*),QuantumAlgebra.BosonCreate{Tuple{Symbol}},QuantumAlgebra.BosonCreate{Tuple{Symbol}},QuantumAlgebra.BosonDestroy{Tuple{Symbol}},QuantumAlgebra.BosonDestroy{Tuple{Symbol}}})
    Base.precompile(Tuple{typeof(*),QuantumAlgebra.BosonCreate{Tuple{Symbol}},QuantumAlgebra.BosonCreate{Tuple{Symbol}},QuantumAlgebra.BosonDestroy{Tuple{Symbol}}})
    Base.precompile(Tuple{typeof(*),QuantumAlgebra.BosonCreate{Tuple{Symbol}},QuantumAlgebra.BosonDestroy{Tuple{Symbol}},QuantumAlgebra.BosonDestroy{Tuple{Symbol}}})
    Base.precompile(Tuple{typeof(*),QuantumAlgebra.BosonCreate{Tuple{Symbol}},QuantumAlgebra.σ{Tuple{Symbol}},QuantumAlgebra.BosonDestroy{Tuple{Symbol}},QuantumAlgebra.BosonCreate{Tuple{Symbol}}})
    Base.precompile(Tuple{typeof(*),QuantumAlgebra.BosonCreate{Tuple{}},QuantumAlgebra.BosonDestroy{Tuple{Symbol,Symbol}},QuantumAlgebra.σplus{Tuple{}},QuantumAlgebra.σminus{Tuple{Symbol,Symbol}}})
    Base.precompile(Tuple{typeof(*),QuantumAlgebra.BosonCreate{Tuple{}},QuantumAlgebra.BosonDestroy{Tuple{Symbol,Symbol}},QuantumAlgebra.σ{Tuple{}},QuantumAlgebra.σ{Tuple{Symbol,Symbol}}})
    Base.precompile(Tuple{typeof(*),QuantumAlgebra.BosonDestroy{Tuple{Int64,Symbol}},QuantumAlgebra.BosonCreate{Tuple{}},QuantumAlgebra.σminus{Tuple{Int64,Symbol}},QuantumAlgebra.σplus{Tuple{}}})
    Base.precompile(Tuple{typeof(*),QuantumAlgebra.BosonDestroy{Tuple{Int64,Symbol}},QuantumAlgebra.BosonCreate{Tuple{}},QuantumAlgebra.σ{Tuple{Int64,Symbol}},QuantumAlgebra.σ{Tuple{}}})
    Base.precompile(Tuple{typeof(*),QuantumAlgebra.BosonDestroy{Tuple{Int64}},QuantumAlgebra.BosonCreate{Tuple{Int64}},QuantumAlgebra.BosonCreate{Tuple{Int64}},QuantumAlgebra.σ{Tuple{Int64}},QuantumAlgebra.BosonCreate{Tuple{Int64}},QuantumAlgebra.BosonCreate{Tuple{Int64}},Vararg{Any,N} where N})
    Base.precompile(Tuple{typeof(*),QuantumAlgebra.BosonDestroy{Tuple{Int64}},QuantumAlgebra.BosonCreate{Tuple{Int64}},QuantumAlgebra.BosonDestroy{Tuple{Int64}},QuantumAlgebra.BosonCreate{Tuple{Int64}}})
    Base.precompile(Tuple{typeof(*),QuantumAlgebra.BosonDestroy{Tuple{Int64}},QuantumAlgebra.BosonCreate{Tuple{Int64}},QuantumAlgebra.σplus{Tuple{Int64}},QuantumAlgebra.OpSum})
    Base.precompile(Tuple{typeof(*),QuantumAlgebra.BosonDestroy{Tuple{Int64}},QuantumAlgebra.BosonCreate{Tuple{Int64}},QuantumAlgebra.σ{Tuple{Int64}},QuantumAlgebra.OpSum})
    Base.precompile(Tuple{typeof(*),QuantumAlgebra.BosonDestroy{Tuple{Int64}},QuantumAlgebra.BosonDestroy{Tuple{Int64}},QuantumAlgebra.BosonDestroy{Tuple{Int64}},QuantumAlgebra.BosonDestroy{Tuple{Int64}},QuantumAlgebra.BosonDestroy{Tuple{Int64}}})
    Base.precompile(Tuple{typeof(*),QuantumAlgebra.BosonDestroy{Tuple{Int64}},QuantumAlgebra.BosonDestroy{Tuple{Int64}},QuantumAlgebra.BosonDestroy{Tuple{Int64}},QuantumAlgebra.BosonDestroy{Tuple{Int64}}})
    Base.precompile(Tuple{typeof(*),QuantumAlgebra.BosonDestroy{Tuple{Int64}},QuantumAlgebra.BosonDestroy{Tuple{Int64}},QuantumAlgebra.BosonDestroy{Tuple{Int64}}})
    Base.precompile(Tuple{typeof(*),QuantumAlgebra.BosonDestroy{Tuple{Int64}},QuantumAlgebra.OpSum,QuantumAlgebra.OpSum})
    Base.precompile(Tuple{typeof(*),QuantumAlgebra.BosonDestroy{Tuple{Int64}},QuantumAlgebra.σplus{Tuple{Int64}},QuantumAlgebra.σminus{Tuple{Int64}}})
    Base.precompile(Tuple{typeof(*),QuantumAlgebra.BosonDestroy{Tuple{Symbol,Symbol}},OpSumAnalytic})
    Base.precompile(Tuple{typeof(*),QuantumAlgebra.BosonDestroy{Tuple{Symbol}},OpSumAnalytic})
    Base.precompile(Tuple{typeof(*),QuantumAlgebra.BosonDestroy{Tuple{Symbol}},QuantumAlgebra.BosonCreate{Tuple{Symbol}},QuantumAlgebra.BosonCreate{Tuple{Int64}},QuantumAlgebra.BosonDestroy{Tuple{Int64}},QuantumAlgebra.BosonCreate{Tuple{Int64}},QuantumAlgebra.BosonDestroy{Tuple{Symbol}},Vararg{Any,N} where N})
    Base.precompile(Tuple{typeof(*),QuantumAlgebra.BosonDestroy{Tuple{Symbol}},QuantumAlgebra.BosonCreate{Tuple{Symbol}},QuantumAlgebra.BosonDestroy{Tuple{Symbol}},QuantumAlgebra.BosonCreate{Tuple{Symbol}}})
    Base.precompile(Tuple{typeof(*),QuantumAlgebra.BosonDestroy{Tuple{Symbol}},QuantumAlgebra.BosonCreate{Tuple{Symbol}},QuantumAlgebra.OpSum})
    Base.precompile(Tuple{typeof(*),QuantumAlgebra.BosonDestroy{Tuple{}},Int64})
    Base.precompile(Tuple{typeof(*),QuantumAlgebra.OpSum,QuantumAlgebra.BosonCreate{Tuple{Symbol}},QuantumAlgebra.BosonDestroy{Tuple{Symbol}}})
    Base.precompile(Tuple{typeof(*),QuantumAlgebra.OpSum,QuantumAlgebra.OpSum,QuantumAlgebra.OpSum})
    Base.precompile(Tuple{typeof(*),QuantumAlgebra.σ{Tuple{Int64}},QuantumAlgebra.σ{Tuple{Int64}},QuantumAlgebra.σ{Tuple{Int64}}})
    Base.precompile(Tuple{typeof(*),QuantumAlgebra.σ{Tuple{Symbol}},OpSumAnalytic})
    Base.precompile(Tuple{typeof(*),QuantumAlgebra.σ{Tuple{Symbol}},QuantumAlgebra.σ{Tuple{Symbol}},QuantumAlgebra.σ{Tuple{Symbol}}})
    Base.precompile(Tuple{typeof(*),param{Tuple{Int64}},param{Tuple{Int64}},param{Tuple{Int64}},param{Tuple{}},param{Tuple{}},param{Tuple{Int64}},Vararg{Any,N} where N})
    Base.precompile(Tuple{typeof(*),param{Tuple{Int64}},param{Tuple{Int64}},param{Tuple{Int64}},param{Tuple{}},param{Tuple{}},param{Tuple{Int64}},Vararg{param{Tuple{Int64}},N} where N})
    Base.precompile(Tuple{typeof(*),param{Tuple{Symbol,Symbol}},OpSumAnalytic})
    Base.precompile(Tuple{typeof(*),param{Tuple{Symbol,Symbol}},QuantumAlgebra.BosonCreate{Tuple{Symbol,Symbol}},QuantumAlgebra.BosonDestroy{Tuple{Symbol,Symbol}},QuantumAlgebra.BosonDestroy{Tuple{Symbol,Symbol}}})
    Base.precompile(Tuple{typeof(*),param{Tuple{Symbol,Symbol}},QuantumAlgebra.BosonCreate{Tuple{Symbol,Symbol}},QuantumAlgebra.BosonDestroy{Tuple{Symbol,Symbol}}})
    Base.precompile(Tuple{typeof(*),param{Tuple{Symbol,Symbol}},QuantumAlgebra.OpSum,QuantumAlgebra.σ{Tuple{Symbol}}})
    Base.precompile(Tuple{typeof(*),param{Tuple{Symbol}},ExpVal,Corr,QuantumAlgebra.BosonCreate{Tuple{Symbol}},QuantumAlgebra.BosonCreate{Tuple{Symbol}},QuantumAlgebra.BosonDestroy{Tuple{Symbol}},Vararg{QuantumAlgebra.BosonDestroy{Tuple{Symbol}},N} where N})
    Base.precompile(Tuple{typeof(*),param{Tuple{Symbol}},ExpVal,Corr,QuantumAlgebra.BosonCreate{Tuple{Symbol}},QuantumAlgebra.BosonDestroy{Tuple{Symbol}}})
    Base.precompile(Tuple{typeof(*),param{Tuple{Symbol}},OpSumAnalytic})
    Base.precompile(Tuple{typeof(*),param{Tuple{Symbol}},QuantumAlgebra.BosonCreate{Tuple{Symbol}},QuantumAlgebra.BosonDestroy{Tuple{Symbol}},QuantumAlgebra.BosonDestroy{Tuple{Symbol}}})
    Base.precompile(Tuple{typeof(*),param{Tuple{Symbol}},QuantumAlgebra.BosonCreate{Tuple{Symbol}},QuantumAlgebra.BosonDestroy{Tuple{Symbol}},QuantumAlgebra.BosonDestroy{Tuple{}}})
    Base.precompile(Tuple{typeof(*),param{Tuple{Symbol}},QuantumAlgebra.BosonCreate{Tuple{Symbol}},QuantumAlgebra.BosonDestroy{Tuple{Symbol}}})
    Base.precompile(Tuple{typeof(*),param{Tuple{Symbol}},QuantumAlgebra.BosonDestroy{Tuple{Int64}},QuantumAlgebra.BosonCreate{Tuple{Int64}},QuantumAlgebra.BosonDestroy{Tuple{Int64}},QuantumAlgebra.BosonCreate{Tuple{Int64}},ExpVal,Vararg{Any,N} where N})
    Base.precompile(Tuple{typeof(*),param{Tuple{Symbol}},QuantumAlgebra.BosonDestroy{Tuple{Symbol}},OpSumAnalytic})
    Base.precompile(Tuple{typeof(*),param{Tuple{Symbol}},QuantumAlgebra.BosonDestroy{Tuple{Symbol}},QuantumAlgebra.BosonDestroy{Tuple{Symbol}}})
    Base.precompile(Tuple{typeof(*),param{Tuple{}},QuantumAlgebra.BosonCreate{Tuple{Int64}},QuantumAlgebra.BosonDestroy{Tuple{Int64}},QuantumAlgebra.BosonDestroy{Tuple{Int64}}})
    Base.precompile(Tuple{typeof(*),param{Tuple{}},QuantumAlgebra.BosonDestroy{Tuple{Int64}}})
    Base.precompile(Tuple{typeof(*),param{Tuple{}},param{Tuple{}},param{Tuple{Int64}},param{Tuple{Int64}},param{Tuple{Int64}},param{Tuple{Int64}},Vararg{Any,N} where N})
    Base.precompile(Tuple{typeof(*),scal{Complex{Int64}},δ,QuantumAlgebra.OpSum})
    Base.precompile(Tuple{typeof(*),scal{Complex{Int64}},δ,QuantumAlgebra.σ{Tuple{Symbol}}})
    Base.precompile(Tuple{typeof(*),scal{Float64},QuantumAlgebra.BosonCreate{Tuple{Symbol}},QuantumAlgebra.BosonCreate{Tuple{Symbol}},QuantumAlgebra.BosonCreate{Tuple{Symbol}}})
    Base.precompile(Tuple{typeof(*),scal{Int64},QuantumAlgebra.BosonCreate{Tuple{Symbol}},QuantumAlgebra.BosonDestroy{Tuple{Symbol}}})
    Base.precompile(Tuple{typeof(*),scal{Int64},QuantumAlgebra.BosonDestroy{Tuple{Int64}},QuantumAlgebra.BosonDestroy{Tuple{Int64}},QuantumAlgebra.BosonDestroy{Tuple{Int64}}})
    Base.precompile(Tuple{typeof(*),scal{Int64},QuantumAlgebra.OpSum,QuantumAlgebra.OpSum})
    Base.precompile(Tuple{typeof(*),scal{Int64},param{Tuple{Int64}},QuantumAlgebra.σplus{Tuple{Int64}}})
    Base.precompile(Tuple{typeof(*),scal{Int64},param{Tuple{Int64}},QuantumAlgebra.σ{Tuple{Int64}}})
    Base.precompile(Tuple{typeof(*),scal{Int64},param{Tuple{}},QuantumAlgebra.σ{Tuple{Int64}}})
    Base.precompile(Tuple{typeof(*),scal{Int64},param{Tuple{}},param{Tuple{}},ExpVal,QuantumAlgebra.σplus{Tuple{Symbol}},QuantumAlgebra.BosonCreate{Tuple{Int64}},Vararg{Any,N} where N})
    Base.precompile(Tuple{typeof(*),scal{Int64},param{Tuple{}},param{Tuple{}},ExpVal,QuantumAlgebra.σ{Tuple{Symbol}},QuantumAlgebra.BosonCreate{Tuple{Int64}},Vararg{Any,N} where N})
    Base.precompile(Tuple{typeof(*),scal{Rational{Int64}},param{Tuple{Symbol}},QuantumAlgebra.σ{Tuple{Symbol}}})
    Base.precompile(Tuple{typeof(*),scal{Rational{Int64}},param{Tuple{}},QuantumAlgebra.σ{Tuple{Int64}}})
    Base.precompile(Tuple{typeof(*),δ,δ,QuantumAlgebra.OpSum})
    Base.precompile(Tuple{typeof(*),δ,δ,QuantumAlgebra.σ{Tuple{Symbol}}})
    Base.precompile(Tuple{typeof(+),Corr,QuantumAlgebra.OpProd,QuantumAlgebra.OpProd,QuantumAlgebra.OpProd,QuantumAlgebra.OpProd})
    Base.precompile(Tuple{typeof(+),Int64,QuantumAlgebra.BosonDestroy{Tuple{}}})
    Base.precompile(Tuple{typeof(+),OpSumAnalytic,QuantumAlgebra.OpProd,QuantumAlgebra.OpSum})
    Base.precompile(Tuple{typeof(+),QuantumAlgebra.BosonCreate{Tuple{Symbol}},QuantumAlgebra.BosonDestroy{Tuple{Symbol}}})
    Base.precompile(Tuple{typeof(+),QuantumAlgebra.BosonDestroy{Tuple{}},Int64})
    Base.precompile(Tuple{typeof(+),scal{Int64},QuantumAlgebra.OpProd,QuantumAlgebra.OpProd})
    Base.precompile(Tuple{typeof(-),Corr,Corr})
    Base.precompile(Tuple{typeof(-),Int64,QuantumAlgebra.BosonDestroy{Tuple{}}})
    Base.precompile(Tuple{typeof(-),OpSumAnalytic,OpSumAnalytic})
    Base.precompile(Tuple{typeof(-),OpSumAnalytic,QuantumAlgebra.OpProd})
    Base.precompile(Tuple{typeof(-),OpSumAnalytic,QuantumAlgebra.OpSum})
    Base.precompile(Tuple{typeof(-),OpSumAnalytic})
    Base.precompile(Tuple{typeof(-),QuantumAlgebra.BosonCreate{Tuple{Int64}}})
    Base.precompile(Tuple{typeof(-),QuantumAlgebra.BosonDestroy{Tuple{}},Int64})
    Base.precompile(Tuple{typeof(-),QuantumAlgebra.OpProd,QuantumAlgebra.OpProd})
    Base.precompile(Tuple{typeof(-),QuantumAlgebra.OpProd,QuantumAlgebra.OpSum})
    Base.precompile(Tuple{typeof(-),QuantumAlgebra.OpProd})
    Base.precompile(Tuple{typeof(-),QuantumAlgebra.OpSum,QuantumAlgebra.OpProd})
    Base.precompile(Tuple{typeof(-),QuantumAlgebra.OpSum,QuantumAlgebra.OpSum})
    Base.precompile(Tuple{typeof(-),QuantumAlgebra.OpSum,scal{Int64}})
    Base.precompile(Tuple{typeof(-),QuantumAlgebra.OpSum})
    Base.precompile(Tuple{typeof(-),QuantumAlgebra.σminus{Tuple{Symbol,Symbol}},QuantumAlgebra.σplus{Tuple{Symbol,Symbol}}})
    Base.precompile(Tuple{typeof(-),QuantumAlgebra.σplus{Tuple{Symbol}},QuantumAlgebra.σminus{Tuple{Symbol}}})
    Base.precompile(Tuple{typeof(-),param{Tuple{Int64}}})
    Base.precompile(Tuple{typeof(-),param{Tuple{Symbol}},param{Tuple{Symbol}}})
    Base.precompile(Tuple{typeof(-),param{Tuple{Symbol}}})
    Base.precompile(Tuple{typeof(-),scal{Int64},QuantumAlgebra.OpProd})
    Base.precompile(Tuple{typeof(-),scal{Int64},QuantumAlgebra.OpSum})
    Base.precompile(Tuple{typeof(-),scal{Int64}})
    Base.precompile(Tuple{typeof(-),δ,QuantumAlgebra.OpProd})
    Base.precompile(Tuple{typeof(-),δ})
    Base.precompile(Tuple{typeof(<),NTuple{4,param{Tuple{Symbol,Symbol}}},NTuple{4,param{Tuple{Symbol,Symbol}}}})
    Base.precompile(Tuple{typeof(<),NTuple{5,param{Tuple{Symbol,Symbol}}},NTuple{5,param{Tuple{Symbol,Symbol}}}})
    Base.precompile(Tuple{typeof(<),OpSumAnalytic,OpSumAnalytic})
    Base.precompile(Tuple{typeof(<),QuantumAlgebra.BosonCreate{Tuple{Int64}},QuantumAlgebra.BosonCreate{Tuple{Symbol}}})
    Base.precompile(Tuple{typeof(<),QuantumAlgebra.BosonCreate{Tuple{Int64}},QuantumAlgebra.BosonDestroy{Tuple{Int64}}})
    Base.precompile(Tuple{typeof(<),QuantumAlgebra.BosonCreate{Tuple{Int64}},QuantumAlgebra.OpSum})
    Base.precompile(Tuple{typeof(<),QuantumAlgebra.BosonCreate{Tuple{Int64}},QuantumAlgebra.σ{Tuple{Int64}}})
    Base.precompile(Tuple{typeof(<),QuantumAlgebra.BosonCreate{Tuple{Symbol}},QuantumAlgebra.BosonCreate{Tuple{Int64}}})
    Base.precompile(Tuple{typeof(<),QuantumAlgebra.BosonCreate{Tuple{}},QuantumAlgebra.FermionCreate{Tuple{}}})
    Base.precompile(Tuple{typeof(<),QuantumAlgebra.BosonDestroy{Tuple{Int64}},QuantumAlgebra.BosonCreate{Tuple{Int64,Symbol}}})
    Base.precompile(Tuple{typeof(<),QuantumAlgebra.BosonDestroy{Tuple{Int64}},QuantumAlgebra.BosonCreate{Tuple{Int64}}})
    Base.precompile(Tuple{typeof(<),QuantumAlgebra.BosonDestroy{Tuple{Int64}},QuantumAlgebra.BosonDestroy{Tuple{Int64}}})
    Base.precompile(Tuple{typeof(<),QuantumAlgebra.BosonDestroy{Tuple{Int64}},QuantumAlgebra.BosonDestroy{Tuple{Symbol}}})
    Base.precompile(Tuple{typeof(<),QuantumAlgebra.BosonDestroy{Tuple{Int64}},QuantumAlgebra.OpSum})
    Base.precompile(Tuple{typeof(<),QuantumAlgebra.BosonDestroy{Tuple{Int64}},QuantumAlgebra.σ{Tuple{Int64}}})
    Base.precompile(Tuple{typeof(<),QuantumAlgebra.FermionCreate{Tuple{Symbol,Symbol}},QuantumAlgebra.FermionCreate{Tuple{Symbol}}})
    Base.precompile(Tuple{typeof(<),QuantumAlgebra.FermionCreate{Tuple{}},QuantumAlgebra.FermionDestroy{Tuple{}}})
    Base.precompile(Tuple{typeof(<),Tuple{param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}}},Tuple{param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}}}})
    Base.precompile(Tuple{typeof(<),Tuple{param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}}},Tuple{param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},δ}})
    Base.precompile(Tuple{typeof(<),Tuple{param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}}},Tuple{param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}}}})
    Base.precompile(Tuple{typeof(<),Tuple{param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}}},Tuple{param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},δ}})
    Base.precompile(Tuple{typeof(<),Tuple{param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}}},Tuple{param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}}}})
    Base.precompile(Tuple{typeof(<),Tuple{param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}}},Tuple{param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},δ}})
    Base.precompile(Tuple{typeof(<),Tuple{param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}}},Tuple{param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}}}})
    Base.precompile(Tuple{typeof(<),Tuple{param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}},δ},Tuple{param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}}}})
    Base.precompile(Tuple{typeof(<),Tuple{param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}}},Tuple{param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}},δ}})
    Base.precompile(Tuple{typeof(<),Tuple{param{Tuple{Symbol}},param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}}},Tuple{param{Tuple{Symbol}},param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},δ}})
    Base.precompile(Tuple{typeof(<),Tuple{param{Tuple{Symbol}},param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}}},Tuple{param{Tuple{Symbol}},param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}}}})
    Base.precompile(Tuple{typeof(<),Tuple{param{Tuple{Symbol}},param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}}},Tuple{param{Tuple{Symbol}},param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},δ}})
    Base.precompile(Tuple{typeof(<),Tuple{param{Tuple{Symbol}},param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}}},Tuple{param{Tuple{Symbol}},param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}}}})
    Base.precompile(Tuple{typeof(<),Tuple{param{Tuple{Symbol}},param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}}},Tuple{param{Tuple{Symbol}},param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}},δ}})
    Base.precompile(Tuple{typeof(<),Tuple{param{Tuple{Symbol}},param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}}},Tuple{param{Tuple{Symbol}},param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}}}})
    Base.precompile(Tuple{typeof(<),Tuple{param{Tuple{Symbol}},param{Tuple{Symbol}},param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}}},Tuple{param{Tuple{Symbol}},param{Tuple{Symbol}},param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}}}})
    Base.precompile(Tuple{typeof(<),Tuple{param{Tuple{Symbol}},param{Tuple{Symbol}},param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}}},Tuple{param{Tuple{Symbol}},param{Tuple{Symbol}},param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}}}})
    Base.precompile(Tuple{typeof(<),Tuple{param{Tuple{Symbol}},param{Tuple{Symbol}},param{Tuple{Symbol}},param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}}},Tuple{param{Tuple{Symbol}},param{Tuple{Symbol}},param{Tuple{Symbol}},param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}}}})
    Base.precompile(Tuple{typeof(<),Tuple{param{Tuple{Symbol}},param{Tuple{Symbol}}},Tuple{param{Tuple{Symbol}},param{Tuple{Symbol}},δ}})
    Base.precompile(Tuple{typeof(<),Tuple{param{Tuple{Symbol}},δ},Tuple{param{Tuple{Symbol}}}})
    Base.precompile(Tuple{typeof(<),Tuple{param{Tuple{Symbol}}},Tuple{param{Tuple{Symbol}},δ}})
    Base.precompile(Tuple{typeof(<),Tuple{param{Tuple{Symbol}}},Tuple{param{Tuple{Symbol}}}})
    Base.precompile(Tuple{typeof(<),Tuple{δ,δ},Tuple{δ}})
    Base.precompile(Tuple{typeof(<),Tuple{δ},Tuple{}})
    Base.precompile(Tuple{typeof(<),Tuple{δ},Tuple{δ,δ}})
    Base.precompile(Tuple{typeof(<),scal{Complex{Int64}},scal{Complex{Int64}}})
    Base.precompile(Tuple{typeof(==),Corr,ExpVal})
    Base.precompile(Tuple{typeof(==),Corr,QuantumAlgebra.BosonCreate{Tuple{Int64}}})
    Base.precompile(Tuple{typeof(==),Corr,QuantumAlgebra.BosonCreate{Tuple{Symbol}}})
    Base.precompile(Tuple{typeof(==),Corr,QuantumAlgebra.BosonDestroy{Tuple{Int64}}})
    Base.precompile(Tuple{typeof(==),Corr,QuantumAlgebra.OpProd})
    Base.precompile(Tuple{typeof(==),ExpVal,Corr})
    Base.precompile(Tuple{typeof(==),ExpVal,QuantumAlgebra.BosonCreate{Tuple{Int64}}})
    Base.precompile(Tuple{typeof(==),ExpVal,QuantumAlgebra.BosonCreate{Tuple{Symbol}}})
    Base.precompile(Tuple{typeof(==),ExpVal,QuantumAlgebra.BosonDestroy{Tuple{Int64}}})
    Base.precompile(Tuple{typeof(==),ExpVal,QuantumAlgebra.BosonDestroy{Tuple{Symbol}}})
    Base.precompile(Tuple{typeof(==),ExpVal,QuantumAlgebra.OpProd})
    Base.precompile(Tuple{typeof(==),ExpVal,QuantumAlgebra.σplus{Tuple{Int64}}})
    Base.precompile(Tuple{typeof(==),ExpVal,QuantumAlgebra.σ{Tuple{Int64}}})
    Base.precompile(Tuple{typeof(==),NTuple{4,param{Tuple{Symbol,Symbol}}},NTuple{4,param{Tuple{Symbol,Symbol}}}})
    Base.precompile(Tuple{typeof(==),NTuple{5,param{Tuple{Symbol,Symbol}}},NTuple{5,param{Tuple{Symbol,Symbol}}}})
    Base.precompile(Tuple{typeof(==),OpSumAnalytic,QuantumAlgebra.OpSum})
    Base.precompile(Tuple{typeof(==),QuantumAlgebra.BosonCreate{Tuple{Int64,Int64,Symbol}},QuantumAlgebra.BosonCreate{Tuple{Int64,Int64,Symbol}}})
    Base.precompile(Tuple{typeof(==),QuantumAlgebra.BosonCreate{Tuple{Int64,Symbol}},QuantumAlgebra.BosonCreate{Tuple{Int64,Symbol}}})
    Base.precompile(Tuple{typeof(==),QuantumAlgebra.BosonCreate{Tuple{Int64}},QuantumAlgebra.BosonCreate{Tuple{Int64}}})
    Base.precompile(Tuple{typeof(==),QuantumAlgebra.BosonCreate{Tuple{Int64}},QuantumAlgebra.BosonCreate{Tuple{Symbol}}})
    Base.precompile(Tuple{typeof(==),QuantumAlgebra.BosonCreate{Tuple{Int64}},QuantumAlgebra.BosonDestroy{Tuple{Int64}}})
    Base.precompile(Tuple{typeof(==),QuantumAlgebra.BosonCreate{Tuple{Int64}},QuantumAlgebra.OpProd})
    Base.precompile(Tuple{typeof(==),QuantumAlgebra.BosonCreate{Tuple{Int64}},QuantumAlgebra.OpSum})
    Base.precompile(Tuple{typeof(==),QuantumAlgebra.BosonCreate{Tuple{Int64}},δ})
    Base.precompile(Tuple{typeof(==),QuantumAlgebra.BosonCreate{Tuple{Symbol,Symbol}},QuantumAlgebra.BosonCreate{Tuple{Symbol,Symbol}}})
    Base.precompile(Tuple{typeof(==),QuantumAlgebra.BosonCreate{Tuple{Symbol}},QuantumAlgebra.BosonCreate{Tuple{Int64}}})
    Base.precompile(Tuple{typeof(==),QuantumAlgebra.BosonCreate{Tuple{Symbol}},QuantumAlgebra.BosonCreate{Tuple{Symbol}}})
    Base.precompile(Tuple{typeof(==),QuantumAlgebra.BosonCreate{Tuple{Symbol}},QuantumAlgebra.BosonDestroy{Tuple{}}})
    Base.precompile(Tuple{typeof(==),QuantumAlgebra.BosonCreate{Tuple{Symbol}},QuantumAlgebra.OpProd})
    Base.precompile(Tuple{typeof(==),QuantumAlgebra.BosonCreate{Tuple{Symbol}},QuantumAlgebra.OpSum})
    Base.precompile(Tuple{typeof(==),QuantumAlgebra.BosonCreate{Tuple{Symbol}},QuantumAlgebra.σ{Tuple{Symbol}}})
    Base.precompile(Tuple{typeof(==),QuantumAlgebra.BosonCreate{Tuple{Symbol}},δ})
    Base.precompile(Tuple{typeof(==),QuantumAlgebra.BosonCreate{Tuple{}},QuantumAlgebra.BosonCreate{Tuple{}}})
    Base.precompile(Tuple{typeof(==),QuantumAlgebra.BosonDestroy{Tuple{Int64,Symbol}},QuantumAlgebra.BosonDestroy{Tuple{Int64,Symbol}}})
    Base.precompile(Tuple{typeof(==),QuantumAlgebra.BosonDestroy{Tuple{Int64}},QuantumAlgebra.BosonDestroy{Tuple{Int64}}})
    Base.precompile(Tuple{typeof(==),QuantumAlgebra.BosonDestroy{Tuple{Int64}},QuantumAlgebra.BosonDestroy{Tuple{Symbol}}})
    Base.precompile(Tuple{typeof(==),QuantumAlgebra.BosonDestroy{Tuple{Int64}},QuantumAlgebra.OpProd})
    Base.precompile(Tuple{typeof(==),QuantumAlgebra.BosonDestroy{Tuple{Int64}},QuantumAlgebra.OpSum})
    Base.precompile(Tuple{typeof(==),QuantumAlgebra.BosonDestroy{Tuple{Int64}},δ})
    Base.precompile(Tuple{typeof(==),QuantumAlgebra.BosonDestroy{Tuple{Symbol,Symbol}},QuantumAlgebra.BosonDestroy{Tuple{Symbol,Symbol}}})
    Base.precompile(Tuple{typeof(==),QuantumAlgebra.BosonDestroy{Tuple{Symbol}},QuantumAlgebra.BosonCreate{Tuple{Symbol}}})
    Base.precompile(Tuple{typeof(==),QuantumAlgebra.BosonDestroy{Tuple{Symbol}},QuantumAlgebra.BosonDestroy{Tuple{Int64}}})
    Base.precompile(Tuple{typeof(==),QuantumAlgebra.BosonDestroy{Tuple{Symbol}},QuantumAlgebra.BosonDestroy{Tuple{Symbol}}})
    Base.precompile(Tuple{typeof(==),QuantumAlgebra.BosonDestroy{Tuple{Symbol}},QuantumAlgebra.OpProd})
    Base.precompile(Tuple{typeof(==),QuantumAlgebra.BosonDestroy{Tuple{Symbol}},QuantumAlgebra.OpSum})
    Base.precompile(Tuple{typeof(==),QuantumAlgebra.BosonDestroy{Tuple{Symbol}},QuantumAlgebra.σ{Tuple{Symbol}}})
    Base.precompile(Tuple{typeof(==),QuantumAlgebra.BosonDestroy{Tuple{Symbol}},δ})
    Base.precompile(Tuple{typeof(==),QuantumAlgebra.BosonDestroy{Tuple{}},QuantumAlgebra.BosonDestroy{Tuple{}}})
    Base.precompile(Tuple{typeof(==),QuantumAlgebra.FermionCreate{Tuple{Symbol}},QuantumAlgebra.FermionCreate{Tuple{Symbol}}})
    Base.precompile(Tuple{typeof(==),QuantumAlgebra.FermionCreate{Tuple{}},QuantumAlgebra.FermionCreate{Tuple{}}})
    Base.precompile(Tuple{typeof(==),QuantumAlgebra.FermionDestroy{Tuple{Symbol}},QuantumAlgebra.FermionDestroy{Tuple{Symbol}}})
    Base.precompile(Tuple{typeof(==),QuantumAlgebra.FermionDestroy{Tuple{}},QuantumAlgebra.FermionDestroy{Tuple{}}})
    Base.precompile(Tuple{typeof(==),QuantumAlgebra.OpProd,Corr})
    Base.precompile(Tuple{typeof(==),QuantumAlgebra.OpProd,OpSumAnalytic})
    Base.precompile(Tuple{typeof(==),QuantumAlgebra.OpProd,QuantumAlgebra.OpSum})
    Base.precompile(Tuple{typeof(==),QuantumAlgebra.OpProd,scal{Int64}})
    Base.precompile(Tuple{typeof(==),QuantumAlgebra.SpatialIndex,QuantumAlgebra.SpatialIndex})
    Base.precompile(Tuple{typeof(==),QuantumAlgebra.σminus{Tuple{Int64}},QuantumAlgebra.OpProd})
    Base.precompile(Tuple{typeof(==),QuantumAlgebra.σminus{Tuple{Int64}},QuantumAlgebra.OpSum})
    Base.precompile(Tuple{typeof(==),QuantumAlgebra.σminus{Tuple{Int64}},QuantumAlgebra.σminus{Tuple{Int64}}})
    Base.precompile(Tuple{typeof(==),QuantumAlgebra.σminus{Tuple{Int64}},QuantumAlgebra.σplus{Tuple{Int64}}})
    Base.precompile(Tuple{typeof(==),QuantumAlgebra.σminus{Tuple{Symbol,Symbol}},QuantumAlgebra.σminus{Tuple{Symbol,Symbol}}})
    Base.precompile(Tuple{typeof(==),QuantumAlgebra.σminus{Tuple{Symbol}},QuantumAlgebra.σminus{Tuple{Symbol}}})
    Base.precompile(Tuple{typeof(==),QuantumAlgebra.σminus{Tuple{Symbol}},QuantumAlgebra.σplus{Tuple{Symbol}}})
    Base.precompile(Tuple{typeof(==),QuantumAlgebra.σminus{Tuple{}},QuantumAlgebra.σminus{Tuple{}}})
    Base.precompile(Tuple{typeof(==),QuantumAlgebra.σplus{Tuple{Int64}},QuantumAlgebra.OpProd})
    Base.precompile(Tuple{typeof(==),QuantumAlgebra.σplus{Tuple{Int64}},QuantumAlgebra.OpSum})
    Base.precompile(Tuple{typeof(==),QuantumAlgebra.σplus{Tuple{Int64}},QuantumAlgebra.σminus{Tuple{Int64}}})
    Base.precompile(Tuple{typeof(==),QuantumAlgebra.σplus{Tuple{Int64}},QuantumAlgebra.σplus{Tuple{Int64}}})
    Base.precompile(Tuple{typeof(==),QuantumAlgebra.σplus{Tuple{Symbol,Symbol}},QuantumAlgebra.σminus{Tuple{Symbol,Symbol}}})
    Base.precompile(Tuple{typeof(==),QuantumAlgebra.σplus{Tuple{Symbol,Symbol}},QuantumAlgebra.σplus{Tuple{Symbol,Symbol}}})
    Base.precompile(Tuple{typeof(==),QuantumAlgebra.σplus{Tuple{}},QuantumAlgebra.σminus{Tuple{}}})
    Base.precompile(Tuple{typeof(==),QuantumAlgebra.σplus{Tuple{}},QuantumAlgebra.σplus{Tuple{}}})
    Base.precompile(Tuple{typeof(==),QuantumAlgebra.σ{Tuple{Int64}},QuantumAlgebra.OpProd})
    Base.precompile(Tuple{typeof(==),QuantumAlgebra.σ{Tuple{Int64}},QuantumAlgebra.σ{Tuple{Int64}}})
    Base.precompile(Tuple{typeof(==),QuantumAlgebra.σ{Tuple{Symbol,Symbol}},QuantumAlgebra.σ{Tuple{Symbol,Symbol}}})
    Base.precompile(Tuple{typeof(==),QuantumAlgebra.σ{Tuple{Symbol}},OpSumAnalytic})
    Base.precompile(Tuple{typeof(==),QuantumAlgebra.σ{Tuple{Symbol}},QuantumAlgebra.BosonCreate{Tuple{Symbol}}})
    Base.precompile(Tuple{typeof(==),QuantumAlgebra.σ{Tuple{Symbol}},QuantumAlgebra.BosonDestroy{Tuple{Symbol}}})
    Base.precompile(Tuple{typeof(==),QuantumAlgebra.σ{Tuple{Symbol}},QuantumAlgebra.OpSum})
    Base.precompile(Tuple{typeof(==),QuantumAlgebra.σ{Tuple{Symbol}},QuantumAlgebra.σ{Tuple{Symbol}}})
    Base.precompile(Tuple{typeof(==),QuantumAlgebra.σ{Tuple{}},QuantumAlgebra.σ{Tuple{}}})
    Base.precompile(Tuple{typeof(==),Tuple{QuantumAlgebra.BosonDestroy{Tuple{Int64}},QuantumAlgebra.BosonDestroy{Tuple{Int64}}},Tuple{QuantumAlgebra.BosonDestroy{Tuple{Int64}},QuantumAlgebra.BosonDestroy{Tuple{Int64}}}})
    Base.precompile(Tuple{typeof(==),Tuple{QuantumAlgebra.BosonDestroy{Tuple{Int64}}},Tuple{QuantumAlgebra.BosonDestroy{Tuple{Int64}}}})
    Base.precompile(Tuple{typeof(==),Tuple{Tuple{scal{Int64},param{Tuple{}},param{Tuple{}}},Tuple{ExpVal},Tuple{QuantumAlgebra.BosonCreate{Tuple{Int64}},QuantumAlgebra.BosonDestroy{Tuple{Int64}},QuantumAlgebra.σplus{Tuple{Symbol}}}},Tuple{Tuple{scal{Int64},param{Tuple{}},param{Tuple{}}},Tuple{ExpVal},Tuple{QuantumAlgebra.BosonCreate{Tuple{Int64}},QuantumAlgebra.BosonDestroy{Tuple{Int64}},QuantumAlgebra.σplus{Tuple{Symbol}}}}})
    Base.precompile(Tuple{typeof(==),Tuple{Tuple{scal{Int64},param{Tuple{}},param{Tuple{}}},Tuple{ExpVal},Tuple{QuantumAlgebra.BosonCreate{Tuple{Int64}},QuantumAlgebra.BosonDestroy{Tuple{Int64}},QuantumAlgebra.σ{Tuple{Symbol}}}},Tuple{Tuple{scal{Int64},param{Tuple{}},param{Tuple{}}},Tuple{ExpVal},Tuple{QuantumAlgebra.BosonCreate{Tuple{Int64}},QuantumAlgebra.BosonDestroy{Tuple{Int64}},QuantumAlgebra.σ{Tuple{Symbol}}}}})
    Base.precompile(Tuple{typeof(==),Tuple{param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},δ},Tuple{param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},δ}})
    Base.precompile(Tuple{typeof(==),Tuple{param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},δ,δ},Tuple{param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},δ,δ}})
    Base.precompile(Tuple{typeof(==),Tuple{param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},δ},Tuple{param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},δ}})
    Base.precompile(Tuple{typeof(==),Tuple{param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},δ,δ},Tuple{param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},δ,δ}})
    Base.precompile(Tuple{typeof(==),Tuple{param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},δ},Tuple{param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},δ}})
    Base.precompile(Tuple{typeof(==),Tuple{param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}}},Tuple{param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}}}})
    Base.precompile(Tuple{typeof(==),Tuple{param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},δ,δ},Tuple{param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},δ,δ}})
    Base.precompile(Tuple{typeof(==),Tuple{param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},δ},Tuple{param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},δ}})
    Base.precompile(Tuple{typeof(==),Tuple{param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}}},Tuple{param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}}}})
    Base.precompile(Tuple{typeof(==),Tuple{param{Tuple{Symbol,Symbol}},δ,δ},Tuple{param{Tuple{Symbol,Symbol}},δ,δ}})
    Base.precompile(Tuple{typeof(==),Tuple{param{Tuple{Symbol,Symbol}},δ},Tuple{param{Tuple{Symbol,Symbol}},δ}})
    Base.precompile(Tuple{typeof(==),Tuple{param{Tuple{Symbol,Symbol}}},Tuple{param{Tuple{Symbol,Symbol}}}})
    Base.precompile(Tuple{typeof(==),Tuple{param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},δ},Tuple{param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},δ}})
    Base.precompile(Tuple{typeof(==),Tuple{param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}}},Tuple{param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},δ}})
    Base.precompile(Tuple{typeof(==),Tuple{param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}}},Tuple{param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}}}})
    Base.precompile(Tuple{typeof(==),Tuple{param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},δ,δ},Tuple{param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},δ,δ}})
    Base.precompile(Tuple{typeof(==),Tuple{param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},δ},Tuple{param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},δ}})
    Base.precompile(Tuple{typeof(==),Tuple{param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}}},Tuple{param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},δ}})
    Base.precompile(Tuple{typeof(==),Tuple{param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}}},Tuple{param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}}}})
    Base.precompile(Tuple{typeof(==),Tuple{param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},δ,δ},Tuple{param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},δ,δ}})
    Base.precompile(Tuple{typeof(==),Tuple{param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},δ},Tuple{param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},δ}})
    Base.precompile(Tuple{typeof(==),Tuple{param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}}},Tuple{param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},δ}})
    Base.precompile(Tuple{typeof(==),Tuple{param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}}},Tuple{param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}}}})
    Base.precompile(Tuple{typeof(==),Tuple{param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}},δ,δ},Tuple{param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}},δ,δ}})
    Base.precompile(Tuple{typeof(==),Tuple{param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}},δ},Tuple{param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}},δ}})
    Base.precompile(Tuple{typeof(==),Tuple{param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}},δ},Tuple{param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}}}})
    Base.precompile(Tuple{typeof(==),Tuple{param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}}},Tuple{param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}},δ}})
    Base.precompile(Tuple{typeof(==),Tuple{param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}}},Tuple{param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}}}})
    Base.precompile(Tuple{typeof(==),Tuple{param{Tuple{Symbol}},param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},δ,δ},Tuple{param{Tuple{Symbol}},param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},δ,δ}})
    Base.precompile(Tuple{typeof(==),Tuple{param{Tuple{Symbol}},param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},δ},Tuple{param{Tuple{Symbol}},param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},δ}})
    Base.precompile(Tuple{typeof(==),Tuple{param{Tuple{Symbol}},param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}}},Tuple{param{Tuple{Symbol}},param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},δ}})
    Base.precompile(Tuple{typeof(==),Tuple{param{Tuple{Symbol}},param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}}},Tuple{param{Tuple{Symbol}},param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}}}})
    Base.precompile(Tuple{typeof(==),Tuple{param{Tuple{Symbol}},param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},δ,δ},Tuple{param{Tuple{Symbol}},param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},δ,δ}})
    Base.precompile(Tuple{typeof(==),Tuple{param{Tuple{Symbol}},param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},δ},Tuple{param{Tuple{Symbol}},param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},δ}})
    Base.precompile(Tuple{typeof(==),Tuple{param{Tuple{Symbol}},param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}}},Tuple{param{Tuple{Symbol}},param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},δ}})
    Base.precompile(Tuple{typeof(==),Tuple{param{Tuple{Symbol}},param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}}},Tuple{param{Tuple{Symbol}},param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}}}})
    Base.precompile(Tuple{typeof(==),Tuple{param{Tuple{Symbol}},param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}},δ,δ},Tuple{param{Tuple{Symbol}},param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}},δ,δ}})
    Base.precompile(Tuple{typeof(==),Tuple{param{Tuple{Symbol}},param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}},δ},Tuple{param{Tuple{Symbol}},param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}},δ}})
    Base.precompile(Tuple{typeof(==),Tuple{param{Tuple{Symbol}},param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}}},Tuple{param{Tuple{Symbol}},param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}},δ}})
    Base.precompile(Tuple{typeof(==),Tuple{param{Tuple{Symbol}},param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}}},Tuple{param{Tuple{Symbol}},param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}}}})
    Base.precompile(Tuple{typeof(==),Tuple{param{Tuple{Symbol}},param{Tuple{Symbol}},param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},δ},Tuple{param{Tuple{Symbol}},param{Tuple{Symbol}},param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},δ}})
    Base.precompile(Tuple{typeof(==),Tuple{param{Tuple{Symbol}},param{Tuple{Symbol}},param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}}},Tuple{param{Tuple{Symbol}},param{Tuple{Symbol}},param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}}}})
    Base.precompile(Tuple{typeof(==),Tuple{param{Tuple{Symbol}},param{Tuple{Symbol}},param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}},δ,δ},Tuple{param{Tuple{Symbol}},param{Tuple{Symbol}},param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}},δ,δ}})
    Base.precompile(Tuple{typeof(==),Tuple{param{Tuple{Symbol}},param{Tuple{Symbol}},param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}},δ},Tuple{param{Tuple{Symbol}},param{Tuple{Symbol}},param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}},δ}})
    Base.precompile(Tuple{typeof(==),Tuple{param{Tuple{Symbol}},param{Tuple{Symbol}},param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}}},Tuple{param{Tuple{Symbol}},param{Tuple{Symbol}},param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}}}})
    Base.precompile(Tuple{typeof(==),Tuple{param{Tuple{Symbol}},param{Tuple{Symbol}},param{Tuple{Symbol}},param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}}},Tuple{param{Tuple{Symbol}},param{Tuple{Symbol}},param{Tuple{Symbol}},param{Tuple{Symbol}},param{Tuple{Symbol,Symbol}}}})
    Base.precompile(Tuple{typeof(==),Tuple{param{Tuple{Symbol}},param{Tuple{Symbol}}},Tuple{param{Tuple{Symbol}},param{Tuple{Symbol}},δ}})
    Base.precompile(Tuple{typeof(==),Tuple{param{Tuple{Symbol}},δ},Tuple{param{Tuple{Symbol}}}})
    Base.precompile(Tuple{typeof(==),Tuple{param{Tuple{Symbol}}},Tuple{param{Tuple{Symbol}},δ}})
    Base.precompile(Tuple{typeof(==),Tuple{param{Tuple{Symbol}}},Tuple{param{Tuple{Symbol}}}})
    Base.precompile(Tuple{typeof(==),Tuple{},Tuple{δ}})
    Base.precompile(Tuple{typeof(==),Tuple{δ,δ},Tuple{δ,δ}})
    Base.precompile(Tuple{typeof(==),Tuple{δ,δ},Tuple{δ}})
    Base.precompile(Tuple{typeof(==),Tuple{δ},Tuple{}})
    Base.precompile(Tuple{typeof(==),Tuple{δ},Tuple{δ,δ}})
    Base.precompile(Tuple{typeof(==),Tuple{δ},Tuple{δ}})
    Base.precompile(Tuple{typeof(==),param{Tuple{Int64}},QuantumAlgebra.OpProd})
    Base.precompile(Tuple{typeof(==),param{Tuple{Int64}},QuantumAlgebra.OpSum})
    Base.precompile(Tuple{typeof(==),param{Tuple{Symbol,Symbol}},QuantumAlgebra.BosonCreate{Tuple{Symbol}}})
    Base.precompile(Tuple{typeof(==),param{Tuple{Symbol,Symbol}},QuantumAlgebra.BosonDestroy{Tuple{Symbol,Symbol}}})
    Base.precompile(Tuple{typeof(==),param{Tuple{Symbol,Symbol}},QuantumAlgebra.BosonDestroy{Tuple{Symbol}}})
    Base.precompile(Tuple{typeof(==),param{Tuple{Symbol}},QuantumAlgebra.BosonCreate{Tuple{Symbol}}})
    Base.precompile(Tuple{typeof(==),param{Tuple{Symbol}},QuantumAlgebra.BosonDestroy{Tuple{Symbol}}})
    Base.precompile(Tuple{typeof(==),param{Tuple{Symbol}},QuantumAlgebra.BosonDestroy{Tuple{}}})
    Base.precompile(Tuple{typeof(==),param{Tuple{Symbol}},QuantumAlgebra.OpProd})
    Base.precompile(Tuple{typeof(==),param{Tuple{Symbol}},δ})
    Base.precompile(Tuple{typeof(==),param{Tuple{}},QuantumAlgebra.OpProd})
    Base.precompile(Tuple{typeof(==),param{Tuple{}},QuantumAlgebra.OpSum})
    Base.precompile(Tuple{typeof(==),scal{Complex{Int64}},QuantumAlgebra.BosonCreate{Tuple{Int64}}})
    Base.precompile(Tuple{typeof(==),scal{Complex{Int64}},QuantumAlgebra.BosonCreate{Tuple{Symbol}}})
    Base.precompile(Tuple{typeof(==),scal{Complex{Int64}},QuantumAlgebra.BosonDestroy{Tuple{Int64}}})
    Base.precompile(Tuple{typeof(==),scal{Complex{Int64}},QuantumAlgebra.BosonDestroy{Tuple{Symbol}}})
    Base.precompile(Tuple{typeof(==),scal{Complex{Int64}},QuantumAlgebra.OpProd})
    Base.precompile(Tuple{typeof(==),scal{Complex{Int64}},QuantumAlgebra.σminus{Tuple{Symbol}}})
    Base.precompile(Tuple{typeof(==),scal{Complex{Int64}},QuantumAlgebra.σplus{Tuple{Symbol}}})
    Base.precompile(Tuple{typeof(==),scal{Complex{Int64}},QuantumAlgebra.σ{Tuple{Symbol}}})
    Base.precompile(Tuple{typeof(==),scal{Complex{Int64}},param{Tuple{Symbol,Symbol}}})
    Base.precompile(Tuple{typeof(==),scal{Complex{Int64}},param{Tuple{Symbol}}})
    Base.precompile(Tuple{typeof(==),scal{Complex{Int64}},param{Tuple{}}})
    Base.precompile(Tuple{typeof(==),scal{Complex{Int64}},δ})
    Base.precompile(Tuple{typeof(==),scal{Complex{Rational{Int64}}},QuantumAlgebra.BosonCreate{Tuple{Int64}}})
    Base.precompile(Tuple{typeof(==),scal{Complex{Rational{Int64}}},QuantumAlgebra.BosonCreate{Tuple{Symbol}}})
    Base.precompile(Tuple{typeof(==),scal{Complex{Rational{Int64}}},QuantumAlgebra.BosonDestroy{Tuple{Int64}}})
    Base.precompile(Tuple{typeof(==),scal{Complex{Rational{Int64}}},QuantumAlgebra.BosonDestroy{Tuple{Symbol}}})
    Base.precompile(Tuple{typeof(==),scal{Complex{Rational{Int64}}},QuantumAlgebra.OpProd})
    Base.precompile(Tuple{typeof(==),scal{Complex{Rational{Int64}}},QuantumAlgebra.σ{Tuple{Int64}}})
    Base.precompile(Tuple{typeof(==),scal{Complex{Rational{Int64}}},QuantumAlgebra.σ{Tuple{Symbol}}})
    Base.precompile(Tuple{typeof(==),scal{Complex{Rational{Int64}}},param{Tuple{Symbol,Symbol}}})
    Base.precompile(Tuple{typeof(==),scal{Complex{Rational{Int64}}},param{Tuple{Symbol}}})
    Base.precompile(Tuple{typeof(==),scal{Complex{Rational{Int64}}},δ})
    Base.precompile(Tuple{typeof(==),scal{Float64},QuantumAlgebra.BosonCreate{Tuple{Symbol}}})
    Base.precompile(Tuple{typeof(==),scal{Float64},QuantumAlgebra.BosonDestroy{Tuple{Symbol}}})
    Base.precompile(Tuple{typeof(==),scal{Float64},QuantumAlgebra.OpProd})
    Base.precompile(Tuple{typeof(==),scal{Float64},δ})
    Base.precompile(Tuple{typeof(==),scal{Int64},QuantumAlgebra.BosonCreate{Tuple{Int64}}})
    Base.precompile(Tuple{typeof(==),scal{Int64},QuantumAlgebra.BosonCreate{Tuple{Symbol}}})
    Base.precompile(Tuple{typeof(==),scal{Int64},QuantumAlgebra.BosonDestroy{Tuple{Symbol}}})
    Base.precompile(Tuple{typeof(==),scal{Int64},QuantumAlgebra.BosonDestroy{Tuple{}}})
    Base.precompile(Tuple{typeof(==),scal{Int64},QuantumAlgebra.OpProd})
    Base.precompile(Tuple{typeof(==),scal{Int64},QuantumAlgebra.σminus{Tuple{Symbol,Symbol}}})
    Base.precompile(Tuple{typeof(==),scal{Int64},QuantumAlgebra.σminus{Tuple{Symbol}}})
    Base.precompile(Tuple{typeof(==),scal{Int64},QuantumAlgebra.σminus{Tuple{}}})
    Base.precompile(Tuple{typeof(==),scal{Int64},QuantumAlgebra.σplus{Tuple{Int64}}})
    Base.precompile(Tuple{typeof(==),scal{Int64},QuantumAlgebra.σplus{Tuple{Symbol,Symbol}}})
    Base.precompile(Tuple{typeof(==),scal{Int64},QuantumAlgebra.σplus{Tuple{Symbol}}})
    Base.precompile(Tuple{typeof(==),scal{Int64},QuantumAlgebra.σplus{Tuple{}}})
    Base.precompile(Tuple{typeof(==),scal{Int64},param{Tuple{Symbol,Symbol}}})
    Base.precompile(Tuple{typeof(==),scal{Int64},param{Tuple{Symbol}}})
    Base.precompile(Tuple{typeof(==),scal{Int64},δ})
    Base.precompile(Tuple{typeof(==),scal{Rational{Int64}},QuantumAlgebra.BosonCreate{Tuple{Int64}}})
    Base.precompile(Tuple{typeof(==),scal{Rational{Int64}},QuantumAlgebra.BosonDestroy{Tuple{Int64}}})
    Base.precompile(Tuple{typeof(==),scal{Rational{Int64}},QuantumAlgebra.OpProd})
    Base.precompile(Tuple{typeof(==),scal{Rational{Int64}},QuantumAlgebra.σ{Tuple{Int64}}})
    Base.precompile(Tuple{typeof(==),scal{Rational{Int64}},QuantumAlgebra.σ{Tuple{Symbol}}})
    Base.precompile(Tuple{typeof(==),δ,QuantumAlgebra.BosonCreate{Tuple{Int64}}})
    Base.precompile(Tuple{typeof(==),δ,QuantumAlgebra.BosonCreate{Tuple{Symbol,Symbol}}})
    Base.precompile(Tuple{typeof(==),δ,QuantumAlgebra.BosonCreate{Tuple{Symbol}}})
    Base.precompile(Tuple{typeof(==),δ,QuantumAlgebra.BosonDestroy{Tuple{Int64}}})
    Base.precompile(Tuple{typeof(==),δ,QuantumAlgebra.BosonDestroy{Tuple{Symbol}}})
    Base.precompile(Tuple{typeof(==),δ,QuantumAlgebra.OpSum})
    Base.precompile(Tuple{typeof(==),δ,QuantumAlgebra.σ{Tuple{Symbol}}})
    Base.precompile(Tuple{typeof(==),δ,param{Tuple{Symbol,Symbol}}})
    Base.precompile(Tuple{typeof(==),δ,param{Tuple{Symbol}}})
    Base.precompile(Tuple{typeof(==),δ,δ})
    Base.precompile(Tuple{typeof(>),Corr,Corr})
    Base.precompile(Tuple{typeof(>),Corr,QuantumAlgebra.OpProd})
    Base.precompile(Tuple{typeof(>),OpSumAnalytic,OpSumAnalytic})
    Base.precompile(Tuple{typeof(>),OpSumAnalytic,QuantumAlgebra.OpProd})
    Base.precompile(Tuple{typeof(>),OpSumAnalytic,scal{Complex{Rational{Int64}}}})
    Base.precompile(Tuple{typeof(>),OpSumAnalytic,scal{Int64}})
    Base.precompile(Tuple{typeof(>),QuantumAlgebra.BosonCreate{Tuple{Int64}},QuantumAlgebra.BosonCreate{Tuple{Int64}}})
    Base.precompile(Tuple{typeof(>),QuantumAlgebra.BosonCreate{Tuple{Int64}},QuantumAlgebra.OpProd})
    Base.precompile(Tuple{typeof(>),QuantumAlgebra.BosonCreate{Tuple{Int64}},scal{Int64}})
    Base.precompile(Tuple{typeof(>),QuantumAlgebra.BosonCreate{Tuple{Symbol}},QuantumAlgebra.BosonCreate{Tuple{Symbol}}})
    Base.precompile(Tuple{typeof(>),QuantumAlgebra.BosonCreate{Tuple{Symbol}},QuantumAlgebra.OpProd})
    Base.precompile(Tuple{typeof(>),QuantumAlgebra.BosonCreate{Tuple{Symbol}},scal{Int64}})
    Base.precompile(Tuple{typeof(>),QuantumAlgebra.BosonDestroy{Tuple{Int64}},QuantumAlgebra.BosonDestroy{Tuple{Int64}}})
    Base.precompile(Tuple{typeof(>),QuantumAlgebra.BosonDestroy{Tuple{Int64}},QuantumAlgebra.OpProd})
    Base.precompile(Tuple{typeof(>),QuantumAlgebra.BosonDestroy{Tuple{Int64}},scal{Int64}})
    Base.precompile(Tuple{typeof(>),QuantumAlgebra.BosonDestroy{Tuple{Symbol}},QuantumAlgebra.BosonDestroy{Tuple{Symbol}}})
    Base.precompile(Tuple{typeof(>),QuantumAlgebra.BosonDestroy{Tuple{Symbol}},QuantumAlgebra.OpProd})
    Base.precompile(Tuple{typeof(>),QuantumAlgebra.BosonDestroy{Tuple{Symbol}},scal{Int64}})
    Base.precompile(Tuple{typeof(>),QuantumAlgebra.OpProd,Corr})
    Base.precompile(Tuple{typeof(>),QuantumAlgebra.OpProd,OpSumAnalytic})
    Base.precompile(Tuple{typeof(>),QuantumAlgebra.OpProd,QuantumAlgebra.BosonCreate{Tuple{Int64}}})
    Base.precompile(Tuple{typeof(>),QuantumAlgebra.OpProd,QuantumAlgebra.BosonCreate{Tuple{Symbol}}})
    Base.precompile(Tuple{typeof(>),QuantumAlgebra.OpProd,QuantumAlgebra.BosonDestroy{Tuple{Int64}}})
    Base.precompile(Tuple{typeof(>),QuantumAlgebra.OpProd,QuantumAlgebra.BosonDestroy{Tuple{Symbol}}})
    Base.precompile(Tuple{typeof(>),QuantumAlgebra.OpProd,QuantumAlgebra.OpProd})
    Base.precompile(Tuple{typeof(>),QuantumAlgebra.OpProd,QuantumAlgebra.σminus{Tuple{Int64}}})
    Base.precompile(Tuple{typeof(>),QuantumAlgebra.OpProd,QuantumAlgebra.σplus{Tuple{Int64}}})
    Base.precompile(Tuple{typeof(>),QuantumAlgebra.OpProd,QuantumAlgebra.σ{Tuple{Int64}}})
    Base.precompile(Tuple{typeof(>),QuantumAlgebra.OpProd,QuantumAlgebra.σ{Tuple{Symbol}}})
    Base.precompile(Tuple{typeof(>),QuantumAlgebra.OpProd,param{Tuple{Int64}}})
    Base.precompile(Tuple{typeof(>),QuantumAlgebra.OpProd,param{Tuple{}}})
    Base.precompile(Tuple{typeof(>),QuantumAlgebra.OpProd,scal{Complex{Int64}}})
    Base.precompile(Tuple{typeof(>),QuantumAlgebra.OpProd,scal{Complex{Rational{Int64}}}})
    Base.precompile(Tuple{typeof(>),QuantumAlgebra.OpProd,scal{Float64}})
    Base.precompile(Tuple{typeof(>),QuantumAlgebra.OpProd,scal{Int64}})
    Base.precompile(Tuple{typeof(>),QuantumAlgebra.OpProd,scal{Rational{Int64}}})
    Base.precompile(Tuple{typeof(>),QuantumAlgebra.OpProd,δ})
    Base.precompile(Tuple{typeof(>),QuantumAlgebra.σminus{Tuple{Int64}},QuantumAlgebra.OpProd})
    Base.precompile(Tuple{typeof(>),QuantumAlgebra.σminus{Tuple{Int64}},QuantumAlgebra.σplus{Tuple{Int64}}})
    Base.precompile(Tuple{typeof(>),QuantumAlgebra.σminus{Tuple{Int64}},scal{Int64}})
    Base.precompile(Tuple{typeof(>),QuantumAlgebra.σminus{Tuple{Symbol,Symbol}},QuantumAlgebra.σminus{Tuple{Symbol,Symbol}}})
    Base.precompile(Tuple{typeof(>),QuantumAlgebra.σminus{Tuple{Symbol,Symbol}},QuantumAlgebra.σplus{Tuple{Symbol,Symbol}}})
    Base.precompile(Tuple{typeof(>),QuantumAlgebra.σminus{Tuple{Symbol,Symbol}},scal{Int64}})
    Base.precompile(Tuple{typeof(>),QuantumAlgebra.σminus{Tuple{Symbol}},scal{Int64}})
    Base.precompile(Tuple{typeof(>),QuantumAlgebra.σminus{Tuple{}},QuantumAlgebra.σminus{Tuple{}}})
    Base.precompile(Tuple{typeof(>),QuantumAlgebra.σminus{Tuple{}},scal{Int64}})
    Base.precompile(Tuple{typeof(>),QuantumAlgebra.σplus{Tuple{Int64}},QuantumAlgebra.OpProd})
    Base.precompile(Tuple{typeof(>),QuantumAlgebra.σplus{Tuple{Int64}},QuantumAlgebra.σminus{Tuple{Int64}}})
    Base.precompile(Tuple{typeof(>),QuantumAlgebra.σplus{Tuple{Int64}},scal{Int64}})
    Base.precompile(Tuple{typeof(>),QuantumAlgebra.σplus{Tuple{Symbol,Symbol}},QuantumAlgebra.σminus{Tuple{Symbol,Symbol}}})
    Base.precompile(Tuple{typeof(>),QuantumAlgebra.σplus{Tuple{Symbol,Symbol}},scal{Int64}})
    Base.precompile(Tuple{typeof(>),QuantumAlgebra.σplus{Tuple{Symbol}},scal{Int64}})
    Base.precompile(Tuple{typeof(>),QuantumAlgebra.σplus{Tuple{}},QuantumAlgebra.σminus{Tuple{}}})
    Base.precompile(Tuple{typeof(>),QuantumAlgebra.σplus{Tuple{}},scal{Complex{Int64}}})
    Base.precompile(Tuple{typeof(>),QuantumAlgebra.σplus{Tuple{}},scal{Int64}})
    Base.precompile(Tuple{typeof(>),QuantumAlgebra.σ{Tuple{Int64}},QuantumAlgebra.OpProd})
    Base.precompile(Tuple{typeof(>),QuantumAlgebra.σ{Tuple{Int64}},QuantumAlgebra.σ{Tuple{Int64}}})
    Base.precompile(Tuple{typeof(>),QuantumAlgebra.σ{Tuple{Int64}},scal{Complex{Rational{Int64}}}})
    Base.precompile(Tuple{typeof(>),QuantumAlgebra.σ{Tuple{Int64}},scal{Int64}})
    Base.precompile(Tuple{typeof(>),QuantumAlgebra.σ{Tuple{Int64}},scal{Rational{Int64}}})
    Base.precompile(Tuple{typeof(>),QuantumAlgebra.σ{Tuple{Symbol,Symbol}},QuantumAlgebra.σ{Tuple{Symbol,Symbol}}})
    Base.precompile(Tuple{typeof(>),QuantumAlgebra.σ{Tuple{Symbol,Symbol}},scal{Complex{Rational{Int64}}}})
    Base.precompile(Tuple{typeof(>),QuantumAlgebra.σ{Tuple{Symbol}},OpSumAnalytic})
    Base.precompile(Tuple{typeof(>),QuantumAlgebra.σ{Tuple{Symbol}},QuantumAlgebra.OpProd})
    Base.precompile(Tuple{typeof(>),QuantumAlgebra.σ{Tuple{Symbol}},QuantumAlgebra.σ{Tuple{Symbol}}})
    Base.precompile(Tuple{typeof(>),QuantumAlgebra.σ{Tuple{Symbol}},scal{Complex{Rational{Int64}}}})
    Base.precompile(Tuple{typeof(>),QuantumAlgebra.σ{Tuple{Symbol}},scal{Int64}})
    Base.precompile(Tuple{typeof(>),QuantumAlgebra.σ{Tuple{}},QuantumAlgebra.σ{Tuple{}}})
    Base.precompile(Tuple{typeof(>),QuantumAlgebra.σ{Tuple{}},scal{Complex{Rational{Int64}}}})
    Base.precompile(Tuple{typeof(>),param{Tuple{Int64}},QuantumAlgebra.OpProd})
    Base.precompile(Tuple{typeof(>),param{Tuple{Symbol,Symbol}},scal{Int64}})
    Base.precompile(Tuple{typeof(>),param{Tuple{Symbol}},QuantumAlgebra.OpProd})
    Base.precompile(Tuple{typeof(>),param{Tuple{Symbol}},param{Tuple{Symbol}}})
    Base.precompile(Tuple{typeof(>),param{Tuple{Symbol}},scal{Int64}})
    Base.precompile(Tuple{typeof(>),param{Tuple{}},QuantumAlgebra.OpProd})
    Base.precompile(Tuple{typeof(>),param{Tuple{}},scal{Int64}})
    Base.precompile(Tuple{typeof(>),scal{Complex{Int64}},QuantumAlgebra.OpProd})
    Base.precompile(Tuple{typeof(>),scal{Complex{Int64}},scal{Complex{Int64}}})
    Base.precompile(Tuple{typeof(>),scal{Complex{Rational{Int64}}},QuantumAlgebra.OpProd})
    Base.precompile(Tuple{typeof(>),scal{Complex{Rational{Int64}}},QuantumAlgebra.σ{Tuple{Int64}}})
    Base.precompile(Tuple{typeof(>),scal{Complex{Rational{Int64}}},QuantumAlgebra.σ{Tuple{Symbol}}})
    Base.precompile(Tuple{typeof(>),scal{Float64},QuantumAlgebra.OpProd})
    Base.precompile(Tuple{typeof(>),scal{Float64},δ})
    Base.precompile(Tuple{typeof(>),scal{Int64},QuantumAlgebra.BosonDestroy{Tuple{}}})
    Base.precompile(Tuple{typeof(>),scal{Int64},QuantumAlgebra.OpProd})
    Base.precompile(Tuple{typeof(>),scal{Rational{Int64}},QuantumAlgebra.OpProd})
    Base.precompile(Tuple{typeof(>),scal{Rational{Int64}},QuantumAlgebra.σ{Tuple{Int64}}})
    Base.precompile(Tuple{typeof(>),scal{Rational{Int64}},QuantumAlgebra.σ{Tuple{Symbol}}})
    Base.precompile(Tuple{typeof(>),δ,QuantumAlgebra.OpProd})
    Base.precompile(Tuple{typeof(>),δ,scal{Float64}})
    Base.precompile(Tuple{typeof(>),δ,scal{Int64}})
    Base.precompile(Tuple{typeof(>),δ,δ})
    Base.precompile(Tuple{typeof(Avac),QuantumAlgebra.BosonCreate{Tuple{Symbol}}})
    Base.precompile(Tuple{typeof(Avac),QuantumAlgebra.BosonDestroy{Tuple{Int64}}})
    Base.precompile(Tuple{typeof(Avac),QuantumAlgebra.BosonDestroy{Tuple{Symbol}}})
    Base.precompile(Tuple{typeof(Avac),QuantumAlgebra.FermionCreate{Tuple{Symbol}}})
    Base.precompile(Tuple{typeof(Avac),QuantumAlgebra.FermionDestroy{Tuple{Symbol}}})
    Base.precompile(Tuple{typeof(Avac),QuantumAlgebra.σminus{Tuple{Int64}}})
    Base.precompile(Tuple{typeof(Avac),QuantumAlgebra.σminus{Tuple{Symbol}}})
    Base.precompile(Tuple{typeof(Avac),QuantumAlgebra.σplus{Tuple{Int64}}})
    Base.precompile(Tuple{typeof(Avac),QuantumAlgebra.σplus{Tuple{Symbol}}})
    Base.precompile(Tuple{typeof(Avac),scal{Complex{Rational{Int64}}}})
    Base.precompile(Tuple{typeof(Avac),scal{Float64}})
    Base.precompile(Tuple{typeof(Avac),scal{Int64}})
    Base.precompile(Tuple{typeof(Avac),scal{Rational{Int64}}})
    Base.precompile(Tuple{typeof(Avac),δ})
    Base.precompile(Tuple{typeof(Base.Broadcast.broadcasted),Function,Tuple{Tuple{param{Tuple{}}}},Tuple{Array{QuantumAlgebra.BaseOperator,1}},Array{Any,1}})
    Base.precompile(Tuple{typeof(Base.Broadcast.broadcasted),Function,Tuple{Tuple{scal{Int64},param{Tuple{Int64}}}},Tuple{Array{QuantumAlgebra.σplus{Tuple{Int64}},1}},Array{Any,1}})
    Base.precompile(Tuple{typeof(Base.Broadcast.broadcasted),Function,Tuple{Tuple{scal{Int64},param{Tuple{Int64}}}},Tuple{Array{QuantumAlgebra.σ{Tuple{Int64}},1}},Array{Any,1}})
    Base.precompile(Tuple{typeof(Base.Broadcast.broadcasted),Function,Tuple{Tuple{scal{Int64},param{Tuple{}}}},Tuple{Array{QuantumAlgebra.BosonDestroy{Tuple{Int64}},1}},Array{Any,1}})
    Base.precompile(Tuple{typeof(Base.Broadcast.broadcasted),Function,Tuple{Tuple{scal{Int64}}},Tuple{Array{QuantumAlgebra.BosonDestroy{Tuple{Int64}},1}},Array{Any,1}})
    Base.precompile(Tuple{typeof(Base.Broadcast.broadcasted),Function,Tuple{Tuple{}},Tuple{Array{QuantumAlgebra.BaseOperator,1}},Array{Any,1}})
    Base.precompile(Tuple{typeof(Base.Broadcast.broadcasted),Function,Tuple{Tuple{}},Tuple{Array{QuantumAlgebra.BosonDestroy{Tuple{Int64}},1}},Array{Any,1}})
    Base.precompile(Tuple{typeof(Base.Broadcast.broadcasted),Function,Tuple{Tuple{}},Tuple{Array{QuantumAlgebra.σ{Tuple{Symbol}},1}},Array{Any,1}})
    Base.precompile(Tuple{typeof(Base.Broadcast.broadcasted),Type{T} where T,Array{QuantumAlgebra.BosonDestroy{Tuple{Int64}},1}})
    Base.precompile(Tuple{typeof(Base.Broadcast.copyto_nonleaf!),Array{Corr,1},Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1},Tuple{Base.OneTo{Int64}},typeof(QuantumAlgebra._sumterm),Tuple{Tuple{Tuple{}},Tuple{Array{QuantumAlgebra.BaseOperator,1}},Base.Broadcast.Extruded{Array{Any,1},Tuple{Bool},Tuple{Int64}}}},Base.OneTo{Int64},Int64,Int64})
    Base.precompile(Tuple{typeof(Base.Broadcast.copyto_nonleaf!),Array{Corr,1},Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1},Tuple{Base.OneTo{Int64}},typeof(QuantumAlgebra._sumterm),Tuple{Tuple{Tuple{}},Tuple{Array{QuantumAlgebra.BosonDestroy,1}},Base.Broadcast.Extruded{Array{Any,1},Tuple{Bool},Tuple{Int64}}}},Base.OneTo{Int64},Int64,Int64})
    Base.precompile(Tuple{typeof(Base.Broadcast.copyto_nonleaf!),Array{Corr,1},Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1},Tuple{Base.OneTo{Int64}},typeof(QuantumAlgebra._sumterm),Tuple{Tuple{Tuple{}},Tuple{Array{QuantumAlgebra.BosonDestroy{Tuple{Int64}},1}},Base.Broadcast.Extruded{Array{Any,1},Tuple{Bool},Tuple{Int64}}}},Base.OneTo{Int64},Int64,Int64})
    Base.precompile(Tuple{typeof(Base.Broadcast.copyto_nonleaf!),Array{Corr,1},Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1},Tuple{Base.OneTo{Int64}},typeof(QuantumAlgebra._sumterm),Tuple{Tuple{Tuple{}},Tuple{Array{QuantumAlgebra.σ{Tuple{Symbol}},1}},Base.Broadcast.Extruded{Array{Any,1},Tuple{Bool},Tuple{Int64}}}},Base.OneTo{Int64},Int64,Int64})
    Base.precompile(Tuple{typeof(Base.Broadcast.copyto_nonleaf!),Array{QuantumAlgebra.OpProd,1},Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1},Tuple{Base.OneTo{Int64}},typeof(QuantumAlgebra._sumterm),Tuple{Tuple{Tuple{param{Tuple{}}}},Tuple{Array{QuantumAlgebra.BaseOperator,1}},Base.Broadcast.Extruded{Array{Any,1},Tuple{Bool},Tuple{Int64}}}},Base.OneTo{Int64},Int64,Int64})
    Base.precompile(Tuple{typeof(Base.Broadcast.copyto_nonleaf!),Array{QuantumAlgebra.OpProd,1},Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1},Tuple{Base.OneTo{Int64}},typeof(QuantumAlgebra._sumterm),Tuple{Tuple{Tuple{scal{Int64}}},Tuple{Array{QuantumAlgebra.BosonDestroy{Tuple{Int64}},1}},Base.Broadcast.Extruded{Array{Any,1},Tuple{Bool},Tuple{Int64}}}},Base.OneTo{Int64},Int64,Int64})
    Base.precompile(Tuple{typeof(Base.Broadcast.instantiate),Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1},Nothing,typeof(QuantumAlgebra._sumterm),Tuple{Tuple{Tuple{param{Tuple{}}}},Tuple{Array{QuantumAlgebra.BaseOperator,1}},Array{Any,1}}}})
    Base.precompile(Tuple{typeof(Base.Broadcast.instantiate),Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1},Nothing,typeof(QuantumAlgebra._sumterm),Tuple{Tuple{Tuple{scal{Int64},param{Tuple{Int64}}}},Tuple{Array{QuantumAlgebra.σplus{Tuple{Int64}},1}},Array{Any,1}}}})
    Base.precompile(Tuple{typeof(Base.Broadcast.instantiate),Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1},Nothing,typeof(QuantumAlgebra._sumterm),Tuple{Tuple{Tuple{scal{Int64},param{Tuple{Int64}}}},Tuple{Array{QuantumAlgebra.σ{Tuple{Int64}},1}},Array{Any,1}}}})
    Base.precompile(Tuple{typeof(Base.Broadcast.instantiate),Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1},Nothing,typeof(QuantumAlgebra._sumterm),Tuple{Tuple{Tuple{scal{Int64},param{Tuple{}}}},Tuple{Array{QuantumAlgebra.BosonDestroy{Tuple{Int64}},1}},Array{Any,1}}}})
    Base.precompile(Tuple{typeof(Base.Broadcast.instantiate),Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1},Nothing,typeof(QuantumAlgebra._sumterm),Tuple{Tuple{Tuple{scal{Int64}}},Tuple{Array{QuantumAlgebra.BosonDestroy{Tuple{Int64}},1}},Array{Any,1}}}})
    Base.precompile(Tuple{typeof(Base.Broadcast.instantiate),Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1},Nothing,typeof(QuantumAlgebra._sumterm),Tuple{Tuple{Tuple{}},Tuple{Array{QuantumAlgebra.BaseOperator,1}},Array{Any,1}}}})
    Base.precompile(Tuple{typeof(Base.Broadcast.instantiate),Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1},Nothing,typeof(QuantumAlgebra._sumterm),Tuple{Tuple{Tuple{}},Tuple{Array{QuantumAlgebra.BosonDestroy,1}},Array{Any,1}}}})
    Base.precompile(Tuple{typeof(Base.Broadcast.instantiate),Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1},Nothing,typeof(QuantumAlgebra._sumterm),Tuple{Tuple{Tuple{}},Tuple{Array{QuantumAlgebra.BosonDestroy{Tuple{Int64}},1}},Array{Any,1}}}})
    Base.precompile(Tuple{typeof(Base.Broadcast.instantiate),Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1},Nothing,typeof(QuantumAlgebra._sumterm),Tuple{Tuple{Tuple{}},Tuple{Array{QuantumAlgebra.σ{Tuple{Symbol}},1}},Array{Any,1}}}})
    Base.precompile(Tuple{typeof(Base.Broadcast.instantiate),Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple},Nothing,typeof(QuantumAlgebra.sortsentinel),Tuple{Tuple{Int64,Symbol}}}})
    Base.precompile(Tuple{typeof(Base.Broadcast.instantiate),Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple},Nothing,typeof(QuantumAlgebra.sortsentinel),Tuple{Tuple{Symbol,Symbol}}}})
    Base.precompile(Tuple{typeof(Base.Broadcast.materialize),Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1},Nothing,Type{ExpVal},Tuple{Array{QuantumAlgebra.BosonDestroy{Tuple{Int64}},1}}}})
    Base.precompile(Tuple{typeof(Base.Broadcast.restart_copyto_nonleaf!),Array{QuantumAlgebra.Operator,1},Array{Corr,1},Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1},Tuple{Base.OneTo{Int64}},typeof(QuantumAlgebra._sumterm),Tuple{Tuple{Tuple{}},Tuple{Array{QuantumAlgebra.BaseOperator,1}},Base.Broadcast.Extruded{Array{Any,1},Tuple{Bool},Tuple{Int64}}}},QuantumAlgebra.OpProd,Int64,Base.OneTo{Int64},Int64,Int64})
    Base.precompile(Tuple{typeof(Base.Broadcast.restart_copyto_nonleaf!),Array{QuantumAlgebra.Operator,1},Array{Corr,1},Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1},Tuple{Base.OneTo{Int64}},typeof(QuantumAlgebra._sumterm),Tuple{Tuple{Tuple{}},Tuple{Array{QuantumAlgebra.BosonDestroy,1}},Base.Broadcast.Extruded{Array{Any,1},Tuple{Bool},Tuple{Int64}}}},QuantumAlgebra.OpProd,Int64,Base.OneTo{Int64},Int64,Int64})
    Base.precompile(Tuple{typeof(Base.Broadcast.restart_copyto_nonleaf!),Array{QuantumAlgebra.Operator,1},Array{Corr,1},Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1},Tuple{Base.OneTo{Int64}},typeof(QuantumAlgebra._sumterm),Tuple{Tuple{Tuple{}},Tuple{Array{QuantumAlgebra.BosonDestroy{Tuple{Int64}},1}},Base.Broadcast.Extruded{Array{Any,1},Tuple{Bool},Tuple{Int64}}}},QuantumAlgebra.OpProd,Int64,Base.OneTo{Int64},Int64,Int64})
    Base.precompile(Tuple{typeof(Base.Broadcast.restart_copyto_nonleaf!),Array{QuantumAlgebra.Operator,1},Array{Corr,1},Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1},Tuple{Base.OneTo{Int64}},typeof(QuantumAlgebra._sumterm),Tuple{Tuple{Tuple{}},Tuple{Array{QuantumAlgebra.σ{Tuple{Symbol}},1}},Base.Broadcast.Extruded{Array{Any,1},Tuple{Bool},Tuple{Int64}}}},QuantumAlgebra.OpProd,Int64,Base.OneTo{Int64},Int64,Int64})
    Base.precompile(Tuple{typeof(Base.Iterators.filter),Function,QuantumAlgebra.OpProdIter{true}})
    Base.precompile(Tuple{typeof(Base._compute_eltype),Type{Tuple{QuantumAlgebra.BosonCreate{Tuple{Int64,Symbol}},QuantumAlgebra.BosonDestroy{Tuple{Int64}}}}})
    Base.precompile(Tuple{typeof(Base._compute_eltype),Type{Tuple{QuantumAlgebra.BosonCreate{Tuple{Int64}},QuantumAlgebra.BosonDestroy{Tuple{Int64}},QuantumAlgebra.BosonDestroy{Tuple{Int64}}}}})
    Base.precompile(Tuple{typeof(Base._compute_eltype),Type{Tuple{QuantumAlgebra.BosonCreate{Tuple{Int64}},QuantumAlgebra.BosonDestroy{Tuple{Int64}},QuantumAlgebra.σ{Tuple{Int64}}}}})
    Base.precompile(Tuple{typeof(Base._compute_eltype),Type{Tuple{QuantumAlgebra.BosonCreate{Tuple{Symbol}},QuantumAlgebra.BosonCreate{Tuple{Symbol}},QuantumAlgebra.BosonDestroy{Tuple{Symbol}},QuantumAlgebra.σ{Tuple{Symbol}}}}})
    Base.precompile(Tuple{typeof(Base._compute_eltype),Type{Tuple{QuantumAlgebra.BosonCreate{Tuple{Symbol}},QuantumAlgebra.BosonDestroy{Tuple{Symbol}}}}})
    Base.precompile(Tuple{typeof(Base._compute_eltype),Type{Tuple{QuantumAlgebra.BosonCreate{Tuple{Symbol}},QuantumAlgebra.σ{Tuple{Symbol}}}}})
    Base.precompile(Tuple{typeof(Base._compute_eltype),Type{Tuple{QuantumAlgebra.BosonDestroy{Tuple{Int64}},QuantumAlgebra.BosonDestroy{Tuple{Symbol}}}}})
    Base.precompile(Tuple{typeof(Base._compute_eltype),Type{Tuple{QuantumAlgebra.σplus{Tuple{Symbol}},QuantumAlgebra.σminus{Tuple{Symbol}}}}})
    Base.precompile(Tuple{typeof(Base._mapreduce),typeof(identity),typeof(Base.mul_prod),IndexLinear,Array{QuantumAlgebra.Operator,1}})
    Base.precompile(Tuple{typeof(Base.afoldl),Function,scal{Int64}})
    Base.precompile(Tuple{typeof(Base.afoldl),typeof(*),QuantumAlgebra.OpProd,ExpVal,QuantumAlgebra.σplus{Tuple{Symbol}},QuantumAlgebra.BosonCreate{Tuple{Int64}},QuantumAlgebra.BosonDestroy{Tuple{Int64}}})
    Base.precompile(Tuple{typeof(Base.afoldl),typeof(*),QuantumAlgebra.OpProd,ExpVal,QuantumAlgebra.σ{Tuple{Symbol}},QuantumAlgebra.BosonCreate{Tuple{Int64}},QuantumAlgebra.BosonDestroy{Tuple{Int64}}})
    Base.precompile(Tuple{typeof(Base.afoldl),typeof(*),QuantumAlgebra.OpProd,QuantumAlgebra.BosonCreate{Tuple{Int64}},QuantumAlgebra.BosonDestroy{Tuple{Int64}}})
    Base.precompile(Tuple{typeof(Base.afoldl),typeof(*),QuantumAlgebra.OpProd,QuantumAlgebra.BosonCreate{Tuple{Int64}}})
    Base.precompile(Tuple{typeof(Base.afoldl),typeof(*),QuantumAlgebra.OpProd,QuantumAlgebra.BosonCreate{Tuple{Symbol}},QuantumAlgebra.BosonCreate{Tuple{Symbol}},QuantumAlgebra.BosonDestroy{Tuple{Symbol}},QuantumAlgebra.BosonDestroy{Tuple{Symbol}}})
    Base.precompile(Tuple{typeof(Base.afoldl),typeof(*),QuantumAlgebra.OpProd,QuantumAlgebra.BosonCreate{Tuple{Symbol}},QuantumAlgebra.BosonDestroy{Tuple{Symbol}},QuantumAlgebra.BosonDestroy{Tuple{Symbol}}})
    Base.precompile(Tuple{typeof(Base.afoldl),typeof(*),QuantumAlgebra.OpProd,QuantumAlgebra.BosonCreate{Tuple{Symbol}},QuantumAlgebra.BosonDestroy{Tuple{Symbol}}})
    Base.precompile(Tuple{typeof(Base.afoldl),typeof(*),QuantumAlgebra.OpProd,QuantumAlgebra.BosonCreate{Tuple{Symbol}}})
    Base.precompile(Tuple{typeof(Base.afoldl),typeof(*),QuantumAlgebra.OpProd,QuantumAlgebra.BosonDestroy{Tuple{Int64}},QuantumAlgebra.BosonDestroy{Tuple{Int64}}})
    Base.precompile(Tuple{typeof(Base.afoldl),typeof(*),QuantumAlgebra.OpProd,QuantumAlgebra.BosonDestroy{Tuple{Int64}}})
    Base.precompile(Tuple{typeof(Base.afoldl),typeof(*),QuantumAlgebra.OpProd,QuantumAlgebra.BosonDestroy{Tuple{Symbol,Symbol}}})
    Base.precompile(Tuple{typeof(Base.afoldl),typeof(*),QuantumAlgebra.OpProd,QuantumAlgebra.BosonDestroy{Tuple{Symbol}},QuantumAlgebra.BosonDestroy{Tuple{Symbol}}})
    Base.precompile(Tuple{typeof(Base.afoldl),typeof(*),QuantumAlgebra.OpProd,QuantumAlgebra.BosonDestroy{Tuple{Symbol}}})
    Base.precompile(Tuple{typeof(Base.afoldl),typeof(*),QuantumAlgebra.OpProd,QuantumAlgebra.BosonDestroy{Tuple{}}})
    Base.precompile(Tuple{typeof(Base.afoldl),typeof(*),QuantumAlgebra.OpProd,QuantumAlgebra.σminus{Tuple{Symbol,Symbol}}})
    Base.precompile(Tuple{typeof(Base.afoldl),typeof(*),QuantumAlgebra.OpProd,QuantumAlgebra.σplus{Tuple{Symbol}},QuantumAlgebra.BosonCreate{Tuple{Int64}},QuantumAlgebra.BosonDestroy{Tuple{Int64}}})
    Base.precompile(Tuple{typeof(Base.afoldl),typeof(*),QuantumAlgebra.OpProd,QuantumAlgebra.σplus{Tuple{}}})
    Base.precompile(Tuple{typeof(Base.afoldl),typeof(*),QuantumAlgebra.OpProd,QuantumAlgebra.σ{Tuple{Symbol,Symbol}}})
    Base.precompile(Tuple{typeof(Base.afoldl),typeof(*),QuantumAlgebra.OpProd,QuantumAlgebra.σ{Tuple{Symbol}},QuantumAlgebra.BosonCreate{Tuple{Int64}},QuantumAlgebra.BosonDestroy{Tuple{Int64}}})
    Base.precompile(Tuple{typeof(Base.afoldl),typeof(*),QuantumAlgebra.OpProd,QuantumAlgebra.σ{Tuple{}}})
    Base.precompile(Tuple{typeof(Base.afoldl),typeof(*),QuantumAlgebra.OpProd,param{Tuple{Int64,Symbol}}})
    Base.precompile(Tuple{typeof(Base.afoldl),typeof(*),QuantumAlgebra.OpProd,param{Tuple{Int64}},param{Tuple{Int64,Symbol}}})
    Base.precompile(Tuple{typeof(Base.afoldl),typeof(*),QuantumAlgebra.OpProd,param{Tuple{Int64}},param{Tuple{Int64}},param{Tuple{Int64,Symbol}}})
    Base.precompile(Tuple{typeof(Base.afoldl),typeof(*),QuantumAlgebra.OpProd,param{Tuple{Int64}},param{Tuple{Int64}},param{Tuple{Int64}},param{Tuple{Int64,Symbol}}})
    Base.precompile(Tuple{typeof(Base.afoldl),typeof(*),QuantumAlgebra.OpProd,param{Tuple{Int64}},param{Tuple{Int64}}})
    Base.precompile(Tuple{typeof(Base.afoldl),typeof(*),QuantumAlgebra.OpProd,param{Tuple{Int64}}})
    Base.precompile(Tuple{typeof(Base.afoldl),typeof(*),QuantumAlgebra.OpProd,param{Tuple{}},param{Tuple{Int64}},param{Tuple{Int64,Symbol}}})
    Base.precompile(Tuple{typeof(Base.afoldl),typeof(*),QuantumAlgebra.OpProd,param{Tuple{}},param{Tuple{Int64}},param{Tuple{Int64}}})
    Base.precompile(Tuple{typeof(Base.afoldl),typeof(*),QuantumAlgebra.OpProd,param{Tuple{}},param{Tuple{}},param{Tuple{Int64}},param{Tuple{Int64,Symbol}}})
    Base.precompile(Tuple{typeof(Base.afoldl),typeof(*),QuantumAlgebra.OpProd,param{Tuple{}},param{Tuple{}},param{Tuple{Int64}},param{Tuple{Int64}}})
    Base.precompile(Tuple{typeof(Base.afoldl),typeof(*),QuantumAlgebra.OpSum,Corr})
    Base.precompile(Tuple{typeof(Base.afoldl),typeof(*),QuantumAlgebra.OpSum,ExpVal,Corr})
    Base.precompile(Tuple{typeof(Base.afoldl),typeof(*),QuantumAlgebra.OpSum,QuantumAlgebra.BosonCreate{Tuple{Int64}},ExpVal,Corr})
    Base.precompile(Tuple{typeof(Base.afoldl),typeof(*),QuantumAlgebra.OpSum,QuantumAlgebra.BosonCreate{Tuple{Int64}},QuantumAlgebra.BosonCreate{Tuple{Int64}},QuantumAlgebra.σ{Tuple{Int64}},QuantumAlgebra.BosonDestroy{Tuple{Int64}},QuantumAlgebra.BosonCreate{Tuple{Int64}}})
    Base.precompile(Tuple{typeof(Base.afoldl),typeof(*),QuantumAlgebra.OpSum,QuantumAlgebra.BosonCreate{Tuple{Int64}},QuantumAlgebra.BosonDestroy{Tuple{Symbol}},QuantumAlgebra.BosonCreate{Tuple{Symbol}}})
    Base.precompile(Tuple{typeof(Base.afoldl),typeof(*),QuantumAlgebra.OpSum,QuantumAlgebra.BosonCreate{Tuple{Int64}},QuantumAlgebra.σ{Tuple{Int64}},QuantumAlgebra.BosonDestroy{Tuple{Int64}},QuantumAlgebra.BosonCreate{Tuple{Int64}}})
    Base.precompile(Tuple{typeof(Base.afoldl),typeof(*),QuantumAlgebra.OpSum,QuantumAlgebra.BosonCreate{Tuple{Int64}}})
    Base.precompile(Tuple{typeof(Base.afoldl),typeof(*),QuantumAlgebra.OpSum,QuantumAlgebra.BosonCreate{Tuple{Symbol}}})
    Base.precompile(Tuple{typeof(Base.afoldl),typeof(*),QuantumAlgebra.OpSum,QuantumAlgebra.BosonDestroy{Tuple{Int64}},QuantumAlgebra.BosonCreate{Tuple{Int64}},ExpVal,Corr})
    Base.precompile(Tuple{typeof(Base.afoldl),typeof(*),QuantumAlgebra.OpSum,QuantumAlgebra.BosonDestroy{Tuple{Int64}},QuantumAlgebra.BosonCreate{Tuple{Int64}},QuantumAlgebra.BosonDestroy{Tuple{Symbol}},QuantumAlgebra.BosonCreate{Tuple{Symbol}}})
    Base.precompile(Tuple{typeof(Base.afoldl),typeof(*),QuantumAlgebra.OpSum,QuantumAlgebra.BosonDestroy{Tuple{Int64}},QuantumAlgebra.BosonCreate{Tuple{Int64}}})
    Base.precompile(Tuple{typeof(Base.afoldl),typeof(*),QuantumAlgebra.OpSum,QuantumAlgebra.BosonDestroy{Tuple{Symbol}},QuantumAlgebra.BosonCreate{Tuple{Symbol}}})
    Base.precompile(Tuple{typeof(Base.afoldl),typeof(*),QuantumAlgebra.OpSum,QuantumAlgebra.OpSum})
    Base.precompile(Tuple{typeof(Base.afoldl),typeof(*),QuantumAlgebra.OpSum,QuantumAlgebra.σ{Tuple{Int64}},QuantumAlgebra.BosonCreate{Tuple{Int64}},QuantumAlgebra.BosonCreate{Tuple{Int64}},QuantumAlgebra.σ{Tuple{Int64}},QuantumAlgebra.BosonDestroy{Tuple{Int64}},QuantumAlgebra.BosonCreate{Tuple{Int64}}})
    Base.precompile(Tuple{typeof(Base.afoldl),typeof(*),QuantumAlgebra.OpSum,QuantumAlgebra.σ{Tuple{Int64}},QuantumAlgebra.BosonDestroy{Tuple{Int64}},QuantumAlgebra.BosonCreate{Tuple{Int64}}})
    Base.precompile(Tuple{typeof(Base.afoldl),typeof(*),QuantumAlgebra.OpSum,QuantumAlgebra.σ{Tuple{Int64}}})
    Base.precompile(Tuple{typeof(Base.afoldl),typeof(+),QuantumAlgebra.OpSum,QuantumAlgebra.OpProd,QuantumAlgebra.OpProd})
    Base.precompile(Tuple{typeof(Base.afoldl),typeof(+),QuantumAlgebra.OpSum,QuantumAlgebra.OpProd})
    Base.precompile(Tuple{typeof(Base.argtail),ExpVal,ExpVal,Vararg{Any,N} where N})
    Base.precompile(Tuple{typeof(Base.argtail),param{Tuple{}},ExpVal,Vararg{Any,N} where N})
    Base.precompile(Tuple{typeof(Base.argtail),scal{Int64},ExpVal,Vararg{Any,N} where N})
    Base.precompile(Tuple{typeof(Base.argtail),scal{Int64},param{Tuple{}},Vararg{Any,N} where N})
    Base.precompile(Tuple{typeof(Base.indexed_iterate),Tuple{Corr,Nothing},Int64})
    Base.precompile(Tuple{typeof(Base.indexed_iterate),Tuple{Corr,QuantumAlgebra.OpProd},Int64})
    Base.precompile(Tuple{typeof(Base.indexed_iterate),Tuple{Corr,QuantumAlgebra.σplus{Tuple{Int64}}},Int64})
    Base.precompile(Tuple{typeof(Base.indexed_iterate),Tuple{Corr,QuantumAlgebra.σ{Tuple{Int64}}},Int64})
    Base.precompile(Tuple{typeof(Base.indexed_iterate),Tuple{ExpVal,Corr},Int64})
    Base.precompile(Tuple{typeof(Base.indexed_iterate),Tuple{ExpVal,ExpVal},Int64})
    Base.precompile(Tuple{typeof(Base.indexed_iterate),Tuple{ExpVal,Nothing},Int64})
    Base.precompile(Tuple{typeof(Base.indexed_iterate),Tuple{ExpVal,QuantumAlgebra.OpProd},Int64})
    Base.precompile(Tuple{typeof(Base.indexed_iterate),Tuple{QuantumAlgebra.BosonCreate{Tuple{Int64}},Nothing},Int64})
    Base.precompile(Tuple{typeof(Base.indexed_iterate),Tuple{QuantumAlgebra.BosonCreate{Tuple{Int64}},QuantumAlgebra.BosonDestroy{Tuple{Int64}}},Int64})
    Base.precompile(Tuple{typeof(Base.indexed_iterate),Tuple{QuantumAlgebra.BosonCreate{Tuple{Int64}},QuantumAlgebra.OpProd},Int64})
    Base.precompile(Tuple{typeof(Base.indexed_iterate),Tuple{QuantumAlgebra.BosonCreate{Tuple{Int64}},QuantumAlgebra.σminus{Tuple{Int64}}},Int64})
    Base.precompile(Tuple{typeof(Base.indexed_iterate),Tuple{QuantumAlgebra.BosonCreate{Tuple{Int64}},QuantumAlgebra.σminus{Tuple{Symbol}}},Int64})
    Base.precompile(Tuple{typeof(Base.indexed_iterate),Tuple{QuantumAlgebra.BosonCreate{Tuple{Int64}},QuantumAlgebra.σplus{Tuple{Int64}}},Int64})
    Base.precompile(Tuple{typeof(Base.indexed_iterate),Tuple{QuantumAlgebra.BosonCreate{Tuple{Int64}},QuantumAlgebra.σ{Tuple{Int64}}},Int64})
    Base.precompile(Tuple{typeof(Base.indexed_iterate),Tuple{QuantumAlgebra.BosonCreate{Tuple{Symbol}},Nothing},Int64})
    Base.precompile(Tuple{typeof(Base.indexed_iterate),Tuple{QuantumAlgebra.BosonCreate{Tuple{Symbol}},QuantumAlgebra.BosonCreate{Tuple{Symbol}}},Int64})
    Base.precompile(Tuple{typeof(Base.indexed_iterate),Tuple{QuantumAlgebra.BosonCreate{Tuple{Symbol}},QuantumAlgebra.BosonDestroy{Tuple{Int64}}},Int64})
    Base.precompile(Tuple{typeof(Base.indexed_iterate),Tuple{QuantumAlgebra.BosonCreate{Tuple{Symbol}},QuantumAlgebra.BosonDestroy{Tuple{Symbol}}},Int64})
    Base.precompile(Tuple{typeof(Base.indexed_iterate),Tuple{QuantumAlgebra.BosonCreate{Tuple{Symbol}},QuantumAlgebra.OpProd},Int64})
    Base.precompile(Tuple{typeof(Base.indexed_iterate),Tuple{QuantumAlgebra.BosonCreate{Tuple{Symbol}},QuantumAlgebra.σ{Tuple{Symbol}}},Int64})
    Base.precompile(Tuple{typeof(Base.indexed_iterate),Tuple{QuantumAlgebra.BosonDestroy{Tuple{Int64}},Nothing},Int64})
    Base.precompile(Tuple{typeof(Base.indexed_iterate),Tuple{QuantumAlgebra.BosonDestroy{Tuple{Int64}},QuantumAlgebra.BosonDestroy{Tuple{Symbol}}},Int64})
    Base.precompile(Tuple{typeof(Base.indexed_iterate),Tuple{QuantumAlgebra.BosonDestroy{Tuple{Int64}},QuantumAlgebra.σminus{Tuple{Int64}}},Int64})
    Base.precompile(Tuple{typeof(Base.indexed_iterate),Tuple{QuantumAlgebra.BosonDestroy{Tuple{Int64}},QuantumAlgebra.σplus{Tuple{Int64}}},Int64})
    Base.precompile(Tuple{typeof(Base.indexed_iterate),Tuple{QuantumAlgebra.BosonDestroy{Tuple{Int64}},QuantumAlgebra.σ{Tuple{Int64}}},Int64})
    Base.precompile(Tuple{typeof(Base.indexed_iterate),Tuple{QuantumAlgebra.BosonDestroy{Tuple{Symbol}},Nothing},Int64})
    Base.precompile(Tuple{typeof(Base.indexed_iterate),Tuple{QuantumAlgebra.BosonDestroy{Tuple{Symbol}},QuantumAlgebra.BosonDestroy{Tuple{Symbol}}},Int64})
    Base.precompile(Tuple{typeof(Base.indexed_iterate),Tuple{QuantumAlgebra.BosonDestroy{Tuple{Symbol}},QuantumAlgebra.OpProd},Int64})
    Base.precompile(Tuple{typeof(Base.indexed_iterate),Tuple{QuantumAlgebra.BosonDestroy{Tuple{Symbol}},QuantumAlgebra.σ{Tuple{Symbol}}},Int64})
    Base.precompile(Tuple{typeof(Base.indexed_iterate),Tuple{QuantumAlgebra.FermionCreate{Tuple{Symbol}},Nothing},Int64})
    Base.precompile(Tuple{typeof(Base.indexed_iterate),Tuple{QuantumAlgebra.FermionCreate{Tuple{Symbol}},QuantumAlgebra.FermionCreate{Tuple{Symbol}}},Int64})
    Base.precompile(Tuple{typeof(Base.indexed_iterate),Tuple{QuantumAlgebra.FermionCreate{Tuple{Symbol}},QuantumAlgebra.FermionDestroy{Tuple{Symbol}}},Int64})
    Base.precompile(Tuple{typeof(Base.indexed_iterate),Tuple{QuantumAlgebra.FermionDestroy{Tuple{Symbol}},Nothing},Int64})
    Base.precompile(Tuple{typeof(Base.indexed_iterate),Tuple{QuantumAlgebra.FermionDestroy{Tuple{Symbol}},QuantumAlgebra.FermionDestroy{Tuple{Symbol}}},Int64})
    Base.precompile(Tuple{typeof(Base.indexed_iterate),Tuple{QuantumAlgebra.OpProd,QuantumAlgebra.OpSum},Int64})
    Base.precompile(Tuple{typeof(Base.indexed_iterate),Tuple{QuantumAlgebra.OpProd,scal{Int64}},Int64})
    Base.precompile(Tuple{typeof(Base.indexed_iterate),Tuple{QuantumAlgebra.σminus{Tuple{Int64}},Nothing},Int64})
    Base.precompile(Tuple{typeof(Base.indexed_iterate),Tuple{QuantumAlgebra.σminus{Tuple{Symbol,Symbol}},Nothing},Int64})
    Base.precompile(Tuple{typeof(Base.indexed_iterate),Tuple{QuantumAlgebra.σminus{Tuple{Symbol}},Nothing},Int64})
    Base.precompile(Tuple{typeof(Base.indexed_iterate),Tuple{QuantumAlgebra.σminus{Tuple{}},Nothing},Int64})
    Base.precompile(Tuple{typeof(Base.indexed_iterate),Tuple{QuantumAlgebra.σplus{Tuple{Int64}},Nothing},Int64})
    Base.precompile(Tuple{typeof(Base.indexed_iterate),Tuple{QuantumAlgebra.σplus{Tuple{Int64}},QuantumAlgebra.σminus{Tuple{Int64}}},Int64})
    Base.precompile(Tuple{typeof(Base.indexed_iterate),Tuple{QuantumAlgebra.σplus{Tuple{Symbol,Symbol}},QuantumAlgebra.σminus{Tuple{Symbol,Symbol}}},Int64})
    Base.precompile(Tuple{typeof(Base.indexed_iterate),Tuple{QuantumAlgebra.σplus{Tuple{Symbol}},QuantumAlgebra.σminus{Tuple{Symbol}}},Int64})
    Base.precompile(Tuple{typeof(Base.indexed_iterate),Tuple{QuantumAlgebra.σplus{Tuple{}},QuantumAlgebra.σminus{Tuple{}}},Int64})
    Base.precompile(Tuple{typeof(Base.indexed_iterate),Tuple{QuantumAlgebra.σ{Tuple{Int64}},Nothing},Int64})
    Base.precompile(Tuple{typeof(Base.indexed_iterate),Tuple{QuantumAlgebra.σ{Tuple{Symbol}},Nothing},Int64})
    Base.precompile(Tuple{typeof(Base.indexed_iterate),Tuple{QuantumAlgebra.σ{Tuple{Symbol}},QuantumAlgebra.OpProd},Int64})
    Base.precompile(Tuple{typeof(Base.indexed_iterate),Tuple{QuantumAlgebra.σ{Tuple{Symbol}},QuantumAlgebra.σ{Tuple{Symbol}}},Int64})
    Base.precompile(Tuple{typeof(Base.indexed_iterate),Tuple{param{Tuple{Symbol,Symbol}},QuantumAlgebra.OpProd},Int64})
    Base.precompile(Tuple{typeof(Base.indexed_iterate),Tuple{param{Tuple{Symbol,Symbol}},QuantumAlgebra.σ{Tuple{Symbol}}},Int64})
    Base.precompile(Tuple{typeof(Base.indexed_iterate),Tuple{param{Tuple{Symbol}},QuantumAlgebra.BosonCreate{Tuple{Symbol}}},Int64})
    Base.precompile(Tuple{typeof(Base.indexed_iterate),Tuple{param{Tuple{Symbol}},QuantumAlgebra.BosonDestroy{Tuple{Symbol}}},Int64})
    Base.precompile(Tuple{typeof(Base.indexed_iterate),Tuple{param{Tuple{Symbol}},QuantumAlgebra.OpProd},Int64})
    Base.precompile(Tuple{typeof(Base.indexed_iterate),Tuple{param{Tuple{Symbol}},QuantumAlgebra.σ{Tuple{Symbol}}},Int64})
    Base.precompile(Tuple{typeof(Base.indexed_iterate),Tuple{scal{Int64},scal{Int64}},Int64})
    Base.precompile(Tuple{typeof(Base.indexed_iterate),Tuple{δ,QuantumAlgebra.BosonCreate{Tuple{Symbol}}},Int64})
    Base.precompile(Tuple{typeof(Base.indexed_iterate),Tuple{δ,QuantumAlgebra.BosonDestroy{Tuple{Symbol}}},Int64})
    Base.precompile(Tuple{typeof(Base.indexed_iterate),Tuple{δ,QuantumAlgebra.OpProd},Int64})
    Base.precompile(Tuple{typeof(Base.mul_prod),scal{Int64},scal{Int64}})
    Base.precompile(Tuple{typeof(Base.mul_prod),δ,δ})
    Base.precompile(Tuple{typeof(Base.print_to_string),Corr,Vararg{Any,N} where N})
    Base.precompile(Tuple{typeof(Base.print_to_string),ExpVal,Vararg{Any,N} where N})
    Base.precompile(Tuple{typeof(Base.print_to_string),QuantumAlgebra.BosonCreate{Tuple{Int64,Symbol}},Vararg{Any,N} where N})
    Base.precompile(Tuple{typeof(Base.print_to_string),QuantumAlgebra.BosonCreate{Tuple{Int64}},Vararg{Any,N} where N})
    Base.precompile(Tuple{typeof(Base.print_to_string),QuantumAlgebra.BosonCreate{Tuple{Symbol}},Vararg{Any,N} where N})
    Base.precompile(Tuple{typeof(Base.print_to_string),QuantumAlgebra.BosonDestroy{Tuple{Int64}},Vararg{Any,N} where N})
    Base.precompile(Tuple{typeof(Base.print_to_string),QuantumAlgebra.OpProd,Vararg{Any,N} where N})
    Base.precompile(Tuple{typeof(Base.print_to_string),scal{Int64},Vararg{Any,N} where N})
    Base.precompile(Tuple{typeof(Base.promote_typeof),QuantumAlgebra.BosonCreate{Tuple{Symbol}},QuantumAlgebra.σ{Tuple{Symbol}},Vararg{QuantumAlgebra.σ{Tuple{Symbol}},N} where N})
    Base.precompile(Tuple{typeof(Base.promote_typeof),QuantumAlgebra.BosonDestroy{Tuple{Symbol}},QuantumAlgebra.BosonCreate{Tuple{Symbol}},Vararg{Any,N} where N})
    Base.precompile(Tuple{typeof(Base.promote_typeof),QuantumAlgebra.OpProd,QuantumAlgebra.OpProd})
    Base.precompile(Tuple{typeof(Base.promote_typeof),QuantumAlgebra.σ{Tuple{Symbol}},QuantumAlgebra.σ{Tuple{Symbol}},Vararg{QuantumAlgebra.σ{Tuple{Symbol}},N} where N})
    Base.precompile(Tuple{typeof(Base.promote_typeof),Tuple{QuantumAlgebra.OpProd,QuantumAlgebra.OpSum},Tuple{QuantumAlgebra.OpProd,scal{Int64}}})
    Base.precompile(Tuple{typeof(Base.promote_typeof),Tuple{scal{Int64},scal{Int64}},Tuple{QuantumAlgebra.OpProd,QuantumAlgebra.OpSum},Vararg{Any,N} where N})
    Base.precompile(Tuple{typeof(Base.promote_typeof),scal{Int64},QuantumAlgebra.OpProd,Vararg{QuantumAlgebra.OpProd,N} where N})
    Base.precompile(Tuple{typeof(Base.revargs),param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}},Vararg{Any,N} where N})
    Base.precompile(Tuple{typeof(Base.revargs),param{Tuple{Symbol,Symbol}},param{Tuple{Symbol,Symbol}}})
    Base.precompile(Tuple{typeof(Base.revargs),param{Tuple{Symbol,Symbol}},param{Tuple{Symbol}},Vararg{param{Tuple{Symbol}},N} where N})
    Base.precompile(Tuple{typeof(Base.revargs),param{Tuple{Symbol,Symbol}},param{Tuple{Symbol}}})
    Base.precompile(Tuple{typeof(Base.revargs),param{Tuple{Symbol,Symbol}}})
    Base.precompile(Tuple{typeof(Base.revargs),param{Tuple{Symbol}},param{Tuple{Symbol}},Vararg{param{Tuple{Symbol}},N} where N})
    Base.precompile(Tuple{typeof(Base.revargs),param{Tuple{Symbol}},param{Tuple{Symbol}}})
    Base.precompile(Tuple{typeof(Base.revargs),param{Tuple{Symbol}}})
    Base.precompile(Tuple{typeof(Base.revargs),δ,param{Tuple{Symbol,Symbol}},Vararg{Any,N} where N})
    Base.precompile(Tuple{typeof(Base.revargs),δ,param{Tuple{Symbol,Symbol}},Vararg{param{Tuple{Symbol,Symbol}},N} where N})
    Base.precompile(Tuple{typeof(Base.revargs),δ,param{Tuple{Symbol,Symbol}}})
    Base.precompile(Tuple{typeof(Base.revargs),δ,param{Tuple{Symbol}},Vararg{param{Tuple{Symbol}},N} where N})
    Base.precompile(Tuple{typeof(Base.revargs),δ,param{Tuple{Symbol}}})
    Base.precompile(Tuple{typeof(Base.revargs),δ,δ,Vararg{Any,N} where N})
    Base.precompile(Tuple{typeof(Base.revargs),δ,δ})
    Base.precompile(Tuple{typeof(Base.revargs),δ})
    Base.precompile(Tuple{typeof(Base.vect),QuantumAlgebra.BosonDestroy{Tuple{Symbol}},Vararg{Any,N} where N})
    Base.precompile(Tuple{typeof(Base.vect),QuantumAlgebra.OpProd,Vararg{QuantumAlgebra.OpProd,N} where N})
    Base.precompile(Tuple{typeof(Base.vect),Tuple{scal{Int64},scal{Int64}},Vararg{Any,N} where N})
    Base.precompile(Tuple{typeof(Base.vect),scal{Int64},Vararg{Any,N} where N})
    Base.precompile(Tuple{typeof(QuantumAlgebra._sortedOpProd),Corr,Corr})
    Base.precompile(Tuple{typeof(QuantumAlgebra._sortedOpProd),Corr})
    Base.precompile(Tuple{typeof(QuantumAlgebra._sortedOpProd),ExpVal,Corr,Vararg{Corr,N} where N})
    Base.precompile(Tuple{typeof(QuantumAlgebra._sortedOpProd),ExpVal,Corr})
    Base.precompile(Tuple{typeof(QuantumAlgebra._sortedOpProd),ExpVal,ExpVal,Vararg{QuantumAlgebra.Operator,N} where N})
    Base.precompile(Tuple{typeof(QuantumAlgebra._sortedOpProd),param{Tuple{}},Corr})
    Base.precompile(Tuple{typeof(QuantumAlgebra._sortedOpProd),param{Tuple{}},ExpVal,Vararg{QuantumAlgebra.Operator,N} where N})
    Base.precompile(Tuple{typeof(QuantumAlgebra._sortedOpProd),scal{Int64},Corr})
    Base.precompile(Tuple{typeof(QuantumAlgebra._sortedOpProd),scal{Int64},ExpVal,Vararg{QuantumAlgebra.Operator,N} where N})
    Base.precompile(Tuple{typeof(QuantumAlgebra._sortedOpSum),Array{QuantumAlgebra.OpProd,1}})
    Base.precompile(Tuple{typeof(QuantumAlgebra._sortedOpSum),Array{QuantumAlgebra.Operator,1}})
    Base.precompile(Tuple{typeof(QuantumAlgebra._sumterm),Tuple{param{Tuple{}}},Array{QuantumAlgebra.BaseOperator,1},Tuple{Tuple{Int64,Int64,Int64}}})
    Base.precompile(Tuple{typeof(QuantumAlgebra._sumterm),Tuple{param{Tuple{}}},Array{QuantumAlgebra.BaseOperator,1},Tuple{Tuple{Int64},Tuple{Int64,Int64}}})
    Base.precompile(Tuple{typeof(QuantumAlgebra._sumterm),Tuple{param{Tuple{}}},Array{QuantumAlgebra.BaseOperator,1},Tuple{Tuple{Int64},Tuple{Int64},Tuple{Int64}}})
    Base.precompile(Tuple{typeof(QuantumAlgebra._sumterm),Tuple{scal{Int64},param{Tuple{Int64}}},Array{QuantumAlgebra.σplus{Tuple{Int64}},1},Tuple{Tuple{Int64}}})
    Base.precompile(Tuple{typeof(QuantumAlgebra._sumterm),Tuple{scal{Int64},param{Tuple{Int64}}},Array{QuantumAlgebra.σ{Tuple{Int64}},1},Tuple{Tuple{Int64}}})
    Base.precompile(Tuple{typeof(QuantumAlgebra._sumterm),Tuple{scal{Int64},param{Tuple{}}},Array{QuantumAlgebra.BosonDestroy{Tuple{Int64}},1},Tuple{Tuple{Int64,Int64,Int64}}})
    Base.precompile(Tuple{typeof(QuantumAlgebra._sumterm),Tuple{scal{Int64},param{Tuple{}}},Array{QuantumAlgebra.BosonDestroy{Tuple{Int64}},1},Tuple{Tuple{Int64},Tuple{Int64,Int64}}})
    Base.precompile(Tuple{typeof(QuantumAlgebra._sumterm),Tuple{scal{Int64},param{Tuple{}}},Array{QuantumAlgebra.BosonDestroy{Tuple{Int64}},1},Tuple{Tuple{Int64},Tuple{Int64},Tuple{Int64}}})
    Base.precompile(Tuple{typeof(QuantumAlgebra._sumterm),Tuple{scal{Int64}},Array{QuantumAlgebra.BosonDestroy{Tuple{Int64}},1},Tuple{Tuple{Int64,Int64,Int64}}})
    Base.precompile(Tuple{typeof(QuantumAlgebra._sumterm),Tuple{scal{Int64}},Array{QuantumAlgebra.BosonDestroy{Tuple{Int64}},1},Tuple{Tuple{Int64},Tuple{Int64,Int64}}})
    Base.precompile(Tuple{typeof(QuantumAlgebra._sumterm),Tuple{scal{Int64}},Array{QuantumAlgebra.BosonDestroy{Tuple{Int64}},1},Tuple{Tuple{Int64},Tuple{Int64},Tuple{Int64}}})
    Base.precompile(Tuple{typeof(QuantumAlgebra._sumterm),Tuple{scal{Int64}},Array{QuantumAlgebra.BosonDestroy{Tuple{Int64}},1},Tuple{Tuple{Int64}}})
    Base.precompile(Tuple{typeof(QuantumAlgebra._sumterm),Tuple{},Array{QuantumAlgebra.BaseOperator,1},NTuple{4,Tuple{Int64}}})
    Base.precompile(Tuple{typeof(QuantumAlgebra._sumterm),Tuple{},Array{QuantumAlgebra.BaseOperator,1},Tuple{NTuple{4,Int64}}})
    Base.precompile(Tuple{typeof(QuantumAlgebra._sumterm),Tuple{},Array{QuantumAlgebra.BaseOperator,1},Tuple{Tuple{Int64,Int64,Int64}}})
    Base.precompile(Tuple{typeof(QuantumAlgebra._sumterm),Tuple{},Array{QuantumAlgebra.BaseOperator,1},Tuple{Tuple{Int64,Int64},Tuple{Int64,Int64}}})
    Base.precompile(Tuple{typeof(QuantumAlgebra._sumterm),Tuple{},Array{QuantumAlgebra.BaseOperator,1},Tuple{Tuple{Int64,Int64}}})
    Base.precompile(Tuple{typeof(QuantumAlgebra._sumterm),Tuple{},Array{QuantumAlgebra.BaseOperator,1},Tuple{Tuple{Int64},Tuple{Int64,Int64,Int64}}})
    Base.precompile(Tuple{typeof(QuantumAlgebra._sumterm),Tuple{},Array{QuantumAlgebra.BaseOperator,1},Tuple{Tuple{Int64},Tuple{Int64,Int64}}})
    Base.precompile(Tuple{typeof(QuantumAlgebra._sumterm),Tuple{},Array{QuantumAlgebra.BaseOperator,1},Tuple{Tuple{Int64},Tuple{Int64},Tuple{Int64,Int64}}})
    Base.precompile(Tuple{typeof(QuantumAlgebra._sumterm),Tuple{},Array{QuantumAlgebra.BaseOperator,1},Tuple{Tuple{Int64},Tuple{Int64},Tuple{Int64}}})
    Base.precompile(Tuple{typeof(QuantumAlgebra._sumterm),Tuple{},Array{QuantumAlgebra.BaseOperator,1},Tuple{Tuple{Int64},Tuple{Int64}}})
    Base.precompile(Tuple{typeof(QuantumAlgebra._sumterm),Tuple{},Array{QuantumAlgebra.BosonDestroy,1},Tuple{Tuple{Int64,Int64}}})
    Base.precompile(Tuple{typeof(QuantumAlgebra._sumterm),Tuple{},Array{QuantumAlgebra.BosonDestroy,1},Tuple{Tuple{Int64},Tuple{Int64}}})
    Base.precompile(Tuple{typeof(QuantumAlgebra._sumterm),Tuple{},Array{QuantumAlgebra.BosonDestroy{Tuple{Int64}},1},NTuple{4,Tuple{Int64}}})
    Base.precompile(Tuple{typeof(QuantumAlgebra._sumterm),Tuple{},Array{QuantumAlgebra.BosonDestroy{Tuple{Int64}},1},NTuple{5,Tuple{Int64}}})
    Base.precompile(Tuple{typeof(QuantumAlgebra._sumterm),Tuple{},Array{QuantumAlgebra.BosonDestroy{Tuple{Int64}},1},Tuple{NTuple{4,Int64}}})
    Base.precompile(Tuple{typeof(QuantumAlgebra._sumterm),Tuple{},Array{QuantumAlgebra.BosonDestroy{Tuple{Int64}},1},Tuple{NTuple{5,Int64}}})
    Base.precompile(Tuple{typeof(QuantumAlgebra._sumterm),Tuple{},Array{QuantumAlgebra.BosonDestroy{Tuple{Int64}},1},Tuple{Tuple{Int64,Int64},Tuple{Int64,Int64}}})
    Base.precompile(Tuple{typeof(QuantumAlgebra._sumterm),Tuple{},Array{QuantumAlgebra.BosonDestroy{Tuple{Int64}},1},Tuple{Tuple{Int64,Int64}}})
    Base.precompile(Tuple{typeof(QuantumAlgebra._sumterm),Tuple{},Array{QuantumAlgebra.BosonDestroy{Tuple{Int64}},1},Tuple{Tuple{Int64},NTuple{4,Int64}}})
    Base.precompile(Tuple{typeof(QuantumAlgebra._sumterm),Tuple{},Array{QuantumAlgebra.BosonDestroy{Tuple{Int64}},1},Tuple{Tuple{Int64},Tuple{Int64,Int64,Int64}}})
    Base.precompile(Tuple{typeof(QuantumAlgebra._sumterm),Tuple{},Array{QuantumAlgebra.BosonDestroy{Tuple{Int64}},1},Tuple{Tuple{Int64},Tuple{Int64,Int64},Tuple{Int64,Int64}}})
    Base.precompile(Tuple{typeof(QuantumAlgebra._sumterm),Tuple{},Array{QuantumAlgebra.BosonDestroy{Tuple{Int64}},1},Tuple{Tuple{Int64},Tuple{Int64},Tuple{Int64,Int64,Int64}}})
    Base.precompile(Tuple{typeof(QuantumAlgebra._sumterm),Tuple{},Array{QuantumAlgebra.BosonDestroy{Tuple{Int64}},1},Tuple{Tuple{Int64},Tuple{Int64},Tuple{Int64,Int64}}})
    Base.precompile(Tuple{typeof(QuantumAlgebra._sumterm),Tuple{},Array{QuantumAlgebra.BosonDestroy{Tuple{Int64}},1},Tuple{Tuple{Int64},Tuple{Int64},Tuple{Int64},Tuple{Int64,Int64}}})
    Base.precompile(Tuple{typeof(QuantumAlgebra._sumterm),Tuple{},Array{QuantumAlgebra.BosonDestroy{Tuple{Int64}},1},Tuple{Tuple{Int64},Tuple{Int64}}})
    Base.precompile(Tuple{typeof(QuantumAlgebra._sumterm),Tuple{},Array{QuantumAlgebra.σ{Tuple{Symbol}},1},Tuple{Tuple{Int64,Int64}}})
    Base.precompile(Tuple{typeof(QuantumAlgebra._sumterm),Tuple{},Array{QuantumAlgebra.σ{Tuple{Symbol}},1},Tuple{Tuple{Int64},Tuple{Int64}}})
    Base.precompile(Tuple{typeof(QuantumAlgebra._vacExpVal),scal{Complex{Rational{Int64}}}})
    Base.precompile(Tuple{typeof(QuantumAlgebra._vacExpVal),scal{Float64}})
    Base.precompile(Tuple{typeof(QuantumAlgebra._vacExpVal),scal{Int64}})
    Base.precompile(Tuple{typeof(QuantumAlgebra._vacExpVal),scal{Rational{Int64}}})
    Base.precompile(Tuple{typeof(QuantumAlgebra._vacExpVal),δ})
    Base.precompile(Tuple{typeof(QuantumAlgebra.exptuple),ExpVal})
    Base.precompile(Tuple{typeof(QuantumAlgebra.exptuple),QuantumAlgebra.BosonCreate{Tuple{Int64,Symbol}}})
    Base.precompile(Tuple{typeof(QuantumAlgebra.exptuple),QuantumAlgebra.BosonCreate{Tuple{Int64}}})
    Base.precompile(Tuple{typeof(QuantumAlgebra.exptuple),QuantumAlgebra.BosonCreate{Tuple{Symbol}}})
    Base.precompile(Tuple{typeof(QuantumAlgebra.exptuple),QuantumAlgebra.BosonDestroy{Tuple{Int64}}})
    Base.precompile(Tuple{typeof(QuantumAlgebra.exptuple),QuantumAlgebra.BosonDestroy{Tuple{Symbol}}})
    Base.precompile(Tuple{typeof(QuantumAlgebra.exptuple),QuantumAlgebra.σminus{Tuple{Symbol}}})
    Base.precompile(Tuple{typeof(QuantumAlgebra.exptuple),QuantumAlgebra.σplus{Tuple{Int64}}})
    Base.precompile(Tuple{typeof(QuantumAlgebra.exptuple),QuantumAlgebra.σplus{Tuple{Symbol}}})
    Base.precompile(Tuple{typeof(QuantumAlgebra.exptuple),QuantumAlgebra.σ{Tuple{Int64}}})
    Base.precompile(Tuple{typeof(QuantumAlgebra.exptuple),QuantumAlgebra.σ{Tuple{Symbol}}})
    Base.precompile(Tuple{typeof(QuantumAlgebra.exptuple),param{Tuple{Int64}}})
    Base.precompile(Tuple{typeof(QuantumAlgebra.exptuple),param{Tuple{}}})
    Base.precompile(Tuple{typeof(QuantumAlgebra.exptuple),scal{Int64}})
    Base.precompile(Tuple{typeof(QuantumAlgebra.optuple),ExpVal})
    Base.precompile(Tuple{typeof(QuantumAlgebra.optuple),QuantumAlgebra.BosonCreate{Tuple{Int64,Symbol}}})
    Base.precompile(Tuple{typeof(QuantumAlgebra.optuple),QuantumAlgebra.BosonCreate{Tuple{Int64}}})
    Base.precompile(Tuple{typeof(QuantumAlgebra.optuple),QuantumAlgebra.BosonCreate{Tuple{Symbol}}})
    Base.precompile(Tuple{typeof(QuantumAlgebra.optuple),QuantumAlgebra.BosonDestroy{Tuple{Int64}}})
    Base.precompile(Tuple{typeof(QuantumAlgebra.optuple),QuantumAlgebra.BosonDestroy{Tuple{Symbol}}})
    Base.precompile(Tuple{typeof(QuantumAlgebra.optuple),QuantumAlgebra.σminus{Tuple{Symbol}}})
    Base.precompile(Tuple{typeof(QuantumAlgebra.optuple),QuantumAlgebra.σplus{Tuple{Int64}}})
    Base.precompile(Tuple{typeof(QuantumAlgebra.optuple),QuantumAlgebra.σplus{Tuple{Symbol}}})
    Base.precompile(Tuple{typeof(QuantumAlgebra.optuple),QuantumAlgebra.σ{Tuple{Int64}}})
    Base.precompile(Tuple{typeof(QuantumAlgebra.optuple),QuantumAlgebra.σ{Tuple{Symbol}}})
    Base.precompile(Tuple{typeof(QuantumAlgebra.optuple),param{Tuple{Int64}}})
    Base.precompile(Tuple{typeof(QuantumAlgebra.optuple),param{Tuple{}}})
    Base.precompile(Tuple{typeof(QuantumAlgebra.optuple),scal{Int64}})
    Base.precompile(Tuple{typeof(QuantumAlgebra.preftuple),Corr})
    Base.precompile(Tuple{typeof(QuantumAlgebra.preftuple),ExpVal})
    Base.precompile(Tuple{typeof(QuantumAlgebra.preftuple),QuantumAlgebra.BosonCreate{Tuple{Int64,Symbol}}})
    Base.precompile(Tuple{typeof(QuantumAlgebra.preftuple),QuantumAlgebra.BosonCreate{Tuple{Int64}}})
    Base.precompile(Tuple{typeof(QuantumAlgebra.preftuple),QuantumAlgebra.BosonCreate{Tuple{Symbol,Symbol}}})
    Base.precompile(Tuple{typeof(QuantumAlgebra.preftuple),QuantumAlgebra.BosonCreate{Tuple{Symbol}}})
    Base.precompile(Tuple{typeof(QuantumAlgebra.preftuple),QuantumAlgebra.BosonDestroy{Tuple{Int64}}})
    Base.precompile(Tuple{typeof(QuantumAlgebra.preftuple),QuantumAlgebra.BosonDestroy{Tuple{Symbol,Symbol}}})
    Base.precompile(Tuple{typeof(QuantumAlgebra.preftuple),QuantumAlgebra.BosonDestroy{Tuple{Symbol}}})
    Base.precompile(Tuple{typeof(QuantumAlgebra.preftuple),QuantumAlgebra.BosonDestroy{Tuple{}}})
    Base.precompile(Tuple{typeof(QuantumAlgebra.preftuple),QuantumAlgebra.FermionCreate{Tuple{Symbol}}})
    Base.precompile(Tuple{typeof(QuantumAlgebra.preftuple),QuantumAlgebra.FermionDestroy{Tuple{Symbol}}})
    Base.precompile(Tuple{typeof(QuantumAlgebra.preftuple),QuantumAlgebra.σminus{Tuple{Int64}}})
    Base.precompile(Tuple{typeof(QuantumAlgebra.preftuple),QuantumAlgebra.σminus{Tuple{Symbol,Symbol}}})
    Base.precompile(Tuple{typeof(QuantumAlgebra.preftuple),QuantumAlgebra.σminus{Tuple{Symbol}}})
    Base.precompile(Tuple{typeof(QuantumAlgebra.preftuple),QuantumAlgebra.σminus{Tuple{}}})
    Base.precompile(Tuple{typeof(QuantumAlgebra.preftuple),QuantumAlgebra.σplus{Tuple{Int64}}})
    Base.precompile(Tuple{typeof(QuantumAlgebra.preftuple),QuantumAlgebra.σplus{Tuple{Symbol,Symbol}}})
    Base.precompile(Tuple{typeof(QuantumAlgebra.preftuple),QuantumAlgebra.σplus{Tuple{Symbol}}})
    Base.precompile(Tuple{typeof(QuantumAlgebra.preftuple),QuantumAlgebra.σplus{Tuple{}}})
    Base.precompile(Tuple{typeof(QuantumAlgebra.preftuple),QuantumAlgebra.σ{Tuple{Int64}}})
    Base.precompile(Tuple{typeof(QuantumAlgebra.preftuple),QuantumAlgebra.σ{Tuple{Symbol}}})
    Base.precompile(Tuple{typeof(QuantumAlgebra.preftuple),param{Tuple{Int64}}})
    Base.precompile(Tuple{typeof(QuantumAlgebra.preftuple),param{Tuple{Symbol,Symbol}}})
    Base.precompile(Tuple{typeof(QuantumAlgebra.preftuple),param{Tuple{Symbol}}})
    Base.precompile(Tuple{typeof(QuantumAlgebra.preftuple),param{Tuple{}}})
    Base.precompile(Tuple{typeof(QuantumAlgebra.preftuple),scal{Int64}})
    Base.precompile(Tuple{typeof(QuantumAlgebra.preftuple),δ})
    Base.precompile(Tuple{typeof(QuantumAlgebra.prodcorr),Tuple{ExpVal,ExpVal},Tuple{}})
    Base.precompile(Tuple{typeof(QuantumAlgebra.prodcorr),Tuple{param{Tuple{}}},Tuple{QuantumAlgebra.BosonCreate{Tuple{Int64}},QuantumAlgebra.BosonDestroy{Tuple{Int64}},QuantumAlgebra.BosonDestroy{Tuple{Int64}}}})
    Base.precompile(Tuple{typeof(QuantumAlgebra.prodcorr),Tuple{scal{Int64},param{Tuple{Int64}}},Tuple{QuantumAlgebra.σplus{Tuple{Int64}}}})
    Base.precompile(Tuple{typeof(QuantumAlgebra.prodcorr),Tuple{scal{Int64},param{Tuple{Int64}}},Tuple{QuantumAlgebra.σ{Tuple{Int64}}}})
    Base.precompile(Tuple{typeof(QuantumAlgebra.prodcorr),Tuple{scal{Int64},param{Tuple{}}},Tuple{QuantumAlgebra.BosonDestroy{Tuple{Int64}},QuantumAlgebra.BosonDestroy{Tuple{Int64}},QuantumAlgebra.BosonDestroy{Tuple{Int64}}}})
    Base.precompile(Tuple{typeof(QuantumAlgebra.prodcorr),Tuple{scal{Int64},param{Tuple{}}},Tuple{}})
    Base.precompile(Tuple{typeof(QuantumAlgebra.prodcorr),Tuple{scal{Int64}},Tuple{QuantumAlgebra.BosonDestroy{Tuple{Int64}},QuantumAlgebra.BosonDestroy{Tuple{Int64}},QuantumAlgebra.BosonDestroy{Tuple{Int64}}}})
    Base.precompile(Tuple{typeof(QuantumAlgebra.prodcorr),Tuple{scal{Int64}},Tuple{QuantumAlgebra.BosonDestroy{Tuple{Int64}}}})
    Base.precompile(Tuple{typeof(QuantumAlgebra.prodcorr),Tuple{},NTuple{4,QuantumAlgebra.BosonDestroy{Tuple{Int64}}}})
    Base.precompile(Tuple{typeof(QuantumAlgebra.prodcorr),Tuple{},NTuple{5,QuantumAlgebra.BosonDestroy{Tuple{Int64}}}})
    Base.precompile(Tuple{typeof(QuantumAlgebra.prodcorr),Tuple{},Tuple{QuantumAlgebra.BosonCreate{Tuple{Int64,Symbol}},QuantumAlgebra.BosonDestroy{Tuple{Int64}}}})
    Base.precompile(Tuple{typeof(QuantumAlgebra.prodcorr),Tuple{},Tuple{QuantumAlgebra.BosonCreate{Tuple{Int64}},QuantumAlgebra.BosonDestroy{Tuple{Int64}},QuantumAlgebra.σ{Tuple{Int64}}}})
    Base.precompile(Tuple{typeof(QuantumAlgebra.prodcorr),Tuple{},Tuple{QuantumAlgebra.BosonCreate{Tuple{Symbol}},QuantumAlgebra.BosonCreate{Tuple{Symbol}},QuantumAlgebra.BosonDestroy{Tuple{Symbol}},QuantumAlgebra.σ{Tuple{Symbol}}}})
    Base.precompile(Tuple{typeof(QuantumAlgebra.prodcorr),Tuple{},Tuple{QuantumAlgebra.BosonCreate{Tuple{Symbol}},QuantumAlgebra.BosonDestroy{Tuple{Symbol}}}})
    Base.precompile(Tuple{typeof(QuantumAlgebra.prodcorr),Tuple{},Tuple{QuantumAlgebra.BosonCreate{Tuple{Symbol}},QuantumAlgebra.σ{Tuple{Symbol}}}})
    Base.precompile(Tuple{typeof(QuantumAlgebra.prodcorr),Tuple{},Tuple{QuantumAlgebra.BosonDestroy{Tuple{Int64}},QuantumAlgebra.BosonDestroy{Tuple{Int64}}}})
    Base.precompile(Tuple{typeof(QuantumAlgebra.prodcorr),Tuple{},Tuple{QuantumAlgebra.BosonDestroy{Tuple{Int64}},QuantumAlgebra.BosonDestroy{Tuple{Symbol}}}})
    Base.precompile(Tuple{typeof(QuantumAlgebra.prodcorr),Tuple{},Tuple{QuantumAlgebra.σplus{Tuple{Symbol}},QuantumAlgebra.σminus{Tuple{Symbol}}}})
    Base.precompile(Tuple{typeof(QuantumAlgebra.prodcorr),Tuple{},Tuple{QuantumAlgebra.σ{Tuple{Symbol}},QuantumAlgebra.σ{Tuple{Symbol}}}})
    Base.precompile(Tuple{typeof(QuantumAlgebra.proditer),QuantumAlgebra.OpProd,Bool})
    Base.precompile(Tuple{typeof(QuantumAlgebra.replace_index),scal{Complex{Int64}},Symbol,Symbol})
    Base.precompile(Tuple{typeof(QuantumAlgebra.replace_index),scal{Complex{Rational{Int64}}},Symbol,Symbol})
    Base.precompile(Tuple{typeof(QuantumAlgebra.separate_prefac),Corr})
    Base.precompile(Tuple{typeof(QuantumAlgebra.separate_prefac),OpSumAnalytic})
    Base.precompile(Tuple{typeof(QuantumAlgebra.separate_prefac),QuantumAlgebra.BosonDestroy{Tuple{Symbol}}})
    Base.precompile(Tuple{typeof(QuantumAlgebra.separate_prefac),scal{Complex{Int64}}})
    Base.precompile(Tuple{typeof(QuantumAlgebra.separate_prefac),scal{Complex{Rational{Int64}}}})
    Base.precompile(Tuple{typeof(QuantumAlgebra.separate_prefac),scal{Float64}})
    Base.precompile(Tuple{typeof(QuantumAlgebra.separate_prefac),δ})
    Base.precompile(Tuple{typeof(adjoint),QuantumAlgebra.σ{Tuple{Int64}}})
    Base.precompile(Tuple{typeof(adjoint),QuantumAlgebra.σ{Tuple{Symbol}}})
    Base.precompile(Tuple{typeof(ascorr),Corr})
    Base.precompile(Tuple{typeof(ascorr),QuantumAlgebra.BosonCreate{Tuple{Int64}}})
    Base.precompile(Tuple{typeof(ascorr),QuantumAlgebra.BosonDestroy{Tuple{Int64}}})
    Base.precompile(Tuple{typeof(ascorr),scal{Int64}})
    Base.precompile(Tuple{typeof(collect),Type{QuantumAlgebra.Operator},Tuple{scal{Int64},scal{Int64}}})
    Base.precompile(Tuple{typeof(collect),Type{QuantumAlgebra.Operator},Tuple{scal{Int64}}})
    Base.precompile(Tuple{typeof(collect),Type{QuantumAlgebra.Operator},Tuple{δ,δ}})
    Base.precompile(Tuple{typeof(collect),Type{QuantumAlgebra.Operator},Tuple{δ}})
    Base.precompile(Tuple{typeof(comm),OpSumAnalytic,OpSumAnalytic})
    Base.precompile(Tuple{typeof(comm),OpSumAnalytic,QuantumAlgebra.BosonCreate{Tuple{Symbol}}})
    Base.precompile(Tuple{typeof(comm),OpSumAnalytic,QuantumAlgebra.BosonDestroy{Tuple{Symbol}}})
    Base.precompile(Tuple{typeof(comm),OpSumAnalytic,QuantumAlgebra.σ{Tuple{Symbol}}})
    Base.precompile(Tuple{typeof(comm),OpSumAnalytic,param{Tuple{Symbol,Symbol}}})
    Base.precompile(Tuple{typeof(comm),OpSumAnalytic,param{Tuple{Symbol}}})
    Base.precompile(Tuple{typeof(comm),OpSumAnalytic,scal{Rational{Int64}}})
    Base.precompile(Tuple{typeof(comm),QuantumAlgebra.BosonCreate{Tuple{Int64}},QuantumAlgebra.BosonCreate{Tuple{Int64}}})
    Base.precompile(Tuple{typeof(comm),QuantumAlgebra.BosonCreate{Tuple{Int64}},QuantumAlgebra.BosonDestroy{Tuple{Int64}}})
    Base.precompile(Tuple{typeof(comm),QuantumAlgebra.BosonCreate{Tuple{Symbol}},OpSumAnalytic})
    Base.precompile(Tuple{typeof(comm),QuantumAlgebra.BosonCreate{Tuple{Symbol}},QuantumAlgebra.BosonCreate{Tuple{Symbol}}})
    Base.precompile(Tuple{typeof(comm),QuantumAlgebra.BosonCreate{Tuple{Symbol}},QuantumAlgebra.BosonDestroy{Tuple{Symbol}}})
    Base.precompile(Tuple{typeof(comm),QuantumAlgebra.BosonCreate{Tuple{Symbol}},QuantumAlgebra.σ{Tuple{Symbol}}})
    Base.precompile(Tuple{typeof(comm),QuantumAlgebra.BosonCreate{Tuple{Symbol}},param{Tuple{Symbol,Symbol}}})
    Base.precompile(Tuple{typeof(comm),QuantumAlgebra.BosonCreate{Tuple{Symbol}},param{Tuple{Symbol}}})
    Base.precompile(Tuple{typeof(comm),QuantumAlgebra.BosonCreate{Tuple{Symbol}},scal{Rational{Int64}}})
    Base.precompile(Tuple{typeof(comm),QuantumAlgebra.BosonDestroy{Tuple{Int64}},QuantumAlgebra.BosonDestroy{Tuple{Int64}}})
    Base.precompile(Tuple{typeof(comm),QuantumAlgebra.BosonDestroy{Tuple{Symbol}},OpSumAnalytic})
    Base.precompile(Tuple{typeof(comm),QuantumAlgebra.BosonDestroy{Tuple{Symbol}},QuantumAlgebra.BosonDestroy{Tuple{Symbol}}})
    Base.precompile(Tuple{typeof(comm),QuantumAlgebra.BosonDestroy{Tuple{Symbol}},QuantumAlgebra.σ{Tuple{Symbol}}})
    Base.precompile(Tuple{typeof(comm),QuantumAlgebra.BosonDestroy{Tuple{Symbol}},param{Tuple{Symbol,Symbol}}})
    Base.precompile(Tuple{typeof(comm),QuantumAlgebra.BosonDestroy{Tuple{Symbol}},param{Tuple{Symbol}}})
    Base.precompile(Tuple{typeof(comm),QuantumAlgebra.BosonDestroy{Tuple{Symbol}},scal{Rational{Int64}}})
    Base.precompile(Tuple{typeof(comm),QuantumAlgebra.FermionCreate{Tuple{}},QuantumAlgebra.FermionDestroy{Tuple{}}})
    Base.precompile(Tuple{typeof(comm),QuantumAlgebra.OpProd,param{Tuple{}}})
    Base.precompile(Tuple{typeof(comm),QuantumAlgebra.OpSum,param{Tuple{}}})
    Base.precompile(Tuple{typeof(comm),QuantumAlgebra.σminus{Tuple{Int64,Symbol}},QuantumAlgebra.σplus{Tuple{}}})
    Base.precompile(Tuple{typeof(comm),QuantumAlgebra.σminus{Tuple{Int64}},QuantumAlgebra.σminus{Tuple{Int64}}})
    Base.precompile(Tuple{typeof(comm),QuantumAlgebra.σminus{Tuple{Int64}},QuantumAlgebra.σplus{Tuple{Int64}}})
    Base.precompile(Tuple{typeof(comm),QuantumAlgebra.σminus{Tuple{Int64}},scal{Complex{Int64}}})
    Base.precompile(Tuple{typeof(comm),QuantumAlgebra.σminus{Tuple{Int64}},scal{Int64}})
    Base.precompile(Tuple{typeof(comm),QuantumAlgebra.σminus{Tuple{Symbol,Symbol}},QuantumAlgebra.σplus{Tuple{Symbol,Symbol}}})
    Base.precompile(Tuple{typeof(comm),QuantumAlgebra.σminus{Tuple{Symbol}},QuantumAlgebra.σminus{Tuple{Symbol}}})
    Base.precompile(Tuple{typeof(comm),QuantumAlgebra.σminus{Tuple{Symbol}},QuantumAlgebra.σplus{Tuple{Symbol}}})
    Base.precompile(Tuple{typeof(comm),QuantumAlgebra.σminus{Tuple{Symbol}},scal{Complex{Int64}}})
    Base.precompile(Tuple{typeof(comm),QuantumAlgebra.σminus{Tuple{}},QuantumAlgebra.σplus{Tuple{}}})
    Base.precompile(Tuple{typeof(comm),QuantumAlgebra.σplus{Tuple{Int64}},QuantumAlgebra.σplus{Tuple{Int64}}})
    Base.precompile(Tuple{typeof(comm),QuantumAlgebra.σplus{Tuple{Int64}},scal{Complex{Int64}}})
    Base.precompile(Tuple{typeof(comm),QuantumAlgebra.σplus{Tuple{Int64}},scal{Int64}})
    Base.precompile(Tuple{typeof(comm),QuantumAlgebra.σplus{Tuple{Symbol}},QuantumAlgebra.σplus{Tuple{Symbol}}})
    Base.precompile(Tuple{typeof(comm),QuantumAlgebra.σplus{Tuple{Symbol}},scal{Complex{Int64}}})
    Base.precompile(Tuple{typeof(comm),QuantumAlgebra.σ{Tuple{Int64}},param{Tuple{}}})
    Base.precompile(Tuple{typeof(comm),QuantumAlgebra.σ{Tuple{Int64}},scal{Complex{Int64}}})
    Base.precompile(Tuple{typeof(comm),QuantumAlgebra.σ{Tuple{Int64}},scal{Complex{Rational{Int64}}}})
    Base.precompile(Tuple{typeof(comm),QuantumAlgebra.σ{Tuple{Int64}},scal{Int64}})
    Base.precompile(Tuple{typeof(comm),QuantumAlgebra.σ{Tuple{Int64}},scal{Rational{Int64}}})
    Base.precompile(Tuple{typeof(comm),QuantumAlgebra.σ{Tuple{Symbol,Symbol}},QuantumAlgebra.σ{Tuple{Symbol,Symbol}}})
    Base.precompile(Tuple{typeof(comm),QuantumAlgebra.σ{Tuple{Symbol}},OpSumAnalytic})
    Base.precompile(Tuple{typeof(comm),QuantumAlgebra.σ{Tuple{Symbol}},QuantumAlgebra.BosonCreate{Tuple{Symbol}}})
    Base.precompile(Tuple{typeof(comm),QuantumAlgebra.σ{Tuple{Symbol}},QuantumAlgebra.BosonDestroy{Tuple{Symbol}}})
    Base.precompile(Tuple{typeof(comm),QuantumAlgebra.σ{Tuple{Symbol}},param{Tuple{Symbol,Symbol}}})
    Base.precompile(Tuple{typeof(comm),QuantumAlgebra.σ{Tuple{Symbol}},param{Tuple{Symbol}}})
    Base.precompile(Tuple{typeof(comm),QuantumAlgebra.σ{Tuple{Symbol}},scal{Complex{Rational{Int64}}}})
    Base.precompile(Tuple{typeof(comm),QuantumAlgebra.σ{Tuple{Symbol}},scal{Rational{Int64}}})
    Base.precompile(Tuple{typeof(comm),param{Tuple{Symbol,Symbol}},OpSumAnalytic})
    Base.precompile(Tuple{typeof(comm),param{Tuple{Symbol,Symbol}},QuantumAlgebra.OpProd})
    Base.precompile(Tuple{typeof(comm),param{Tuple{Symbol}},OpSumAnalytic})
    Base.precompile(Tuple{typeof(comm),param{Tuple{Symbol}},QuantumAlgebra.OpProd})
    Base.precompile(Tuple{typeof(comm),param{Tuple{}},QuantumAlgebra.OpProd})
    Base.precompile(Tuple{typeof(comm),param{Tuple{}},QuantumAlgebra.OpSum})
    Base.precompile(Tuple{typeof(comm),scal{Complex{Int64}},OpSumAnalytic})
    Base.precompile(Tuple{typeof(comm),scal{Complex{Int64}},QuantumAlgebra.OpProd})
    Base.precompile(Tuple{typeof(comm),scal{Complex{Rational{Int64}}},OpSumAnalytic})
    Base.precompile(Tuple{typeof(comm),scal{Complex{Rational{Int64}}},QuantumAlgebra.OpProd})
    Base.precompile(Tuple{typeof(comm),scal{Complex{Rational{Int64}}},QuantumAlgebra.σ{Tuple{Int64}}})
    Base.precompile(Tuple{typeof(comm),scal{Float64},QuantumAlgebra.OpProd})
    Base.precompile(Tuple{typeof(comm),scal{Float64},δ})
    Base.precompile(Tuple{typeof(comm),scal{Int64},OpSumAnalytic})
    Base.precompile(Tuple{typeof(comm),scal{Int64},QuantumAlgebra.OpProd})
    Base.precompile(Tuple{typeof(comm),scal{Rational{Int64}},OpSumAnalytic})
    Base.precompile(Tuple{typeof(comm),scal{Rational{Int64}},QuantumAlgebra.OpProd})
    Base.precompile(Tuple{typeof(comm),scal{Rational{Int64}},QuantumAlgebra.σ{Tuple{Int64}}})
    Base.precompile(Tuple{typeof(comm),δ,QuantumAlgebra.OpProd})
    Base.precompile(Tuple{typeof(convert),Type{QuantumAlgebra.Operator},QuantumAlgebra.OpProd})
    Base.precompile(Tuple{typeof(convert),Type{QuantumAlgebra.Operator},QuantumAlgebra.OpSum})
    Base.precompile(Tuple{typeof(convert),Type{QuantumAlgebra.Operator},QuantumAlgebra.σminus{Tuple{Symbol,Symbol}}})
    Base.precompile(Tuple{typeof(convert),Type{QuantumAlgebra.Operator},QuantumAlgebra.σminus{Tuple{Symbol}}})
    Base.precompile(Tuple{typeof(convert),Type{QuantumAlgebra.Operator},QuantumAlgebra.σminus{Tuple{}}})
    Base.precompile(Tuple{typeof(convert),Type{QuantumAlgebra.Operator},QuantumAlgebra.σ{Tuple{Int64}}})
    Base.precompile(Tuple{typeof(convert),Type{QuantumAlgebra.Operator},QuantumAlgebra.σ{Tuple{Symbol}}})
    Base.precompile(Tuple{typeof(convert),Type{QuantumAlgebra.Operator},scal{Complex{Int64}}})
    Base.precompile(Tuple{typeof(convert),Type{QuantumAlgebra.Operator},scal{Complex{Rational{Int64}}}})
    Base.precompile(Tuple{typeof(convert),Type{QuantumAlgebra.Operator},scal{Rational{Int64}}})
    Base.precompile(Tuple{typeof(copy),Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1},Tuple{Base.OneTo{Int64}},typeof(QuantumAlgebra._sumterm),Tuple{Tuple{Tuple{param{Tuple{}}}},Tuple{Array{QuantumAlgebra.BaseOperator,1}},Array{Any,1}}}})
    Base.precompile(Tuple{typeof(copy),Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1},Tuple{Base.OneTo{Int64}},typeof(QuantumAlgebra._sumterm),Tuple{Tuple{Tuple{scal{Int64},param{Tuple{Int64}}}},Tuple{Array{QuantumAlgebra.σplus{Tuple{Int64}},1}},Array{Any,1}}}})
    Base.precompile(Tuple{typeof(copy),Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1},Tuple{Base.OneTo{Int64}},typeof(QuantumAlgebra._sumterm),Tuple{Tuple{Tuple{scal{Int64},param{Tuple{Int64}}}},Tuple{Array{QuantumAlgebra.σ{Tuple{Int64}},1}},Array{Any,1}}}})
    Base.precompile(Tuple{typeof(copy),Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1},Tuple{Base.OneTo{Int64}},typeof(QuantumAlgebra._sumterm),Tuple{Tuple{Tuple{scal{Int64},param{Tuple{}}}},Tuple{Array{QuantumAlgebra.BosonDestroy{Tuple{Int64}},1}},Array{Any,1}}}})
    Base.precompile(Tuple{typeof(copy),Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1},Tuple{Base.OneTo{Int64}},typeof(QuantumAlgebra._sumterm),Tuple{Tuple{Tuple{scal{Int64}}},Tuple{Array{QuantumAlgebra.BosonDestroy{Tuple{Int64}},1}},Array{Any,1}}}})
    Base.precompile(Tuple{typeof(copy),Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1},Tuple{Base.OneTo{Int64}},typeof(QuantumAlgebra._sumterm),Tuple{Tuple{Tuple{}},Tuple{Array{QuantumAlgebra.BaseOperator,1}},Array{Any,1}}}})
    Base.precompile(Tuple{typeof(copy),Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1},Tuple{Base.OneTo{Int64}},typeof(QuantumAlgebra._sumterm),Tuple{Tuple{Tuple{}},Tuple{Array{QuantumAlgebra.BosonDestroy,1}},Array{Any,1}}}})
    Base.precompile(Tuple{typeof(copy),Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1},Tuple{Base.OneTo{Int64}},typeof(QuantumAlgebra._sumterm),Tuple{Tuple{Tuple{}},Tuple{Array{QuantumAlgebra.BosonDestroy{Tuple{Int64}},1}},Array{Any,1}}}})
    Base.precompile(Tuple{typeof(copy),Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1},Tuple{Base.OneTo{Int64}},typeof(QuantumAlgebra._sumterm),Tuple{Tuple{Tuple{}},Tuple{Array{QuantumAlgebra.σ{Tuple{Symbol}},1}},Array{Any,1}}}})
    Base.precompile(Tuple{typeof(copy),Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple},Nothing,typeof(QuantumAlgebra.sortsentinel),Tuple{Tuple{Int64,Symbol}}}})
    Base.precompile(Tuple{typeof(copy),Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple},Nothing,typeof(QuantumAlgebra.sortsentinel),Tuple{Tuple{Symbol,Symbol}}}})
    Base.precompile(Tuple{typeof(copyto!),Array{QuantumAlgebra.BaseOperator,1},Tuple{QuantumAlgebra.BosonDestroy{Tuple{Symbol}},QuantumAlgebra.BosonCreate{Tuple{Symbol}},QuantumAlgebra.σ{Tuple{Symbol}},QuantumAlgebra.σ{Tuple{Symbol}},QuantumAlgebra.σ{Tuple{Symbol}}}})
    Base.precompile(Tuple{typeof(copyto!),Array{QuantumAlgebra.Operator,1},Tuple{scal{Int64},QuantumAlgebra.OpProd,QuantumAlgebra.OpProd}})
    Base.precompile(Tuple{typeof(copyto!),Array{Tuple{QuantumAlgebra.Operator,QuantumAlgebra.Operator},1},Tuple{Tuple{scal{Int64},scal{Int64}},Tuple{QuantumAlgebra.OpProd,QuantumAlgebra.OpSum},Tuple{QuantumAlgebra.OpProd,scal{Int64}}}})
    Base.precompile(Tuple{typeof(getindex),Array{ExpVal,1},Int64})
    Base.precompile(Tuple{typeof(getproperty),OpSumAnalytic,Symbol})
    Base.precompile(Tuple{typeof(getproperty),δ,Symbol})
    Base.precompile(Tuple{typeof(isless),Corr,ExpVal})
    Base.precompile(Tuple{typeof(isless),ExpVal,Corr})
    Base.precompile(Tuple{typeof(isless),QuantumAlgebra.BosonCreate{Tuple{Symbol}},QuantumAlgebra.BosonDestroy{Tuple{Symbol}}})
    Base.precompile(Tuple{typeof(isless),QuantumAlgebra.BosonCreate{Tuple{Symbol}},QuantumAlgebra.σ{Tuple{Symbol}}})
    Base.precompile(Tuple{typeof(isless),QuantumAlgebra.BosonDestroy{Tuple{Symbol}},QuantumAlgebra.σ{Tuple{Symbol}}})
    Base.precompile(Tuple{typeof(isless),QuantumAlgebra.σ{Tuple{Symbol}},QuantumAlgebra.BosonCreate{Tuple{Symbol}}})
    Base.precompile(Tuple{typeof(isless),QuantumAlgebra.σ{Tuple{Symbol}},QuantumAlgebra.BosonDestroy{Tuple{Symbol}}})
    Base.precompile(Tuple{typeof(iterate),Array{QuantumAlgebra.BaseOperator,1}})
    Base.precompile(Tuple{typeof(iterate),Array{QuantumAlgebra.OpProd,1}})
    Base.precompile(Tuple{typeof(iterate),Array{QuantumAlgebra.Operator,1}})
    Base.precompile(Tuple{typeof(iterate),Array{Tuple{QuantumAlgebra.Operator,QuantumAlgebra.Operator},1}})
    Base.precompile(Tuple{typeof(iterate),QuantumAlgebra.OpProdIter{false},ExpVal})
    Base.precompile(Tuple{typeof(iterate),QuantumAlgebra.OpProdIter{false},QuantumAlgebra.BosonCreate{Tuple{Symbol}}})
    Base.precompile(Tuple{typeof(iterate),QuantumAlgebra.OpProdIter{false},QuantumAlgebra.BosonDestroy{Tuple{Int64}}})
    Base.precompile(Tuple{typeof(iterate),QuantumAlgebra.OpProdIter{false},QuantumAlgebra.BosonDestroy{Tuple{Symbol}}})
    Base.precompile(Tuple{typeof(iterate),QuantumAlgebra.OpProdIter{false},QuantumAlgebra.FermionCreate{Tuple{Symbol}}})
    Base.precompile(Tuple{typeof(iterate),QuantumAlgebra.OpProdIter{false},QuantumAlgebra.FermionDestroy{Tuple{Symbol}}})
    Base.precompile(Tuple{typeof(iterate),QuantumAlgebra.OpProdIter{false},QuantumAlgebra.σminus{Tuple{Int64}}})
    Base.precompile(Tuple{typeof(iterate),QuantumAlgebra.OpProdIter{false},QuantumAlgebra.σminus{Tuple{Symbol,Symbol}}})
    Base.precompile(Tuple{typeof(iterate),QuantumAlgebra.OpProdIter{false},QuantumAlgebra.σminus{Tuple{Symbol}}})
    Base.precompile(Tuple{typeof(iterate),QuantumAlgebra.OpProdIter{false},QuantumAlgebra.σminus{Tuple{}}})
    Base.precompile(Tuple{typeof(iterate),QuantumAlgebra.OpProdIter{false},QuantumAlgebra.σ{Tuple{Int64}}})
    Base.precompile(Tuple{typeof(iterate),QuantumAlgebra.OpProdIter{false},QuantumAlgebra.σ{Tuple{Symbol}}})
    Base.precompile(Tuple{typeof(iterate),QuantumAlgebra.OpProdIter{true},Corr})
    Base.precompile(Tuple{typeof(iterate),QuantumAlgebra.OpProdIter{true},ExpVal})
    Base.precompile(Tuple{typeof(iterate),QuantumAlgebra.OpProdIter{true},QuantumAlgebra.BosonCreate{Tuple{Int64}}})
    Base.precompile(Tuple{typeof(iterate),QuantumAlgebra.OpProdIter{true},QuantumAlgebra.BosonCreate{Tuple{Symbol}}})
    Base.precompile(Tuple{typeof(iterate),QuantumAlgebra.OpProdIter{true},QuantumAlgebra.σ{Tuple{Symbol}}})
    Base.precompile(Tuple{typeof(length),QuantumAlgebra.BosonCreate{Tuple{Int64,Symbol}}})
    Base.precompile(Tuple{typeof(length),QuantumAlgebra.BosonCreate{Tuple{Int64}}})
    Base.precompile(Tuple{typeof(length),QuantumAlgebra.BosonCreate{Tuple{Symbol,Symbol}}})
    Base.precompile(Tuple{typeof(length),QuantumAlgebra.BosonCreate{Tuple{Symbol}}})
    Base.precompile(Tuple{typeof(length),QuantumAlgebra.BosonDestroy{Tuple{Int64}}})
    Base.precompile(Tuple{typeof(length),QuantumAlgebra.BosonDestroy{Tuple{Symbol,Symbol}}})
    Base.precompile(Tuple{typeof(length),QuantumAlgebra.BosonDestroy{Tuple{Symbol}}})
    Base.precompile(Tuple{typeof(length),QuantumAlgebra.FermionCreate{Tuple{Symbol}}})
    Base.precompile(Tuple{typeof(length),QuantumAlgebra.FermionDestroy{Tuple{Symbol}}})
    Base.precompile(Tuple{typeof(length),QuantumAlgebra.σminus{Tuple{Int64}}})
    Base.precompile(Tuple{typeof(length),QuantumAlgebra.σminus{Tuple{Symbol,Symbol}}})
    Base.precompile(Tuple{typeof(length),QuantumAlgebra.σminus{Tuple{Symbol}}})
    Base.precompile(Tuple{typeof(length),QuantumAlgebra.σminus{Tuple{}}})
    Base.precompile(Tuple{typeof(length),QuantumAlgebra.σplus{Tuple{Int64}}})
    Base.precompile(Tuple{typeof(length),QuantumAlgebra.σplus{Tuple{Symbol,Symbol}}})
    Base.precompile(Tuple{typeof(length),QuantumAlgebra.σplus{Tuple{Symbol}}})
    Base.precompile(Tuple{typeof(length),QuantumAlgebra.σplus{Tuple{}}})
    Base.precompile(Tuple{typeof(length),QuantumAlgebra.σ{Tuple{Int64}}})
    Base.precompile(Tuple{typeof(length),QuantumAlgebra.σ{Tuple{Symbol}}})
    Base.precompile(Tuple{typeof(length),param{Tuple{Symbol,Symbol}}})
    Base.precompile(Tuple{typeof(length),param{Tuple{Symbol}}})
    Base.precompile(Tuple{typeof(length),param{Tuple{}}})
    Base.precompile(Tuple{typeof(length),δ})
    Base.precompile(Tuple{typeof(print),Base.GenericIOBuffer{Array{UInt8,1}},QuantumAlgebra.SpatialIndex})
    Base.precompile(Tuple{typeof(prodtuple),QuantumAlgebra.BosonDestroy{Tuple{Int64}}})
    Base.precompile(Tuple{typeof(prodtuples),QuantumAlgebra.OpProd})
    Base.precompile(Tuple{typeof(prodtuples),QuantumAlgebra.OpSum})
    Base.precompile(Tuple{typeof(promote_type),Type{QuantumAlgebra.BosonDestroy{Tuple{Symbol}}},Type{QuantumAlgebra.BaseOperator}})
    Base.precompile(Tuple{typeof(promote_type),Type{Tuple{scal{Int64},scal{Int64}}},Type{Tuple{QuantumAlgebra.OpProd,QuantumAlgebra.Operator}}})
    Base.precompile(Tuple{typeof(setindex!),Array{Corr,1},Corr,Int64})
    Base.precompile(Tuple{typeof(show),Base.GenericIOBuffer{Array{UInt8,1}},String,QuantumAlgebra.OpSum})
    Base.precompile(Tuple{typeof(similar),Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1},Tuple{Base.OneTo{Int64}},typeof(QuantumAlgebra._sumterm),Tuple{Tuple{Tuple{}},Tuple{Array{QuantumAlgebra.BaseOperator,1}},Base.Broadcast.Extruded{Array{Any,1},Tuple{Bool},Tuple{Int64}}}},Type{Corr}})
    Base.precompile(Tuple{typeof(similar),Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1},Tuple{Base.OneTo{Int64}},typeof(QuantumAlgebra._sumterm),Tuple{Tuple{Tuple{}},Tuple{Array{QuantumAlgebra.BosonDestroy,1}},Base.Broadcast.Extruded{Array{Any,1},Tuple{Bool},Tuple{Int64}}}},Type{Corr}})
    Base.precompile(Tuple{typeof(similar),Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1},Tuple{Base.OneTo{Int64}},typeof(QuantumAlgebra._sumterm),Tuple{Tuple{Tuple{}},Tuple{Array{QuantumAlgebra.BosonDestroy{Tuple{Int64}},1}},Base.Broadcast.Extruded{Array{Any,1},Tuple{Bool},Tuple{Int64}}}},Type{Corr}})
    Base.precompile(Tuple{typeof(similar),Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1},Tuple{Base.OneTo{Int64}},typeof(QuantumAlgebra._sumterm),Tuple{Tuple{Tuple{}},Tuple{Array{QuantumAlgebra.σ{Tuple{Symbol}},1}},Base.Broadcast.Extruded{Array{Any,1},Tuple{Bool},Tuple{Int64}}}},Type{Corr}})
    Base.precompile(Tuple{typeof(string),Corr,String,Vararg{Any,N} where N})
    Base.precompile(Tuple{typeof(string),ExpVal,String,Vararg{Any,N} where N})
    Base.precompile(Tuple{typeof(string),QuantumAlgebra.BosonCreate{Tuple{Int64,Symbol}},String,Vararg{Any,N} where N})
    Base.precompile(Tuple{typeof(string),QuantumAlgebra.BosonCreate{Tuple{Int64}},String,Vararg{Any,N} where N})
    Base.precompile(Tuple{typeof(string),QuantumAlgebra.BosonCreate{Tuple{Symbol}},String,Vararg{Any,N} where N})
    Base.precompile(Tuple{typeof(string),QuantumAlgebra.BosonDestroy{Tuple{Int64}},String,Vararg{Any,N} where N})
    Base.precompile(Tuple{typeof(string),QuantumAlgebra.OpProd,String,Vararg{Any,N} where N})
    Base.precompile(Tuple{typeof(string),QuantumAlgebra.OpSum})
    Base.precompile(Tuple{typeof(string),scal{Int64},String,Vararg{Any,N} where N})
    Base.precompile(Tuple{typeof(sumtuple),QuantumAlgebra.BosonDestroy{Tuple{Int64}}})
    Base.precompile(Tuple{typeof(vacA),QuantumAlgebra.BosonCreate{Tuple{Int64}}})
    Base.precompile(Tuple{typeof(vacA),QuantumAlgebra.BosonCreate{Tuple{Symbol}}})
    Base.precompile(Tuple{typeof(vacA),QuantumAlgebra.BosonDestroy{Tuple{Symbol}}})
    Base.precompile(Tuple{typeof(vacA),QuantumAlgebra.FermionCreate{Tuple{Symbol}}})
    Base.precompile(Tuple{typeof(vacA),QuantumAlgebra.FermionDestroy{Tuple{Symbol}}})
    Base.precompile(Tuple{typeof(vacA),QuantumAlgebra.σminus{Tuple{Int64}}})
    Base.precompile(Tuple{typeof(vacA),QuantumAlgebra.σplus{Tuple{Int64}}})
    Base.precompile(Tuple{typeof(vacA),QuantumAlgebra.σplus{Tuple{Symbol}}})
    Base.precompile(Tuple{typeof(vacA),scal{Complex{Rational{Int64}}}})
    Base.precompile(Tuple{typeof(vacA),scal{Float64}})
    Base.precompile(Tuple{typeof(vacA),scal{Int64}})
    Base.precompile(Tuple{typeof(vacA),δ})
    Base.precompile(Tuple{typeof(vacExpVal),OpSumAnalytic})
    Base.precompile(Tuple{typeof(vacExpVal),QuantumAlgebra.OpProd})
    Base.precompile(Tuple{typeof(vacExpVal),QuantumAlgebra.OpSum})
    Base.precompile(Tuple{typeof(vacExpVal),QuantumAlgebra.σplus{Tuple{Int64}}})
    Base.precompile(Tuple{typeof(vacExpVal),QuantumAlgebra.σ{Tuple{Int64}}})
    Base.precompile(Tuple{typeof(σx),Int64})
    Base.precompile(Tuple{typeof(σx),Symbol})
    Base.precompile(Tuple{typeof(σx),Tuple{Symbol,Symbol}})
    Base.precompile(Tuple{typeof(σx)})
end
